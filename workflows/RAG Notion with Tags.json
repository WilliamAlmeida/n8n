{
  "active": false,
  "connections": {
    "Filter Non-Text Content": {
      "main": [
        [
          {
            "node": "Summarize - Concatenate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion - Retrieve Page Content": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create metadata and load content": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Summarize - Concatenate": {
      "main": [
        [
          {
            "node": "Page - Concatenate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Notion Get Page",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Points",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Notion Get Database",
            "type": "main",
            "index": 0
          },
          {
            "node": "Delete Points1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Empty-Content": {
      "main": [
        [
          {
            "node": "FAQ - Concatenate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FAQ - Concatenate": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion Get Page": {
      "main": [
        [
          {
            "node": "Filter Non-Text Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notion Get Database": {
      "main": [
        [
          {
            "node": "Filter Empty-Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Page - Concatenate": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Join Question Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Create metadata and load content",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store2",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "messageInfo": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Join Question Content": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate Keywords2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI3": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store3",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Create metadata and load content1": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store3",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter1": {
      "ai_textSplitter": [
        [
          {
            "node": "Create metadata and load content1",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Keywords2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Generate Keywords2": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate Keywords3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Generate Keywords3",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Generate Keywords2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Auto-fixing Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Generate Keywords3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Auto-fixing Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Auto-fixing Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Generate Keywords3": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "reset memory chat": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar2": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar3": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar4": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store3": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store2": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "baseInfo": {
      "main": [
        [
          {
            "node": "Notion - Retrieve Page Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Summarization Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-17T02:36:39.982Z",
  "id": "n8AQXeZJk8CcXdBd",
  "meta": {
    "templateId": "2290",
    "templateCredsSetupCompleted": true
  },
  "name": "RAG Notion with Tags",
  "nodes": [
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "3f3e65dc-2b26-407c-87e5-52ba3b315fed",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        4140,
        100
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": {
          "__rl": true,
          "value": "https://www.notion.so/iBox-Delivery-1217c386d92280e5b2d2f380fec51672",
          "mode": "url"
        },
        "limit": 2,
        "simplifyOutput": false
      },
      "id": "e4a6f524-e3f5-4d02-949a-8523f2d21965",
      "name": "Notion - Retrieve Page Content",
      "type": "n8n-nodes-base.notion",
      "position": [
        1280,
        220
      ],
      "typeVersion": 2.2,
      "credentials": {
        "notionApi": {
          "id": "eyQfrNhyfucklowG",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "e5b605e5-6d05-4bca-8f19-a859e474620f",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{ $json.type }}",
              "rightValue": "image"
            },
            {
              "id": "c7415859-5ffd-4c78-b497-91a3d6303b6f",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              },
              "leftValue": "={{ $json.type }}",
              "rightValue": "video"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bfebc173-8d4b-4f8f-a625-4622949dd545",
      "name": "Filter Non-Text Content",
      "type": "n8n-nodes-base.filter",
      "position": [
        2240,
        -120
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "pageId",
                "value": "={{ $('Loop Over Items').item.json.id }}"
              },
              {
                "name": "createdTime",
                "value": "={{ $('Loop Over Items').item.json.created_time }}"
              },
              {
                "name": "pageTitle",
                "value": "={{ $('Loop Over Items').item.json[$('Loop Over Items').item.json.type].title }}"
              },
              {
                "name": "pageType",
                "value": "={{ $('Loop Over Items').item.json.type.split('_')[1] }}"
              },
              {
                "name": "keywords",
                "value": "={{ $json.keywords }}"
              }
            ]
          }
        }
      },
      "id": "0e64dbb5-20c1-4b90-b818-a1726aaf5112",
      "name": "Create metadata and load content",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        4220,
        100
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "content",
              "includeEmpty": true,
              "separateBy": "\n"
            }
          ]
        },
        "options": {
          "outputFormat": "separateItems"
        }
      },
      "id": "b04939f9-355a-430b-a069-b11800066313",
      "name": "Summarize - Concatenate",
      "type": "n8n-nodes-base.summarize",
      "position": [
        2440,
        -120
      ],
      "typeVersion": 1,
      "notes": "Summarize - Concatenate Notion's blocks content"
    },
    {
      "parameters": {},
      "id": "dbb03e3d-6cf0-4034-8508-75b739846153",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        920,
        220
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d269790f-c39b-4dd1-aaa2-dabff793ecf9",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1480,
        220
      ]
    },
    {
      "parameters": {
        "amount": 0.5
      },
      "id": "12cf521a-ce7a-487d-96d5-e5fe0262dae4",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4480,
        -100
      ],
      "webhookId": "1cafe18b-c037-46ff-9f89-b3a0cdcea0dc"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.type }}",
                    "rightValue": "=child_page",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "page"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aeb2b436-3a30-43a4-b0e5-d1c9c9fbe70d",
                    "leftValue": "={{ $json.type }}",
                    "rightValue": "child_database",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "database"
            }
          ]
        },
        "options": {}
      },
      "id": "435bab7f-5e39-4a8c-a2bb-bfadcc897df1",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1680,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "e5b605e5-6d05-4bca-8f19-a859e474620f",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.property_answer }}",
              "rightValue": "image"
            },
            {
              "id": "c7415859-5ffd-4c78-b497-91a3d6303b6f",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              },
              "leftValue": "={{ $json.property_answer }}",
              "rightValue": "video"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6f7d1568-c6dc-4341-970a-b622d1b0cbe1",
      "name": "Filter Empty-Content",
      "type": "n8n-nodes-base.filter",
      "position": [
        2240,
        380
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54e5667d-a9d0-443a-9807-d15c93656348",
              "name": "content",
              "value": "={{ $('Filter Empty-Content').item.json.property_question }}\n{{ $('Filter Empty-Content').item.json.property_answer }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b0222ba8-8f4d-4dfa-955d-faee857d9b67",
      "name": "FAQ - Concatenate",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2640,
        380
      ]
    },
    {
      "parameters": {
        "resource": "block",
        "operation": "getAll",
        "blockId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "returnAll": true
      },
      "id": "8a12001e-dbcc-4203-b638-d214b364e016",
      "name": "Notion Get Page",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        2060,
        -120
      ],
      "executeOnce": true,
      "credentials": {
        "notionApi": {
          "id": "eyQfrNhyfucklowG",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "returnAll": true,
        "options": {}
      },
      "id": "9bbe16ef-d0b1-4732-ba66-8d24086e9f3a",
      "name": "Notion Get Database",
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        2060,
        380
      ],
      "executeOnce": true,
      "credentials": {
        "notionApi": {
          "id": "eyQfrNhyfucklowG",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4735dedc-34eb-43e7-81b5-9fba04146f14",
              "name": "instance_name",
              "value": "=notion_ibox",
              "type": "string"
            },
            {
              "id": "bd2fee21-3c39-4a7d-874c-97e46c55e63b",
              "name": "qdrant_api",
              "value": "http://qdrant:6333",
              "type": "string"
            },
            {
              "id": "cdbb4a0c-da8c-4bad-9b48-0353c0ab5640",
              "name": "vector_name",
              "value": "notion_ibox",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f43b4eb1-7cb2-45dd-a73b-6deb772976cf",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1100,
        220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "54e5667d-a9d0-443a-9807-d15c93656348",
              "name": "content",
              "value": "={{ $json.concatenated_content.split('\\n\\n\\n') }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "7609f389-489d-4dc3-874d-d0ab224d0655",
      "name": "Page - Concatenate",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2640,
        -120
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}/points",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"ids\": [\"05bc7f80-cf37-4eee-bad0-a250eecf7212\"],\n  \"with_payload\": [\"content\",\"metadata\"]\n}\n",
        "options": {}
      },
      "id": "82bcb5f9-5033-4589-8fa8-0fa3b63c0986",
      "name": "Retrive Points",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        -160
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "6ea8ccf5-e32a-46ee-b837-8c0af968273a",
      "name": "List Collections",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        980,
        -440
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "11d80639-68fd-424f-ab57-261ee5244c80",
      "name": "Get Collection Details",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        980,
        -300
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}/exists",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "679f8736-83c5-49f8-8c84-938c089fcdd3",
      "name": "Check Collection Existence",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        980,
        -160
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}/points/scroll",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"with_payload\": [\"content\", \"metadata\"],\n    \"filter\": {\n      \"must\": [\n        {\n          \"key\": \"metadata.pageTitle\",\n          \"match\": {\n            \"value\": \"1227c386-d922-80f6-a189-da47933003d0\"\n          }\n        }\n      ]\n    }\n}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "0aa0c35c-0f0c-49cd-b9eb-a505dacc1925",
      "name": "Scroll Points",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        -440
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}/points/delete",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"filter\": {\n      \"must\": [\n        {\n          \"key\": \"metadata.pageId\",\n          \"match\": {\n            \"value\": \"{{ $json.id }}\"\n          }\n        }\n      ]\n    }\n}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "7ac2bbdd-2002-479c-8ae9-cb1d3bc9e03f",
      "name": "Delete Points",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        60
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}/points/scroll",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"with_payload\": [\"content\"],\n    \"filter\": {\n      \"should\": [\n        {\n          \"key\": \"metadata.pageId\",\n          \"match\": {\n            \"value\": \"1227c386-d922-80f6-a189-da47933003d0\"\n          }\n        }\n      ]\n    }\n}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "4ce9a017-8515-4ab1-b6c6-4502b5f8ba20",
      "name": "Scroll Points All",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        -300
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.qdrant_api }}/collections/{{ $('baseInfo').first().json.vector_name }}/points/delete",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "qdrantApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"filter\": {\n      \"must\": [\n        {\n          \"key\": \"metadata.pageId\",\n          \"match\": {\n            \"value\": \"{{ $json.id }}\"\n          }\n        }\n      ]\n    }\n}",
        "options": {}
      },
      "id": "97b366bb-0ae5-489f-bcf5-f50e42269041",
      "name": "Delete Points1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2060,
        560
      ],
      "alwaysOutputData": true,
      "executeOnce": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "04f6ae9f-f5ca-4525-b7c6-eadd8625fc2e",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1520,
        1800
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "document.pageContent",
              "separateBy": "other",
              "customSeparator": "\\n\\n"
            }
          ]
        },
        "fieldsToSplitBy": "document.metadata.pageTitle",
        "options": {
          "continueIfFieldNotFound": true
        }
      },
      "id": "b8647a48-5de3-42e4-a6b0-a240cd2726a3",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        2100,
        840
      ],
      "disabled": true
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "content"
            }
          ]
        },
        "options": {}
      },
      "id": "b66a1b47-5ee9-4dfd-84eb-e10aec98cd52",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2420,
        840
      ],
      "disabled": true
    },
    {
      "parameters": {
        "model": "llama-3.2-3b-preview",
        "options": {
          "temperature": 0
        }
      },
      "id": "da2bc313-62e4-438a-829e-68377c829e67",
      "name": "Groq Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1760,
        1680
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "name": "store_info",
        "description": "informações sobre empresa, planos do sistema fornecido, contatos para suporte humanizado, link para contratação/assinatura, funcionalidades do sistema e etc.",
        "topK": 5
      },
      "id": "a133c64f-53f6-4251-9a91-fb4217cbcbeb",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        1640,
        1560
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "maxTokens": 512,
          "temperature": 0.3
        }
      },
      "id": "8d38f261-3ea9-490d-9b80-b23098d374b5",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1700,
        1380
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "chunkOverlap": 100,
        "options": {
          "splitCode": "markdown"
        }
      },
      "id": "80a09794-0bcc-41d8-a1a2-9710792222e7",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        4200,
        220
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "c9e665b2-f15b-491b-bcb8-42604f47dd35",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1780,
        1020
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "function documentClean(text, processingRule) {…}\n\nconst processingRule = {\n    rules: JSON.stringify({\n        pre_processing_rules: [\n            { id: \"remove_extra_spaces\", enabled: true },\n            { id: \"remove_urls_emails\", enabled: true }\n        ]\n    })\n};\n\nreturn { concatenated_content: documentClean($json.concatenated_content, processingRule) };"
      },
      "id": "6a6414d4-8abe-4bea-923b-d716b5334d85",
      "name": "documentClean",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3760,
        180
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e4a3a0f5-0c9b-4c9b-9b9b-02705b44bc89",
              "name": "conversation",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "facf036f-0a35-4beb-92bb-718034133a95",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        1220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8e2d740b-6861-4b2e-a6c9-aca75b551540",
              "name": "content",
              "value": "={{ $json.document_metadata_pageTitle }}: {{ $json.concatenated_document_pageContent }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "9ca1a45b-e6cb-404d-8b93-7094c2bd4318",
      "name": "Join Question Content",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2260,
        840
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "18d118f1-5967-493c-a31c-479d7b251d47",
      "name": "Loop Over Items1",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3100,
        380
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "50c1e074-ded6-4b26-b4c7-61e981df770e",
      "name": "Embeddings OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        4160,
        600
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "pageId",
                "value": "={{ $('Loop Over Items').item.json.id }}"
              },
              {
                "name": "createdTime",
                "value": "={{ $('Loop Over Items').item.json.created_time }}"
              },
              {
                "name": "pageTitle",
                "value": "={{ $('Loop Over Items').item.json[$('Loop Over Items').item.json.type].title }}"
              },
              {
                "name": "pageType",
                "value": "={{ $('Loop Over Items').item.json.type.split('_')[1] }}"
              },
              {
                "name": "keywords",
                "value": "={{ $json.keywords }}"
              }
            ]
          }
        }
      },
      "id": "fe6284f4-7554-47df-973d-0fe6583e9465",
      "name": "Create metadata and load content1",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        4260,
        600
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkOverlap": 100,
        "options": {
          "splitCode": "markdown"
        }
      },
      "id": "81fe5c5f-44ab-4684-b100-26d32d4b0d9a",
      "name": "Recursive Character Text Splitter1",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        4240,
        720
      ]
    },
    {
      "parameters": {
        "content": "## Qdrant",
        "height": 512.0662957622236,
        "width": 457.9458021385195
      },
      "id": "a5540eb3-5939-4192-ae38-5688fd0f4136",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        940,
        -492.0582304950616
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"keywords\": {\n      \"type\": \"array\",\n      \"description\": \"Palavras-chave individuais relevantes, no máximo 5\",\n      \"maxItems\": 5,\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"keywords\"]\n}"
      },
      "id": "a95b290f-af4e-42c6-a4e4-e54346859c91",
      "name": "Structured Output Parser2",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3400,
        700
      ]
    },
    {
      "parameters": {
        "amount": 2
      },
      "id": "058b174e-9bd4-459f-b928-2ae0bb27f14f",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4480,
        400
      ],
      "webhookId": "1cafe18b-c037-46ff-9f89-b3a0cdcea0dc"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bacc086-2e2a-4af0-abde-5a129cd33b74",
              "name": "content",
              "value": "={{ $('Loop Over Items1').item.json.content }}",
              "type": "string"
            },
            {
              "id": "acffe725-4898-472d-bb42-a1fa27354467",
              "name": "keywords",
              "value": "={{ $json.output?.keywords ? $json.output.keywords.filter(item => item.length > 4).unique().map(item => item.toLowerCase()) : [] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "b5eefe46-912a-476e-a781-3b8141089e95",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4020,
        400
      ]
    },
    {
      "parameters": {},
      "id": "27fff0b8-26d3-44f1-8293-7989daff1857",
      "name": "Auto-fixing Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        3380,
        580
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Você é um especialista em identificação de palavras-chave. Sua tarefa é gerar palavras-chave altamente relevantes, tags e metadados com base no conteúdo fornecido pelo usuário. Separe todos os termos compostos em palavras-chave individuais para maximizar a cobertura semântica. Forneça até 5 itens em cada categoria (keywords, tags, metadatas)."
            }
          ]
        }
      },
      "id": "78fe49a0-6528-4aca-b5e6-5d072eedb56c",
      "name": "Generate Keywords2",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        3280,
        400
      ],
      "retryOnFail": true,
      "notesInFlow": false,
      "waitBetweenTries": 4000,
      "disabled": true
    },
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "maxTokens": 512,
          "temperature": 0.5,
          "maxRetries": 3
        }
      },
      "id": "8f24eb21-a46b-4176-bfcc-fa9aa02b1a4c",
      "name": "OpenAI Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2580,
        1020
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2667be5b-c2ed-4fec-8393-0325fdd8f147",
      "name": "Loop Over Items2",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3100,
        -120
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"keywords\": {\n      \"type\": \"array\",\n      \"maxItems\": 5,\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"keywords\"]\n}"
      },
      "id": "cfddc836-099a-463c-83d4-ab864ea09834",
      "name": "Structured Output Parser3",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        3480,
        220
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9bacc086-2e2a-4af0-abde-5a129cd33b74",
              "name": "content",
              "value": "={{ $('Loop Over Items2').item.json.content }}",
              "type": "string"
            },
            {
              "id": "9cea7355-5c5e-4303-a839-9aff7c5af2f4",
              "name": "keywords",
              "value": "={{ $json.output?.keywords ? $json.output.keywords.filter(item => item.length > 4).unique().map(item => item.toLowerCase()) : [] }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "14531ed4-d3db-4fca-a9f7-52c95e338981",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4020,
        -100
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "content",
        "options": {}
      },
      "id": "388271d6-46f4-4a38-a116-089144996d81",
      "name": "Split Out",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2860,
        -120
      ]
    },
    {
      "parameters": {
        "model": "llama-3.2-90b-text-preview",
        "options": {}
      },
      "id": "db61086b-ecd4-4953-8202-31d867b3d8b3",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        3280,
        240
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {},
      "id": "1a9c5efa-9d72-4c00-b00e-f0d5b78e9c32",
      "name": "Auto-fixing Output Parser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserAutofixing",
      "typeVersion": 1,
      "position": [
        3380,
        100
      ]
    },
    {
      "parameters": {
        "model": "llama-3.2-11b-text-preview",
        "options": {}
      },
      "id": "934e2c51-609f-41e6-a59b-ef281cf983a0",
      "name": "Groq Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        3380,
        240
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "Você é um especialista em identificação de palavras-chave. Sua tarefa é gerar palavras-chave altamente relevantes com base no conteúdo fornecido pelo usuário. Separe todos os termos compostos em palavras-chave individuais para maximizar a cobertura semântica."
            }
          ]
        }
      },
      "id": "644ff65c-0539-46cf-9dae-5f48c3f10c28",
      "name": "Generate Keywords3",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        3280,
        -100
      ],
      "retryOnFail": true,
      "notesInFlow": false,
      "waitBetweenTries": 4000,
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "43d0a942-408e-4b14-841a-7ab2c7a30ba4",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        1360,
        1220
      ],
      "webhookId": "19a29629-c6aa-47ec-82b1-2f4ca64783ad"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "teste",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "7206a58a-118b-48e9-8b91-9e16d882b327",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        2080,
        1440
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "operation": "delete",
        "key": "teste"
      },
      "id": "8f594c47-67f3-4347-ac65-f780b312ef48",
      "name": "reset memory chat",
      "type": "n8n-nodes-base.redisTool",
      "typeVersion": 1,
      "position": [
        1980,
        1440
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "timeMin": "={{ $now.toISO().split('.')[0] }}",
        "timeMax": "={{ $now.plus(5, 'days').toISO().split('.')[0] }}",
        "options": {
          "outputFormat": "availability"
        }
      },
      "id": "44f9a7ac-1e64-4588-8190-102db94fd74e",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2240,
        1460
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "start": "={{ $fromAI('date_init', 'sempre a partir do horário atual') }}",
        "end": "={{ $fromAI('date_end') }}",
        "additionalFields": {
          "description": "={{ $fromAI('description') }}",
          "summary": "={{ $fromAI('summary') }}"
        }
      },
      "id": "43e7f1ea-ceb6-4c43-992e-a8d1814a8a76",
      "name": "Google Calendar1",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2480,
        1460
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "options": {}
      },
      "id": "99a7a71a-03d3-49b6-99b5-872c16867e6a",
      "name": "Google Calendar2",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2360,
        1460
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "eventId": "={{ $fromAI('event_id', 'o id do evento que será cancelado') }}",
        "options": {}
      },
      "id": "eb0f5f8b-b005-44d3-83c4-b24f508f7564",
      "name": "Google Calendar3",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2580,
        1460
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "williamkillerca@gmail.com",
          "mode": "list",
          "cachedResultName": "williamkillerca@hotmail.com"
        },
        "eventId": "={{ $fromAI('event_id', 'o id do evento que será cancelado') }}",
        "updateFields": {}
      },
      "id": "4bb75b44-3cb4-4064-af3c-679636a95396",
      "name": "Google Calendar4",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.1,
      "position": [
        2680,
        1460
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "mQv2XCcAIiyPKV2D",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('baseInfo').item.json.vector_name }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "14fb9cf2-2164-49ac-8558-88cc90a0270c",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        4180,
        -100
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('baseInfo').item.json.vector_name }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "01b8514f-e8f0-473f-8680-604b02cb0c26",
      "name": "Qdrant Vector Store3",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        4180,
        400
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').item.json.conversation }}",
        "messages": {
          "messageValues": [
            {
              "type": "AIMessagePromptTemplate",
              "message": "=\n{{ $json.content.join('\\\\n\\\\n').replaceAll('\\\\n', '\\n') }}\n"
            },
            {
              "message": "=\nVocê é um atendente de suporte e venda da iBox Delivery, seu nome é Tefinha.\n\n## Diretrizes\n- Não responda nada que não tenha certeza do que esteja falando, evite inventar informação que não veio da \"AI\".\n- Use a data e hora atuais no formato ISO para requisições: `{{ $now.toISO() }}`. No entanto, nas respostas para o usuário, utilize o formato mais comum (ex: DD/MM/AAAA).\n- Não informe sobre taxas a não ser que seja perguntado.\n- Utilize emojis de maneira equilibrada para criar uma interação amigável.\n- Ao compartilhar links, forneça-os sem formatação (puro texto).\n- Para respostas longas, divida-as em partes para facilitar a compreensão do usuário.\n- Personalize as respostas usando o nome do usuário, quando possível e apropriado.\n- Seja sempre cordial e educado em suas respostas.\n- Mantenha respostas concisas e claras para evitar mal-entendidos.\n- Se não souber a resposta, seja transparente sobre isso e ofereça alternativas.\n- Nunca ofereça promessas ou garantias que não possam ser cumpridas.\n- Verifique sempre se há mais algo com que o cliente precise de ajuda antes de encerrar a conversa.\n- Adapte sua comunicação ao nível de entendimento do cliente para garantir clareza.\n- Responda às mensagens de forma oportuna e evite atrasos desnecessários.\n- Encoraje sempre a honestidade e a clareza nas comunicações.\n- Evite usar gírias ou linguagem informal em contextos profissionais.\n"
            }
          ]
        }
      },
      "id": "97702057-35be-49db-af74-beda09c4efda",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2580,
        840
      ],
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "mode": "load",
        "qdrantCollection": {
          "__rl": true,
          "value": "notion_ibox",
          "mode": "list",
          "cachedResultName": "notion_ibox"
        },
        "prompt": "={{ $('messageInfo').item.json.conversation }}",
        "topK": 5,
        "options": {
          "searchFilterJson": "{\n  \"should\": [\n    {\n      \"key\": \"metadata.pageType\",\n      \"match\": {\n        \"value\": \"database\"\n      }\n    }\n  ]\n}"
        }
      },
      "id": "ab9808e5-b326-44d0-8eca-f075a84ec464",
      "name": "Qdrant Vector Store2",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        1780,
        840
      ],
      "alwaysOutputData": true,
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "disabled": true,
      "notes": "{\n  \"should\": [\n    {\n      \"key\": \"metadata.keywords\",\n      \"match\": {\n        \"any\": {{ $json.output.keywords.filter(item => item.length > 4).unique().toJsonString() }}\n      }\n    }\n  ]\n}"
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "notion_ibox",
          "mode": "list",
          "cachedResultName": "notion_ibox"
        },
        "options": {}
      },
      "id": "6d0bc975-6ef1-4c8a-86bd-9544ce3c8803",
      "name": "Qdrant Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        1520,
        1680
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      },
      "notes": "{\n  \"should\": [\n    {\n      \"key\": \"metadata.keywords\",\n      \"match\": {\n        \"any\": {{ $json.output.keywords.filter(item => item.length > 4).unique().toJsonString() }}\n      }\n    }\n  ]\n}"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').item.json.conversation }}",
        "options": {
          "systemMessage": "=You are an appointment scheduling helper for consultant named William.\n\n## About William\nWilliam is a São Paulo-based consultant specialising in Laravel, n8n and AI. His website is wmst.com.br.\n\n## About the appointments\nAlways start your conversation by politely asking if the user wants to book a new appointment or enquire about an existing one.\nThe date and time now is {{ $now.toISO() }}. All dates should be given in the ISO format.\nEach appointment should have a start and end date and time relative to today's date in the future.\nAll appointments are strictly 30mins long.\n\n## To book an appointment\n* Before booking an appointment, ask if the user has an existing appointment.\n* Ensure you have the user's email address, full name and proposed date, preferred start time before booking an appointment.\n* Always check the calendar availability of the user's proposed date and time. If there is no availability, suggest the next available appointment slot.\n* If the appointment booking is successful, notify the user that an email confirmation will be sent to their provided email address.\n* If the appointment booking is unsuccessful, notify the user that you are unable to complete their request at the moment and to try again later.\n\n## To find an existing appointment\n* Ask the user for their email address and date of the existing booking\n* Use the user's email and date to search for the existing booking.\n* If the user's email and date do not match the results or no results are returned, then the existing booking is not found.\n* If the existing booking is not found, notify the user and suggest a new booking should be made.\n\n# To reschedule or cancel an existing appointment\n* First find the existing appointment so that you may obtain the existing appointment's booking ID.\n* Display this booking ID to the user.\n* Use this booking ID to reschedule or cancel an existing appointment.\n* If an existing appointment ID is not found or given, then notify the user that it is not possible to complete their request at this time and they should contact via email.\n* when user wants to cancel an appointment, ask for a reason for the cancellation and suggest rescheduling as an alternative. Confirm with user before cancelling an appointment.\n\n## About the user\nThe user's session id is {{ $json.sessionId }}",
          "maxIterations": 10,
          "returnIntermediateSteps": false
        }
      },
      "id": "2f9d4095-de7b-48db-bc02-ac4d85b36802",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1700,
        1220
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 0.5,
          "maxRetries": 1
        }
      },
      "id": "517ac3ac-e9e9-4919-ad44-8e369ef07595",
      "name": "OpenAI Chat Model4",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        3300,
        1260
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab2c064b-6545-45d4-b050-3b3afcfc97d2",
              "name": "conteuto",
              "value": "I’ve been a BYOND player and developer since August 19, 2002. My BYOND key could drink legally in the USA. Humor me as I share with the community what has made BYOND so compelling to me, why I think it has got an incredible potential and is going to be successful at attracting and retaining passionate developers which will make some incredible games.  I'm also going to speak about what I think needs to change for BYOND to be successful.  BYOND as an engine has no peers at what it does. People will reference Godot, Unity, Unreal Engine, and others as real threats to BYOND’s future. Those certainly are great game engines, but they don’t interfere with the niche that BYOND is focused on: accessible multiplayer games.  Other game engines, even with recent improvements require a lot of effort to handle the networking between client and server. This makes Godot a perfectly adequate place for somebody learning to build a singleplayer game, but making a multiplayer game is a nonstarter for somebody like me. Anybody looking to make an online game without investing a huge percent of their development time into the networking elements, are going to find BYOND the best option.  There is also a misconception that BYOND has a seriously limited engine, but with the introduction of pixel movement, particles, planes, transformations, partial multithreading on servers and vectors/pixlocs they have really increased the ceiling of what a BYOND game can do. If you think BYOND is limiting your favorite game, its likely the developer refusing the learn to leverage new features. Very few projects now leverage all of what BYOND can do, or even close.  Due to how easy it is to create a game, launch it online and generate a community of hundreds of players, BYOND has a key advantage: Instant gratification.  You can develop a game while concurrently enjoying a community of fans who will test your code, provide feedback and generally appreciate every feature implemented. This isn't typical in the world of game development, on BYOND you can work on your projects in increments and enjoy the fruit of your labour as you work. I can't replicate this feedback loop elsewhere, my little test projects on Unity didn't garner an audience, everything I've worked on elsewhere just never saw the light of day because the audience and immediate viability just wasn't there.  If you find yourself starting and never finishing several projects, solutions like BYOND make projects digestible enough to be realistic. As a parent with a busy career and personal life I see huge value in being able to make things in my free time and see it playable, enjoyed immediately. There is a huge audience of interested game developers who would be well suited to this community:  1) Rookie developers who don't know how to make a game and want to learn,  2) Hobby developers who want to prototype or get a game concept into playable form without making it their full time job,  3) Strong developers who just want to make games, and don't want to deal with the overhead of back-end network systems, marketing, web hosting, etc.  We as a community can be very self defeating and negative. There is a reason we have so many long-term developers here, BYOND works very well in the niche its carved out.  Then there is another major consideration. BYOND's ownership is not squeezing the community for every dime its worth. In fact, the development of BYOND is entirely financed by donations and has effectively no mandatory pricing whatsoever. There are no barriers to entry, no revenue sharing or up front costs. You should for these reasons donate to BYOND, unlike developing for Unity where you could spend years making a game and be impacted by some aggressive licensing model fiasco.  The perception of BYOND's success is a bit problematic. Lots of people would assert that BYOND has lost some momentum and from a players perspective, that might has some validity. The number of players has fallen in many communities over the past decade, with the SS13 community going the opposite direction and growing and being an amazing example for BYOND. Players and popular games are a lagging indicator of what drives real growth and success here. The important variable for BYOND prospectively is the growth of Developers. If you build it, they will come.  BYOND hasn't always had the most conducive environment for attracting Developers. Huge influxes of fangame players don't necessarily translate to a fun place to make games. Engine limitations or just clunky problems have been a headwind over the years to making good games. The engine with 516 has reached a level of viability and maturity that's very different from how things were back in 2002.  There has been a very intentional effort to cultivate a more inclusive and supportive space for developers, particularly on the unofficial BYOND discord. I can see this working, the seeds of a positive development culture are taking root and I'm seeing some exceptional talent develop. This approach, to support and create a positive space for developers will work.  If you are a player wondering what the future looks like for BYOND, know that we have the tools to make games that are far better than what you might be familiar with. Expect that the learning curve to make higher end multiplayer games is flattening and passionate community leaders like Ter13, F0lak, Kaiochao and of course Lummox Jr himself are putting in a lot of time to teach, support, make libraries and provide examples so that rising talent will be successful.  If you are considering making a project in BYOND, get on the discord and start. Ask questions, make mistakes, the collaborative culture is at an all time high. The engine is ready for a great game, be ambitious and creative.  What does BYOND need to do differently going forward? There are a few key things:  1. The way people communicate has moved on from the Web 1.0 days. The main signpost for this community which is BYOND.com needs to remove some unnecessary and underutilized baggage. New people coming to this site might think its dead. This is partially how libraries and demos are sorted algorithmically to not prioritize new and relevant/rising innovations but rather the all time most popular items. The game sorting doesn't quite result in the most active and popular games rising to the top as the algorithm again favors an \"all time\" popularity rather than momentum. The presence of \"recent updates\" don't reflect the flurry of activity and really, a lot of the community communication should live in Discord where it is most effective. The site needs to become a concise pitch to developers, download link, highlight of role model projects and then access to a more relevant library, demo and games page.  2. We need more outreach to other communities. With a more modern website that has more of a pitch to developers as its initial focus, we can go to game developer subreddits, we can post about BYOND or our projects on YouTube, etc. The merits of this engine are not well broadcast and we all play a part in being cheerleaders for it.  3. Make more games and share them more broadly. There is a lingering problem with creators not understanding copyright and trademark law and the community damage that has come with enforcement of these things. We as a community need to compile some thought leadership on what we can't do legally because rookie developers are not lawyers. There was a huge problem with people misconstruing fair-use laws and bad advice turned into takedowns, demoralization and a loss of broader community engagement. Let's keep making games that take inspiration from our favorite source material, but know what the law is and abide by it in all instances.  The potential of BYOND with the tools we have prospectively, is immense. The culture is better and the support has never been more available.  Lets make games. If anybody wants to show off some of the super cool stuff I see daily in the Discord, especially in the hall of fame - feel free to gloat and post to this entry to help me make my point.  Get on the discord: https://discord.gg/WUetUEVdk4  GOA is rebooting as SOA with a major update and launch in the coming months. I'll do a separate update for that. Largest update in 14 years. https://www.byond.com/games/Masterdan/ShinobiOnlineAdventure [Quote] [Reply]    Yesterday, 7:07 pm (Edited yesterday, 7:23 pm) Meme01  https://www.youtube.com/watch?v=vliaMAGpRt0  EDIT:  Good post though. MAKGAM.  [Quote] [Reply]    Yesterday, 9:00 pm (Edited yesterday, 9:35 pm) Ter13  #1 helper this month! #2 helper of all time! #5 contributor of all time! Dan, it's been a pleasure having you back. We never interacted back in the day, but god damn it's been great to meet adult you and really vibe on making cool stuff and talking about high level community management. You are a true gentleman and a scholar.  Regarding BYONDiscord: To address the community work we've been collectively doing over the last two years, and why now is the best time to jump back into BYOND's reformed and matured community:  One of the things that I've been really fixated on with this community, is how much damage we did to one another over the years by forgetting that the forums are a public space, and new users can see everything we post. We forget that not everyone cares about drama that happened 15 years ago. We forget that not everyone is a product of our exact life experiences, and we forget to consider the people who are watching quietly and deciding whether the space they are witnessing is a place they want to put themselves into.  While I've by no means been a perfect ambassador for my community, everything I've done has been focused on creating a positive and inclusive environment where developers can interact safely, without having to trudge through streets swimming in the raw sewage of misogyny, homophobia, racism, and other bigotries that serve as nothing but a distraction from onboarding new users. I've tried to put a stop to the toxic pattern of bullying that this community enabled over time. To ensure that people are aware of who the perpetrators of this are up front before they get involved in a community that will rope them into these toxic patterns. I don't like seeing these communities inviting users into the pattern of dividing their valuable development time engaging in culture war nonsense and the alienation and harassment of new users instead of cultivating real skills and relationships with people that care about what they do.  I'm glad that the consensus that this work has been worth the trouble we went through over the last couple of years is growing. Thank you so much for the recognition and the kind words. You're one of the best folks we've picked up lately, and I am brimming with excitement for what you are about to drop on all of our heads.  Regarding the website: As for discussing BYOND's problems, I really prefer a solution-oriented, minimalist approach. BYOND's engine and community is now in the best shape it's ever been in. The site, however, doesn't do a very good job of representing that. Let's examine what a minimal, simple solution that we can all achieve today would look like:  Prominent links to discord on game hubs and software about pages. Unfortunately, we can't quite do this one ourselves, as sticky forum posts in a dead forum are not very prominent. New user onboarding resources We can make these ourselves and feature them. See my section on the tutorials forum in my discord. A better algorithm for game listings and demos and libraries. We cannot do this one ourselves, but we can collectively advocate for specific formulas to determine how games are ranked on the hub, the downloads section, and the demos/libraries sections. De-emphasis and compression of the site to just the essential, trafficked components. We cannot do this one entirely by ourselves, but we can help emphasize the useful parts of the BYOND website in our discord communities.   Discord collaboration: I've built some tools to help on this front. Gurubot is my discord's everything solution, and it has the ability to create embeds that show your game's live status on the hub, and create links directly to your game. Anyone who contacts me regarding getting a server widget for their game's hub will receive assistance setting it up.  The widget updates every 5 minutes, updating the stats about your game in a discord embed, and setting up clickable play links to your game's servers.    The GuruBot Hub Widget will transition any user that clicks on the widget to a landing page, that might look a bit like this:    Once the user is at this redirect, their pager will be opened after a few seconds, and they will connect to your game.  The redirect page offers users assistance if they don't have BYOND installed, and some information on the data I collect (none!) and how to contact me with questions regarding the service (don't). While it links to BYONDiscord by default, I've released a copy of the hub redirect that is fully customizable. You can host it in your BYOND member files if you are a BYOND subscriber, or on your own website if you own one.  I've also got a live hub monitor that keeps track of all the live games on BYOND's hub, and provides links to their hub pages in BYONDiscord! Games are listed even if they don't have a hub, or are unpublished, so my discord does not make a distinction between fangames or regular games. I have a custom sort for them that is solely based on activity rather than fan metrics.    This allows better user onboarding for the community, and helps to de-emphasize the dated website, while still harnessing the tools Lummox has provided us.  I'm more than willing to share all of these tools with the community, and have shared them with Atomix so he can integrate them in the old BYOND discord.  Onboarding users: Realistically, we should be doing the work of onboarding users ourselves. Your discord, your rules. We set up a Tutorials and Snippets forum in our discord that allows anyone in the community to post useful resources they have found. I do need to do more on this front; I would really like to set up a few more tools for transitioning newly found discord users to the software by creating a user onboarding resources list in the discord. This would walk users through an overview of what BYOND is, how to install it, and how to get started making a simple game, as well as teaching them which additional tools they have available to them, like the developer reference, the bug reports and feature requests forums, and a curated list of demos and libraries that we, as a community decide are worth using in 2024.  All of this can be done without Lummox's help, and is being worked on by fantastic members in our community. For instance, F0lak has created an open developer reference that anyone with a github account can edit. He's even written a discord bot for quickly searching for and linking to articles in the reference, and he's working on a tool that will convert that open reference back into a compiled html file that Lummox can use to update the actual reference with community examples.  Resource listings: The current algorithm for resource listing is no longer reflective of the reality of engagement with the site. The resources need a new way of ranking themselves by user engagements. I think for demos/libraries, ranking them by downloads over the last 24 months would be the best way forward. For games though, I think we just need to break the hub listing into two categories: live, and recent plays. Games should rank themselves across a 6 month average of activity. I think the live listing should just be who has the most players in all servers for that game at one time. For games that aren't hosted server-wise, I think recent downloads would also be a fairly good metric for popularity. For those games not distributing themselves through the website, such as via steam or itch, their frontage being dominantly focused on their steam listing would more or less moot their need to be listed highly here.  Call to action: Look y'all, for years we've asked what Lummox can do for us. We are here. We're gonna be here forever. Let's work together to make where we're at a nicer place to be. Let's make the shit we wanted to have when we were just starting out. Let's help some new developers have a good time learning useful life skills with DM. Fixating on only the negatives only blinds you to the solutions standing directly behind them. Let's do what we can do today to support each other in the creation of assets and spaces for ourselves and others. [Quote] [Reply]    Yesterday, 9:28 pm Masterdan  #7 contributor in the last month! Agree wholeheartedly Ter. You are doing the lions share of building the community and we need others to step up rather than feel like everything needs to be done by Lummox or yourself. I'll definitely use Gurubot for my projects.  One thing I highly recommend, and its up to Lummox of course, is making the BYOND Discord official and linking it prominently on the BYOND.com website. I know we love to work around BYOND proper without interrupting Lummox's flow, but as we've seen from vectors and pixlocs - there is power in baking in what the community builds for itself into the offical product. So much of the BYOND whitepaper, blue book, etc should be superseded with some of the super cool content that's more up to date that lives in the Discord and oref. So I really think the community needs to do its part - but Lummox please make legitimate and prominently highlight the things that work so the community can find it more easily. [Quote] [Reply]    1:26 am Tsukumogami  Is there any reason to keep all that super cool, more up to date content hostage on a third party application? I think at least some part of the community might appreciate being able to find tips on how to use BYOND on the BYOND site. I'd purge Unity off my PC in a second if I downloaded it, and then found out that I need to wade through discord sewage to access 99.9% of its actual up to date reference material because the discord server's owner considers HTML pages dated and uncool. Interestingly, Unity somehow manages that despite having a discord link on its site. Some impressive stuff.  As for BYOND's present and future, the only thing that it has going for it is it being a working combination of a game engine and a pager for online games, and it's been sitting on this advantage doing nothing ever since the webclient idea fell through. Networking is pretty easy to implement in both UE and Unity projects (it's so easy that even RPG Maker has built-in networking now that it's made in Unity). But, somehow, despite both of them going hard into the service territory with things like asset marketplaces, neither seems to have its own version of something like itch.io grafted on for a one stop shop to both develop your own DBZ rip and then hop onto somebody else's when you're done for the day. Maybe those companies are shortsighted, or maybe they just deemed it a legal liability and don't want to get swarmed with Dragonball sex games and the resulting lawsuits.  Regardless of the reason, the end result could have been a solid W for BYOND if there wasn't another project that's conspicuously missing from OP's post: Roblox. Game engine so simple, that 10 year olds can and do use it to make online games? Check. A built in game browser? Check. Incompatible with Linux? Check. Bleach fangames that migrated from BYOND? Check. Currently popular things that stand no chance to get any attention on BYOND because the only people still using it are there either for SS13 or for some anime from over 20 years ago?    (As an aside, the optimism regarding SS13 may be misrepresented a bit, as SS14 has been steadily gaining traction over the years)  At a glance, Roblox is like BYOND, but better. It occupies some of the same niches as BYOND, plus it can do 3D and has a working webclient. Incidentally, it also doesn't have a discord link on its website. The only things that BYOND has over it, at least from among the points listed in the OP, are the facts that Roblox does squeeze its community hard for every dime it can, and then some, and the licensing uncertainty that comes with hosting your projects there. One is a major inconvenience, but there is also the silver lining of it being so streamlined that it's almost foolproof to use when you want to (they are trying to take money from elementary school kids worldwide, after all). Is networking so hard to figure out that you have no choice to to opt for BYOND over the alternatives? Now try to monetize your finished product, surely that's going to be easy. And if you can comprehend the licensing issue, you probably are smart enough to consider using a more powerful game engine and setting up proper game servers yourself. According to a friend who screwed around in UE, it makes it relatively easy even if you aren't much of a coder.  Now, I can't say how much this discord landgrab will help with anything, but I'm skeptical. It will help the discord owners strengthen their influence over the platform, but I doubt that that's the point they are trying to make.  I can't suggest anything that I think would be a guaranteed popularity boost for BYOND, and I don't have a discord server to promote, but I think that expanding to Linux could at least help set BYOND apart from its biggest rival (which did work under WINE until recently), and publishing the up to date documentation instead of using it as a bargaining chip to promote your discord server might potentially benefit the would-be developers. Who knows, maybe the front page will have games that use vectors and pixlocs then. [Quote] [Reply]    1:40 am (Edited at 3:43 am) Ter13  #1 helper this month! #2 helper of all time! #5 contributor of all time! Is there any reason to keep all that super cool, more up to date content hostage on a third party application?  This is an absolutely bizarre accusation. Especially in the context of the fact that the resources you are claiming are being held hostage are crossposted on the site:  Tsukumogami wrote: Who knows, maybe the front page will have games that use vectors and pixlocs then.  It's pretty strange to reference the resources I create and post publicly to this site, for the benefit of the community, while calling them gatekept. No one is held back from posting anything from BYONDiscord anywhere else. Do you know why they choose not to do so? Because:  This is exactly the energy that makes people not want to engage with the site. If you want nice things in a community, you have to start by treating others with dignity. [Quote] [Reply]    1:55 am Masterdan  #7 contributor in the last month! I do want to respond to you Tsukumogami, I don't agree with a lot of what you said but you make good points so i'll do my best to address them well.  Moving content from BYOND off to a third party is not a thing thats happened. Lots of the more chat room / forum style conversations are happening there because its a better medium than an oldschool website. It has screen sharing, video/audio chats, file sharing, etc. That wasnt really the point I was making, the point I was making was simply to remove old clutter and focus the content of the site down to the best highlights so it paints a better picture of what BYOND has to offer. I do think that the Discord should be made official and encouraged for use where Discord is more effective than things like the pager system and forum. If you want to assert that BYOND should double down on the pager/forum communication paradigm.. thats a difference of opinion. I think building your own version of things that somebody else has done 10 times better is a foolish allocation of resources.  The purpose of the website should be in curation, taking the best things from the Discord and community and putting it on display for ease of access and to show a prospective community what the best of us is.  Now Roblox. I did forget about Roblox. Yes Roblox is indisputably a similar product to BYOND in a lot of ways. Its easy multiplayer, it is wildly successful with kids, you can play on a tablet. It is in a lot of ways eating BYONDs lunch. There is a very large niche of people Roblox does not serve: people who don't like Roblox.  First of all, Roblox goes for this voxel / lego 3d aesthetic which is not everybody's cup of tea. The other element is 3d in general isn't the type of game lots of indie developers want to make. The assertion that Unity and RPG Maker have easy online is.. relative. Its getting easier, but making an online game in those platforms is of order of magnitude more work than doing so here. I'm not saying we have all of our angles covered, but we have a niche and its a good one - easy 2D multiplayer games.  A silver lining to take from this is, Roblox is a 26.7 billion dollar company. BYOND doesn't need to be as big as Roblox to be wildly successful. And I would assert too that because Roblox games tend to be ass, BYOND can absolutely compete with the outputs of the engine with the scummy, low quality gameplay of Roblox - all day.  I still would assert that BYOND is the right platform for most people looking to make a 2D multiplayer game as a hobby. And there is actually capability to turn that hobby into a full commercial steam launch. So sure there are things to consider and threats to BYONDs popularity, but if you are looking for an entry point to make a 2D online game? BYOND is a no brainer.  It is FASCINATING though, that the 27 Billion dollar company has these huge blatant anime games that have thousands of players and can somehow monetize and scale that business model when BYOND couldn't. I'm not sure how that works but it's certainly unfair. [Quote] [Reply]    4:47 am In response to Tsukumogami Lummox JR  #3 helper of all time! Well that was a lot of unnecessary toxicity. There's useful criticism and then there's... that.  This is not the type of post that's encouraged here. You're mostly just crapping all over the original post's point with nothing useful to say. And to be crystal clear, I'm not saying this because BYOND itself is catching most of the turd-spray, but because you're spraying turds. I'll quote the guidelines again for your convenience.  Show good faith. This means don't be dishonest, malicious, generally a poison pill. Treat other users with good faith, and whenever possible give them the benefit of the doubt that they're trying to do the same.  That was poison-pill behavior. You had nothing helpful to add, just a lot of nastiness. Let's be done with that. [Quote] [Reply]    5:09 am (Edited at 9:41 am) Ter13  #1 helper this month! #2 helper of all time! #5 contributor of all time! To make my point clearer about using discord to help promote the software was to foster positive engagement with users directly, one on one, and collaboratively produce resources for the community that then get posted here on the site once they are in a state that is ready for dissemination. The site is great for stuff that's going to stick around for a while. It's really, really bad at fostering positive, short-form engagement and brewing new concepts.  Our best resource is our people, and if we don't engage with them, we're done here. The discord hosts create the environments their people want to see. They stock their communities their way. They organize their resources as fits their community's needs the best. That's what I'm doing over in BYONDiscord. The resources I produce always get posted here, and then linked into my discord in an organized, accessible fashion so they can be quickly pointed to during a more ephemeral discussion. We use the discord forum channels to help keep long-term resources available.  My call to action is basically just pointing out that you don't need Lummox to fix the site to get a better developer and user experience. We can create that ourselves. It would be wonderful if the site was improved, yes, and many of us are actively contributing to that labor. But acting like the community cannot improve until the site improves is dead wrong. We're that labor, and we've gotta actively engage in doing it, instead of hurling turds at one another's efforts.  We've already proven we can improve the community on our own. The whole time BYOND has existed, the best resources have been user generated. That has always been the case, and will always be the case. This site has always been about fostering the creation of small, specialized subcommunities. Everything that this site did well was in that direction. I only see arguing against the modern continuation of exactly that: Self-guided, self-cultured communities of hobbyists working collaboratively on labors of love to be a fundamental misunderstanding of what BYOND is.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c5674baa-e62d-43e7-9287-5ab1d753d635",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3100,
        1080
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "6f846d95-7564-44f2-a168-76ae5f36deb2",
      "name": "Summarization Chain",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "typeVersion": 2,
      "position": [
        3280,
        1080
      ]
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-10-23T15:02:10.266Z",
  "versionId": "f59a789a-6956-4c2c-9808-36eb6c17cab3"
}