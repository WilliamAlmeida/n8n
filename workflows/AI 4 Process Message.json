{
  "active": false,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Media": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Media",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Beautify URL": {
      "main": [
        [
          {
            "node": "Fix Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Categorizing Message": {
      "main": [
        [
          {
            "node": "Split Out Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text": {
      "main": [
        [
          {
            "node": "Categorizing Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Status": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Address": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Delivery Fee": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get vector store": {
      "main": [
        [
          {
            "node": "has vector store?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has vector store?": {
      "main": [
        [
          {
            "node": "vector store",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch vector store": {
      "main": [
        [
          {
            "node": "has vector store? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has vector store? 2": {
      "main": [
        [
          {
            "node": "set vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set vector store": {
      "main": [
        [
          {
            "node": "vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete vector store": {
      "main": [
        [
          {
            "node": "get vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vector store": {
      "main": [
        [
          {
            "node": "delete user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Status Pedido": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reset memo": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Link Login": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Account User": {
      "main": [
        [
          {
            "node": "set user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set user account": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get user account": {
      "main": [
        [
          {
            "node": "has user account?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has user account?": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Account User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete user account": {
      "main": [
        [
          {
            "node": "get user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "config prompt": {
      "main": [
        [
          {
            "node": "reset memo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory 2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "chatInput": {
      "main": [
        [
          {
            "node": "chatConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Messages": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Beautify URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-27T18:14:53.380Z",
  "id": "BZ9o5Ey8QpAJn1OB",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 4 Process Message",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "caa3a8be-f9f5-4a70-ad79-d735a1556b03",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        5260,
        1800
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gera a Resposta\nObs.: Seleciona a Base de Dados a ser usada de acordo com a Empresa de maneira Dinâmica e a usa para responder a solicitação",
        "height": 584.136756451777,
        "width": 768.3093052403206
      },
      "id": "9e0f2dda-1bde-4c91-a497-98a1c2b3354a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5060,
        1520
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "7738dc21-5347-480e-9e3c-42d891d5d9d9",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        5380,
        1800
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('messageInfo').first().json.evo_api }}/message/sendText/{{ $('messageInfo').first().json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}\",\n  \"text\": \"{{ $json.output.content.replace(/^\\n+/g, '') }}\",\n  \"delay\": 2000,\n  \"linkPreview\": true\n} ",
        "options": {}
      },
      "id": "4910e557-13fe-4be2-914d-98517841d501",
      "name": "Send Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7100,
        1900
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "T5OqvislWbgDr9Ek",
          "name": "Evolution Api Key"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "c2673b5a-71a7-46d4-9b6a-cec0ec064f93",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        6740,
        1620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('messageInfo').first().json.evo_api }}/message/sendMedia/{{ $('messageInfo').first().json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}\",\n  \"mediatype\": \"{{ $json.output.type }}\",\n  \"mimetype\": \"image/png\",\n  \"caption\": \"{{ $json.output.caption.replace(/^\\n+/g, '') ?? '' }}\",\n  \"media\": \"{{ $json.output.url }}\",\n  \"fileName\": \"{{ $json.output.url.split('/').last().replace($json.output.url.split('.').last(), 'png') }}\",\n  \"delay\": 2000\n} ",
        "options": {}
      },
      "id": "7f66c178-f8a3-4564-be52-123b96296fb7",
      "name": "Send Media",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7100,
        1640
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "T5OqvislWbgDr9Ek",
          "name": "Evolution Api Key"
        }
      }
    },
    {
      "parameters": {
        "content": "# Enviar o Resultado para o Whatsapp",
        "height": 610.094292552082,
        "width": 661.5465394209826,
        "color": 4
      },
      "id": "b4242adb-80e6-44df-b6ad-f959d80b133d",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6640,
        1520
      ]
    },
    {
      "parameters": {
        "content": "# Faz o tratamento da Resposta",
        "height": 286.6572100709807,
        "width": 702.7265374935415,
        "color": 5
      },
      "id": "836105db-6b6e-463f-bea9-eeb02808b625",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5871,
        1520
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "bd6c6ac4-8ebd-4d14-9935-1fd270106c48",
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8a8907db-2f29-4fc3-a50d-264a2c5d015e",
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "=video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video"
            }
          ]
        },
        "options": {}
      },
      "id": "1bff5d6f-3969-4611-8ba9-4e9ba445655a",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        6880,
        1840
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Função 1: Remove caption de links que não são imagens ou vídeos\nfunction removeCaptionFromLinks(text) {\n  // Expressão regular para identificar links que não são imagens ou vídeos\n  const regexLinks = /\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+)\\)/gi;\n  \n  return text.replace(regexLinks, (match, caption, url) => {\n    // Se o link não for de imagem ou vídeo, remove o caption e mantém só a URL\n    if (!url.match(/\\.(jpeg|jpg|png|gif|bmp|webp|avif|mp4|mov|avi|wmv)$/i)) {\n      return url;\n    }\n    return match; // Mantém o link inalterado se for uma imagem ou vídeo\n  });\n}\n\nconst message = $input.item.json.output;\n\n// Primeira função: remove captions de links não-imagens/vídeos\ncleanedMessage = removeCaptionFromLinks(message);\n\nreturn { output: cleanedMessage };"
      },
      "id": "5345dd18-e49b-4550-92f3-b2ee39b6751a",
      "name": "Beautify URL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5940,
        1620
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const message = $input.item.json.output;\n\nconst regex = /(?:\\!\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif)))/gi;\n\nconst parts = [];\nlet lastIndex = 0;\nlet match;\n\nwhile ((match = regex.exec(message)) !== null) {\n  // Adiciona o texto entre os matches\n  if (match.index > lastIndex) {\n    let content = message.slice(lastIndex, match.index).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n    // Remove o '-' desnecessário no final do texto, se presente\n    if (content.endsWith('-')) {\n      content = content.slice(0, -1).trim();\n    }\n    if (content) {\n      content = content.replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n      parts.push({ type: 'text', content });\n    }\n  }\n\n  // Adiciona as imagens ou links encontrados\n  if (match[1]) {\n    parts.push({ type: 'image', caption: match[1], url: match[2] });\n  } else if (match[3]) {\n    parts.push({ type: 'image', caption: match[3], url: match[4] });\n  } else if (match[5] || match[6]) {\n    parts.push({ type: 'image', url: match[5] || match[6] });\n  }\n\n  // Atualiza o último índice processado\n  lastIndex = regex.lastIndex;\n}\n\n// Adiciona o texto final, se houver\nif (lastIndex < message.length) {\n  let finalContent = message.slice(lastIndex).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n  if (finalContent.endsWith('-')) {\n    finalContent = finalContent.slice(0, -1).trim();\n  }\n  if (finalContent) {\n    parts.push({ type: 'text', content: finalContent });\n  }\n}\n\n// Verifica se a parte é um vídeo e adiciona\nparts.forEach(part => {\n  if (part.type === 'url' && part.url.match(/\\.(mp4|mov|avi|wmv)$/)) {\n    part.type = 'video';\n  }\n});\n\nreturn { output: parts };\n"
      },
      "id": "7a0aaba7-7da9-45e4-a2c1-28578502eca5",
      "name": "Categorizing Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6260,
        1620
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "b652c820-d6da-440b-bfa0-176bef28c388",
      "name": "Split Out Messages",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        6420,
        1620
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*').replace(/(?<!\\\\)\"/g, '\\\\\"') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "59428878-6ac2-4da8-bc3f-a8dab4111cb6",
      "name": "Fix Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6100,
        1620
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar status da loja, se ela esta aberta ou fechada, funcionando no momento ou não",
        "url": "=https://ibox.delivery/api/whatsapp/store",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "instance_name",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.instance }}"
            },
            {
              "name": "block",
              "valueProvider": "fieldValue",
              "value": "status"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "status"
      },
      "id": "0c10c1f3-e58e-4d52-b3ac-407d499fc7c0",
      "name": "Get Store Status",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5920,
        1940
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar endereço da loja",
        "url": "=https://ibox.delivery/api/whatsapp/store",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "instance_name",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.instance }}"
            },
            {
              "name": "block",
              "valueProvider": "fieldValue",
              "value": "address"
            }
          ]
        },
        "optimizeResponse": true
      },
      "id": "4170408a-d68d-42ac-a08d-21721113ea96",
      "name": "Get Store Address",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6040,
        1940
      ],
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar taxas de entrega cobrada pela loja, consultar tempo médio das entregas, valor mínimo, se entrega em outras localidades que não estejam registradas",
        "url": "=https://ibox.delivery/api/whatsapp/store",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "instance_name",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.instance }}"
            },
            {
              "name": "block",
              "valueProvider": "fieldValue",
              "value": "delivery_fees"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "delivery_fees"
      },
      "id": "9dff6dee-9469-4fc5-9892-7a65f93b41c7",
      "name": "Get Store Delivery Fee",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6140,
        1940
      ]
    },
    {
      "parameters": {},
      "id": "19ca14eb-4d4e-4f35-b5b5-3bb2afd41bfb",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        3262,
        1598
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body ?? $json }}",
        "options": {}
      },
      "id": "f2394721-15d1-4255-97d2-b2abf4e834b9",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3462,
        1598
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "425a712d-f598-4e72-a99e-65efb704c401",
        "options": {}
      },
      "id": "b49fe2d0-df17-4461-aa87-ca334fab6155",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        3262,
        1778
      ],
      "webhookId": "425a712d-f598-4e72-a99e-65efb704c401",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "empresas",
        "filters": {
          "conditions": [
            {
              "keyName": "instance_name",
              "keyValue": "={{ $('messageInfo').first().json.instance }}"
            }
          ]
        }
      },
      "id": "e56a1edd-7616-4b7b-ab91-f8c10ed29930",
      "name": "fetch vector store",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3902,
        1798
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWYYqpMcDDFZTW3g",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=vector_store",
        "key": "=vector_store_{{ $('messageInfo').first().json.instance }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "b7ffcc4e-42b2-4358-8475-234925396e5c",
      "name": "get vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3702,
        1798
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_store.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3f055321-8f4c-4dc7-ab05-5eb95fc7bea4",
      "name": "has vector store?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3902,
        1598
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "c68a6219-a8d9-4895-8047-7449bbc8d652",
      "name": "has vector store? 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4062,
        1678
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=vector_store_{{ $('messageInfo').first().json.instance }}",
        "value": "={{ $json }}",
        "keyType": "hash",
        "expire": true,
        "ttl": 600
      },
      "id": "c0118fef-5d72-49bd-8443-2dd0f752416f",
      "name": "set vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4222,
        1798
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.vector_store ?? $json }}",
        "options": {}
      },
      "id": "bade6dff-2e36-4b18-90a7-5df87ec89839",
      "name": "vector store",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4242,
        1578
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=vector_store_{{ $json.instance }}"
      },
      "id": "5b82fb6d-8bc1-4556-909e-380943422518",
      "name": "delete vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3702,
        1598
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "llama-3.2-3b-preview",
        "options": {
          "temperature": 0
        }
      },
      "id": "2e310bf8-1928-4b36-81a7-2e2fbcfb2b5e",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        5640,
        1980
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar status do pedido do usuário na loja, somente se o código do pedido {code} foi informado ou se o usuário informou que não tinha e quer ver o ultimo pedido, então irá pesquisar o ultimo pedido realizado.\n\n# pergunte se usuário deseja ver somente o status ou o pedido completo.",
        "url": "=https://ibox.delivery/api/whatsapp/order/status",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "store",
              "valueProvider": "fieldValue",
              "value": "hamburgueria"
            },
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0] }}"
            },
            {
              "name": "code",
              "valueProvider": "fieldValue",
              "value": "{code}"
            },
            {
              "name": "get_items",
              "valueProvider": "fieldValue",
              "value": "{get_items}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "code",
              "description": "o código do pedido tem no máximo 6 dígitos numérico, se não for informado envie como vazio (null)",
              "type": "string"
            },
            {
              "name": "get_items",
              "description": "preencha como 1 só se for solicitado o pedido completo, caso contrário coloque vazio (null)",
              "type": "string"
            }
          ]
        }
      },
      "id": "d2f537b6-d593-4a7e-82cb-952f1a9d3fcf",
      "name": "Get Status Pedido",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6380,
        1940
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}"
      },
      "id": "4abbdefa-8589-4a85-857d-392932e90ee6",
      "name": "reset memo",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5120,
        1620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para gerar o link para o usuário realizar um pedido/compra sempre que for solicitado",
        "method": "POST",
        "url": "=https://ibox.delivery/api/whatsapp/store/link",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "store",
              "valueProvider": "fieldValue",
              "value": "hamburgueria"
            },
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0] }}"
            }
          ]
        },
        "optimizeResponse": true,
        "fieldsToInclude": "selected",
        "fields": "url"
      },
      "id": "0c22ad90-792b-4057-ab13-264ab90bfdbd",
      "name": "Get Link Login",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        6260,
        1940
      ]
    },
    {
      "parameters": {
        "content": "## Tools iBox Delivery",
        "height": 240.3217863972307,
        "width": 649.8050918862461,
        "color": 2
      },
      "id": "5bdff924-da49-46c6-b389-2d6f409793d2",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5880,
        1860
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "value": "={{ $json.user ?? {} }}",
        "keyType": "hash",
        "expire": true,
        "ttl": "={{ $json.user ? 120 : 60 }}"
      },
      "id": "beed8ad8-7696-465c-a7c4-ec4411ce7e97",
      "name": "set user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4842,
        1779
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://ibox.delivery/api/whatsapp/user?number={{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "options": {}
      },
      "id": "de296ef5-21b3-4230-9bc8-c0841488c21d",
      "name": "Get Account User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4682,
        1779
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "user_account",
        "key": "=use_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "e41a8a28-1f51-4eea-b0a0-574e9c2af4b0",
      "name": "get user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4482,
        1799
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.user_account.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "423741f5-681a-4b72-93a6-a200f2fd79e8",
      "name": "has user account?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4682,
        1579
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=use_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}"
      },
      "id": "f44bdfbf-0395-4b58-81f7-b9c4d6f9a83e",
      "name": "delete user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4482,
        1579
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Tenta retornar os dados do Usuário",
        "height": 435.2975787523367,
        "width": 598.5677101799579,
        "color": 5
      },
      "id": "1e7263c1-e627-4db5-817d-902936d1f17e",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4420,
        1520
      ]
    },
    {
      "parameters": {
        "content": "## Retorna os dados da Loja com base na Instância",
        "height": 483.3176121655175,
        "width": 731.8422362672346,
        "color": 4
      },
      "id": "382641e5-891d-4bf7-8a5c-9374286e2bdd",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3642,
        1519
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "30943bf9-66f0-4006-92d0-45c67c30d6ac",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        5280,
        1980
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "08eccb40-00d8-4101-a52e-f6cbaf728cd1",
              "name": "system",
              "value": "=## Função\nResponder a perguntas do usuário\n\n## Objetivo\nProcessar as mensagens dos clientes e fornecer respostas com base nas regras e informações da base de dados TOOL \"store_info\".\n\n## Sobre o atendiemnto\nSempre inicie sua conversa perguntando educadamente se o usuário deseja realizar um pedido ou precisa de ajuda com algo relacionado.\nA data e hora atuais são {{ $now.toISO() }}. Todas as datas devem ser fornecidas no formato ISO nas requisições, não nas respostas para o usuário.\n\n## Responsabilidades\n1. Analisar a intenção da pergunta do cliente (fazer pedido, horários, endereço, formas de pagamento, status da loja, etc.).\n2. Fornecer informações claras, educadas, informais e humoradas de acordo com a base de informações.\n3. Utilizar no máximo 2 emojis por resposta para manter a interação leve e amigável.\n4. Sugerir produtos e taxas de entrega conforme as regras:\n   - Mencionar no máximo 3 produtos.\n   - Mencionar até 3 taxas de entrega por vez.\n5. Fornecer o link direto do menu, sem formatação, quando solicitado a intenção de compra.\n6. Manter o tom de conversa descontraído, com mensagens objetivas e curtas.\n7. Sempre que você encontrar um texto dentro de chaves `{}`, busque o valor correspondente na base de dados TOOL \"store_info\". Não retorne o texto literal, mas sim o valor real associado.\n8. Enviar imagens apenas de produtos específicos quando solicitado, sempre usando a base de dados TOOL \"store_info\".\n9. Dividir respostas longas em partes para facilitar a compreensão.\n10. NUNCA INVENTE INFORMAÇÃO que não esteja na base de dados TOOL \"store_info\".\n11. Pode adicionar o nome do usuário na resposta, quando achar necessário.\n12. Sugira produtos disponíveis na loja usando a base de dados 'store_info'.\n\n# Para cancelamento de pedido\n1. Primeiro, localize o pedido do usuário a ser cancelado.\n2. Se não tiver como cancelado, informe que o cancelamento é feito somente por ligação com o código do pedido.\n\n## Sobre o usuário\nO nome do usuário é {{ $('userAccount').first().json.nome ?? $('messageInfo').first().json.pushName }}, seu e-mail é {{ $('userAccount').first().json.email ?? '' }}, o endereço é {{ $('userAccount').first().json.endereco ?? '' }} e o ID da sessão do usuário é {{ $('messageInfo').first().json.unique_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d2bff534-d18d-4e55-94b7-e08280ffb1fd",
      "name": "config prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5120,
        1860
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.user_account ?? $json.user ?? {} }}",
        "options": {}
      },
      "id": "376054ee-1a07-46a6-abd0-f72e5816806b",
      "name": "userAccount",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4882,
        1559
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e03c53a9-dae7-419f-9984-77ba5c6612d6",
      "name": "Chat Memory Manager",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        4400,
        2380
      ],
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "9f9dd74e-5b27-41d6-bd1f-063964b18591",
      "name": "Redis Chat Memory 2",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        4720,
        2420
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "name": "store_info",
        "description": "use essa ferramenta para retornar produtos/serviços fornecidos pela loja, formas de pagamento aceitas, endereço da loja e demais informações não entregue pelas outras tools",
        "topK": 10
      },
      "id": "1a5c3572-5e96-4785-b3dd-7ced5a3eac12",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        5600,
        1720
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n    \"evo_api\": \"https://apiwp.wmst.com.br\",\n    \"instance\": \"ibox_cli_23\",\n    \"remoteJid\": \"5512982184879@s.whatsapp.net\",\n    \"pushName\": \"W.M. Soluções Tecnologicas\",\n    \"fromMe\": false,\n    \"unique_id\": \"ibox_cli_23_5512982184879\",\n    \"debounce_time\": 5,\n    \"conversation\": \"{{ $json.chatInput }}\"\n  }",
        "options": {}
      },
      "id": "71ebb7ec-ceb9-478b-87e4-5d85358fc811",
      "name": "chatConfig",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3462,
        1398
      ],
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "id": "744d1e63-bc94-4ce9-97c7-1cfb815c2b01",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        5660,
        1360
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=1",
        "contextWindowLength": 10
      },
      "id": "4acd7fd4-2a6d-4289-b4fd-69445a47d79c",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [
        5460,
        1340
      ],
      "disabled": true
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "id": "a9eaa593-3384-4f47-bc83-678ab4795e14",
      "name": "chatInput",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        3262,
        1398
      ],
      "webhookId": "3d85486d-8f87-4abd-8579-bef506d74bef",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').first().json.conversation }}",
        "options": {
          "systemMessage": "={{ $('config prompt').first().json.system }}"
        }
      },
      "id": "3f94836d-2b83-4034-aa77-64745d4e75d1",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        5260,
        1620
      ]
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('vector store').first().json.vector_name }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "562f2cd3-2ff3-4966-acf5-f339f39a0c40",
      "name": "Qdant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        5400,
        1940
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    }
  ],
  "triggerCount": 6,
  "updatedAt": "2024-10-04T04:30:03.065Z",
  "versionId": "59f38eb7-834e-45b4-b839-71241225b127"
}