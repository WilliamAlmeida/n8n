{
  "active": false,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Media": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Media",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Beautify URL": {
      "main": [
        [
          {
            "node": "Fix Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Categorizing Message": {
      "main": [
        [
          {
            "node": "Split Out Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text": {
      "main": [
        [
          {
            "node": "Categorizing Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Status": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Address": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Delivery Fee": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messageInfo": {
      "main": [
        [
          {
            "node": "delete vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get vector store": {
      "main": [
        [
          {
            "node": "has vector store?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has vector store?": {
      "main": [
        [
          {
            "node": "vector store",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch vector store": {
      "main": [
        [
          {
            "node": "has vector store? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has vector store? 2": {
      "main": [
        [
          {
            "node": "set vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set vector store": {
      "main": [
        [
          {
            "node": "vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete vector store": {
      "main": [
        [
          {
            "node": "get vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vector store": {
      "main": [
        [
          {
            "node": "delete user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Messages": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Status Pedido": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reset memo": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Link Login": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Account User": {
      "main": [
        [
          {
            "node": "set user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set user account": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get user account": {
      "main": [
        [
          {
            "node": "has user account?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has user account?": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Account User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete user account": {
      "main": [
        [
          {
            "node": "get user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "config prompt": {
      "main": [
        [
          {
            "node": "reset memo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "userAccount": {
      "main": [
        [
          {
            "node": "config prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory 2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Beautify URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-27T18:14:53.380Z",
  "id": "BZ9o5Ey8QpAJn1OB",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 4 Process Message",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "fcc04773-9928-4818-b8ba-a2b884091ec5",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4060,
        1900
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "name": "store_info",
        "description": "use essa ferramenta para retornar produtos/serviços fornecidos pela loja, e demais informações não entregue pelas outras tools",
        "topK": 10
      },
      "id": "75787e8f-f383-423d-8072-f298f43be002",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        4380,
        1820
      ]
    },
    {
      "parameters": {
        "content": "## Gera a Resposta\nObs.: Seleciona a Base de Dados a ser usada de acordo com a Empresa de maneira Dinâmica e a usa para responder a solicitação",
        "height": 584.136756451777,
        "width": 768.3093052403206
      },
      "id": "616d42e8-0824-4274-ac56-1de481719926",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3860,
        1620
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "1cd8fe75-b529-4067-b2b5-9c7a4f494cbc",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        4180,
        1900
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('messageInfo').first().json.evo_api }}/message/sendText/{{ $('messageInfo').first().json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}\",\n  \"text\": \"{{ $json.output.content.replace(/^\\n+/g, '') }}\",\n  \"delay\": 2000,\n  \"linkPreview\": true\n} ",
        "options": {}
      },
      "id": "c58a63b9-5d50-4a43-88d8-45a305004ec1",
      "name": "Send Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5900,
        2000
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "T5OqvislWbgDr9Ek",
          "name": "Evolution Api Key"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "12e19b24-c845-442d-b7d1-0c0232d02c58",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        5540,
        1720
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('messageInfo').first().json.evo_api }}/message/sendMedia/{{ $('messageInfo').first().json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}\",\n  \"mediatype\": \"{{ $json.output.type }}\",\n  \"mimetype\": \"image/png\",\n  \"caption\": \"{{ $json.output.caption.replace(/^\\n+/g, '') ?? '' }}\",\n  \"media\": \"{{ $json.output.url }}\",\n  \"fileName\": \"{{ $json.output.url.split('/').last().replace($json.output.url.split('.').last(), 'png') }}\",\n  \"delay\": 2000\n} ",
        "options": {}
      },
      "id": "325ffb13-8647-440f-bc8e-2db27bc86837",
      "name": "Send Media",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5900,
        1740
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "T5OqvislWbgDr9Ek",
          "name": "Evolution Api Key"
        }
      }
    },
    {
      "parameters": {
        "content": "# Enviar o Resultado para o Whatsapp",
        "height": 610.094292552082,
        "width": 661.5465394209826,
        "color": 4
      },
      "id": "f4487622-d883-4b03-a955-1c1dc138b757",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5440,
        1620
      ]
    },
    {
      "parameters": {
        "content": "# Faz o tratamento da Resposta",
        "height": 286.6572100709807,
        "width": 702.7265374935415,
        "color": 5
      },
      "id": "8a0acc9c-3d77-483f-b68e-533a5ae023e9",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4671,
        1620
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "bd6c6ac4-8ebd-4d14-9935-1fd270106c48",
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8a8907db-2f29-4fc3-a50d-264a2c5d015e",
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "=video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video"
            }
          ]
        },
        "options": {}
      },
      "id": "229e4c8d-f804-4054-84ca-2a5a2ccff6c6",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        5680,
        1940
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Função 1: Remove caption de links que não são imagens ou vídeos\nfunction removeCaptionFromLinks(text) {\n  // Expressão regular para identificar links que não são imagens ou vídeos\n  const regexLinks = /\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+)\\)/gi;\n  \n  return text.replace(regexLinks, (match, caption, url) => {\n    // Se o link não for de imagem ou vídeo, remove o caption e mantém só a URL\n    if (!url.match(/\\.(jpeg|jpg|png|gif|bmp|webp|avif|mp4|mov|avi|wmv)$/i)) {\n      return url;\n    }\n    return match; // Mantém o link inalterado se for uma imagem ou vídeo\n  });\n}\n\nconst message = $input.item.json.output;\n\n// Primeira função: remove captions de links não-imagens/vídeos\ncleanedMessage = removeCaptionFromLinks(message);\n\nreturn { output: cleanedMessage };"
      },
      "id": "a884fb1c-54af-4f00-9cac-ee14d6af3a50",
      "name": "Beautify URL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4740,
        1720
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const message = $input.item.json.output;\n\nconst regex = /(?:\\!\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif)))/gi;\n\nconst parts = [];\nlet lastIndex = 0;\nlet match;\n\nwhile ((match = regex.exec(message)) !== null) {\n  // Adiciona o texto entre os matches\n  if (match.index > lastIndex) {\n    let content = message.slice(lastIndex, match.index).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n    // Remove o '-' desnecessário no final do texto, se presente\n    if (content.endsWith('-')) {\n      content = content.slice(0, -1).trim();\n    }\n    if (content) {\n      content = content.replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n      parts.push({ type: 'text', content });\n    }\n  }\n\n  // Adiciona as imagens ou links encontrados\n  if (match[1]) {\n    parts.push({ type: 'image', caption: match[1], url: match[2] });\n  } else if (match[3]) {\n    parts.push({ type: 'image', caption: match[3], url: match[4] });\n  } else if (match[5] || match[6]) {\n    parts.push({ type: 'image', url: match[5] || match[6] });\n  }\n\n  // Atualiza o último índice processado\n  lastIndex = regex.lastIndex;\n}\n\n// Adiciona o texto final, se houver\nif (lastIndex < message.length) {\n  let finalContent = message.slice(lastIndex).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n  if (finalContent.endsWith('-')) {\n    finalContent = finalContent.slice(0, -1).trim();\n  }\n  if (finalContent) {\n    parts.push({ type: 'text', content: finalContent });\n  }\n}\n\n// Verifica se a parte é um vídeo e adiciona\nparts.forEach(part => {\n  if (part.type === 'url' && part.url.match(/\\.(mp4|mov|avi|wmv)$/)) {\n    part.type = 'video';\n  }\n});\n\nreturn { output: parts };\n"
      },
      "id": "a2fedc6c-2e7c-4e62-9a76-33344fb43994",
      "name": "Categorizing Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5060,
        1720
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "f7fac150-0f90-45a6-b072-69028144693c",
      "name": "Split Out Messages",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        5220,
        1720
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*').replace(/(?<!\\\\)\"/g, '\\\\\"') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "feb0c8d6-7508-49fa-9d65-b625e6345322",
      "name": "Fix Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4900,
        1720
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar status da loja, se ela esta aberta ou fechada, funcionando no momento ou não",
        "url": "=https://ibox.delivery/api/whatsapp/store?instance_name={{ $('messageInfo').first().json.instance }}&only=status",
        "optimizeResponse": true,
        "dataField": "status"
      },
      "id": "86a16bdc-5365-4934-8ad2-78ad201c769c",
      "name": "Get Store Status",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        4860,
        2160
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar endereço da loja",
        "url": "=https://ibox.delivery/api/whatsapp/store?instance_name={{ $('messageInfo').first().json.instance }}&only=address",
        "optimizeResponse": true
      },
      "id": "9ac3adc2-6e64-4899-8d02-45a505e30afd",
      "name": "Get Store Address",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        4980,
        2160
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar taxas de entrega cobrada pela loja, consultar tempo médio das entregas, valor mínimo, se entrega em outras localidades que não estejam registradas",
        "url": "=https://ibox.delivery/api/whatsapp/store?instance_name={{ $('messageInfo').first().json.instance }}&only=delivery_fee",
        "optimizeResponse": true
      },
      "id": "1818b113-f25a-415f-bb8d-cb05b4a58e5c",
      "name": "Get Store Delivery Fee",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        4720,
        2160
      ]
    },
    {
      "parameters": {},
      "id": "3f14b9dc-8fb1-4f34-bcdc-8184780fc64b",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        2080,
        1740
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body ?? $json }}",
        "options": {}
      },
      "id": "f4ff752d-cbdf-4f2c-adba-9c9dbe0703ca",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        1740
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "425a712d-f598-4e72-a99e-65efb704c401",
        "options": {}
      },
      "id": "3c5eed35-156b-4ad2-abb7-1e167337622c",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        2080,
        1920
      ],
      "webhookId": "425a712d-f598-4e72-a99e-65efb704c401",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "empresas",
        "filters": {
          "conditions": [
            {
              "keyName": "instance_name",
              "keyValue": "={{ $('messageInfo').first().json.instance }}"
            }
          ]
        }
      },
      "id": "ff61eaf7-7f85-4437-90ec-df0bb2db3408",
      "name": "fetch vector store",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2720,
        1940
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWYYqpMcDDFZTW3g",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=vector_store",
        "key": "=vector_store_{{ $('messageInfo').first().json.instance }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "3f63f233-fc19-4214-aa12-01a27a270138",
      "name": "get vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2520,
        1940
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_store.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "63b28651-fd40-4e08-ae29-581cc7fff451",
      "name": "has vector store?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2720,
        1740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1b03ad6b-8a45-416d-a3b3-3490a4e25a3c",
      "name": "has vector store? 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2880,
        1820
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=vector_store_{{ $('messageInfo').first().json.instance }}",
        "value": "={{ $json}}",
        "expire": true,
        "ttl": 600
      },
      "id": "96f09154-4476-4c46-9ef9-f687fc45bd78",
      "name": "set vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3040,
        1940
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.vector_store ?? $json }}",
        "options": {}
      },
      "id": "e5121589-b49e-466b-8121-6269f92b054b",
      "name": "vector store",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3060,
        1720
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=vector_store_{{ $json.instance }}"
      },
      "id": "42468737-b870-4c07-bb3c-5198051c3d2d",
      "name": "delete vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2520,
        1740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "llama-3.2-3b-preview",
        "options": {
          "temperature": 0
        }
      },
      "id": "74cd6dc1-4137-469f-a8a9-f78bf8db632d",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        4500,
        2040
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar status do pedido do usuário na loja, somente se o código do pedido {code} foi informado ou se o usuário informou que não tinha e quer ver o ultimo pedido, então irá pesquisar o ultimo pedido realizado.",
        "url": "=https://ibox.delivery/api/whatsapp/order/status",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "store",
              "valueProvider": "fieldValue",
              "value": "hamburgueria"
            },
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0] }}"
            },
            {
              "name": "code",
              "valueProvider": "fieldValue",
              "value": "{code}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "code",
              "description": "o código do pedido tem no máximo 6 dígitos numérico",
              "type": "string"
            }
          ]
        }
      },
      "id": "1bae8fb8-c033-4a2b-a2d3-6ef0a6afadc6",
      "name": "Get Status Pedido",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5220,
        2160
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}"
      },
      "id": "cff0f460-aa73-4041-8d62-a510800f32da",
      "name": "reset memo",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3920,
        1720
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para gerar o link de pedido caso o usuário deseje realizar algum pedido",
        "method": "POST",
        "url": "=https://ibox.delivery/api/whatsapp/store/link",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "store",
              "valueProvider": "fieldValue",
              "value": "hamburgueria"
            },
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0] }}"
            }
          ]
        },
        "optimizeResponse": true,
        "fieldsToInclude": "selected",
        "fields": "url"
      },
      "id": "a4bce77a-7356-4fab-bd69-39f906ff867a",
      "name": "Get Link Login",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5100,
        2160
      ]
    },
    {
      "parameters": {
        "content": "## Tools iBox Delivery",
        "height": 240.3217863972307,
        "width": 649.8050918862461,
        "color": 2
      },
      "id": "ae5aab67-4e04-47ca-acaa-16a9c26a71be",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4680,
        2080
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "value": "={{ $json.user }}",
        "keyType": "hash",
        "expire": true,
        "ttl": 120
      },
      "id": "de355893-eb11-4edd-8e6e-003e196f75bf",
      "name": "set user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3680,
        1920
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://ibox.delivery/api/whatsapp/user?number={{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "options": {}
      },
      "id": "9cf62500-0979-4343-b41c-2d1e271b833d",
      "name": "Get Account User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3500,
        1920
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "user_account",
        "key": "=use_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "cec042f8-d062-444a-a7ed-579660755723",
      "name": "get user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3300,
        1940
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.user_account.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "acaca42f-179d-46ce-8884-b6802780b353",
      "name": "has user account?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3500,
        1720
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=use_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}"
      },
      "id": "542cb33b-1c7a-45ac-9143-392437032a34",
      "name": "delete user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3300,
        1720
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Tenta retornar os dados do Usuário",
        "height": 498.29757875233673,
        "width": 593.2775453391564,
        "color": 5
      },
      "id": "08319eaf-34b8-4f47-9f4b-de8fe3b6c9e7",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3236.2282971357217,
        1661.2216193313277
      ]
    },
    {
      "parameters": {
        "content": "## Retorna os dados da Loja com base na Instância",
        "height": 483.3176121655175,
        "width": 731.8422362672346,
        "color": 4
      },
      "id": "2183c843-3d56-4bb0-8f36-61b37007577e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2460,
        1661.2216193313275
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "b60e20b2-bfc3-4f9a-89a6-2ec0ac322bcf",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        4120,
        2060
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "08eccb40-00d8-4101-a52e-f6cbaf728cd1",
              "name": "system",
              "value": "=## Função\nResponder a perguntas do usuário\n\n## Objetivo\nProcessar as mensagens dos clientes e fornecer respostas com base nas regras e informações da base de dados TOOL \"store_info\".\n\n## Sobre o atendiemnto\nSempre inicie sua conversa perguntando educadamente se o usuário deseja realizar um pedido ou precisa de ajuda com algo relacionado.\nA data e hora atuais são {{ $now.toISO() }}. Todas as datas devem ser fornecidas no formato ISO.\n\n## Responsabilidades\n1. Analisar a intenção da pergunta do cliente (fazer pedido, horários, endereço, formas de pagamento, status da loja, etc.).\n2. Fornecer informações claras, educadas, informais e humoradas de acordo com a base de informações.\n3. Utilizar no máximo 2 emojis por resposta para manter a interação leve e amigável.\n4. Sugerir produtos e taxas de entrega conforme as regras:\n   - Mencionar no máximo 3 produtos.\n   - Mencionar até 3 taxas de entrega por vez.\n5. Fornecer o link direto do cardápio, sem formatação, quando aplicável.\n6. Manter o tom de conversa descontraído, com mensagens objetivas e curtas.\n7. Sempre que você encontrar um texto dentro de chaves `{}`, busque o valor correspondente na base de dados TOOL \"store_info\". Não retorne o texto literal, mas sim o valor real associado.\n8. Enviar imagens apenas de produtos específicos quando solicitado, sempre pegando na base de dados TOOL \"store_info\".\n9. Dividir respostas longas em partes para facilitar a compreensão.\n10. NUNCA INVENTE INFORMAÇÃO que não esteja na base de dados TOOL \"store_info\".\n11. Pode adicionar o nome do usuário na resposta, quando achar necessário.\n\n## Sobre o usuário\nO nome do usuário é {{ $('userAccount').first().json.nome ?? $('messageInfo').first().json.pushName }}, seu e-mail é {{ $('userAccount').first().json.email ?? '' }}, o endereço é {{ $('userAccount').first().json.endereco ?? '' }} e o ID da sessão do usuário é {{ $('messageInfo').first().json.unique_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f4f6c0e8-54eb-427f-a375-a443bb21d533",
      "name": "config prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3920,
        1960
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.user_account ?? $json.user ?? '' }}",
        "options": {}
      },
      "id": "80717b23-59e0-478a-bd6f-af83a7926939",
      "name": "userAccount",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3680,
        1720
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2132168b-9a3a-48e9-bb3b-84203b78939d",
      "name": "Chat Memory Manager",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        4160,
        2240
      ],
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').first().json.conversation }}",
        "options": {
          "systemMessage": "={{ $('config prompt').first().json.system }}"
        }
      },
      "id": "c616ed39-d60c-4598-8d32-ede436945b26",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4060,
        1720
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "a0ff0cc5-52f7-471f-ad53-87f2c5b54957",
      "name": "Redis Chat Memory 2",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        4020,
        2260
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('vector store').first().json.vector_name }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "4f11d3bd-759e-405f-b21d-c3c4bc1066cf",
      "name": "Qdrant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        4260,
        2040
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      }
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "evo_api": "https://apiwp.wmst.com.br",
          "instance": "ibox_cli_23",
          "remoteJid": "5512982184879@s.whatsapp.net",
          "pushName": "W.M. Soluções Tecnologicas",
          "fromMe": false,
          "unique_id": "ibox_cli_23_5512982184879",
          "debounce_time": 5,
          "conversation": "qual meu e-mail?"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    }
  ],
  "triggerCount": 6,
  "updatedAt": "2024-09-30T03:40:38.576Z",
  "versionId": "923d2ab2-fcb9-44be-b7b7-033b99b71399"
}