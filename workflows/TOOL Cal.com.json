{
  "active": false,
  "connections": {
    "baseInfo": {
      "main": [
        [
          {
            "node": "Switch Action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "found slots?": {
      "main": [
        [
          {
            "node": "Adjust DateTime",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response Availability Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a booking": {
      "main": [
        [
          {
            "node": "Switch Action 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cal Availability": {
      "main": [
        [
          {
            "node": "found slots?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "baseInfo1": {
      "main": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat": {
      "main": [
        [
          {
            "node": "baseInfo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EWT": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Availability Tool": {
      "ai_tool": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Appointment Scheduling Agent": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Existing Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch Action": {
      "main": [
        [
          {
            "node": "Cal Availability",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get all bookings",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a booking",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a booking",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get a booking",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Schedule a booking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Action 2": {
      "main": [
        [
          {
            "node": "booking cancelled?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reschedule a booking",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response A Booking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find Existing Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get all bookings": {
      "main": [
        [
          {
            "node": "Response All Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cancel Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule a booking": {
      "main": [
        [
          {
            "node": "Response Booking Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adjust DateTime": {
      "main": [
        [
          {
            "node": "Format Slots",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cancel a booking": {
      "main": [
        [
          {
            "node": "Response Cancel Booking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reschedule Appt Tool": {
      "ai_tool": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reschedule a booking": {
      "main": [
        [
          {
            "node": "Response Reschedule Booking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Appointment Scheduling Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "booking cancelled?": {
      "main": [
        [
          {
            "node": "Response Bokking Cancelled",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cancel a booking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-29T21:36:02.298Z",
  "id": "czYf0DoNjwOMFK8Q",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "TOOL Cal.com",
  "nodes": [
    {
      "parameters": {
        "toolDescription": "Call this tool to schedule an appointment.",
        "method": "POST",
        "url": "https://api.cal.com/v1/bookings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "calApi",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "Content-Type",
              "valueProvider": "fieldValue",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "eventTypeId",
              "valueProvider": "fieldValue",
              "value": "={{ 1195761 }}"
            },
            {
              "name": "start"
            },
            {
              "name": "end"
            },
            {
              "name": "title",
              "valueProvider": "fieldValue",
              "value": "{title}"
            },
            {
              "name": "description",
              "valueProvider": "fieldValue",
              "value": "{description}"
            },
            {
              "name": "metadata"
            },
            {
              "name": "responses"
            },
            {
              "name": "timeZone",
              "valueProvider": "fieldValue",
              "value": "America/Sao_Paulo"
            },
            {
              "name": "language",
              "valueProvider": "fieldValue",
              "value": "en"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "description",
              "description": "bullet list of session Id, full name, email and summary of appointment",
              "type": "string"
            },
            {
              "name": "title",
              "description": "name of the user and a short summary of appointment",
              "type": "string"
            },
            {
              "name": "responses",
              "description": "Use template: { \"name\": \"\", \"email\": \"\", \"location\":  { \"value\": \"inPerson\", \"optionValue\": \"\" }, \"guests\": [] }|Ensure output is valid json.",
              "type": "json"
            },
            {
              "name": "metadata",
              "description": "Use template: { \"session_id\": \"\", \"booked_by\": \"n8n workflow\" }",
              "type": "json"
            }
          ]
        }
      },
      "id": "19a1e64e-4a5f-421e-a766-807a6d7a5d47",
      "name": "Schedule Appt",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [
        2060,
        -160
      ],
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Call this tool to reschedule a user's appointment using a booking id.\n\n# To reschedule an existing booking\n* First find the existing booking so that you may obtain the existing booking's booking ID.\n* Display this booking ID to the user.\n* Use this booking ID to reschedule an existing appointment.\n* If an existing booking ID is not found or given, then notify the user that it is not possible to complete their request at this time and they should contact via email.\n* when user wants to reschedule an booking, ask for a reason for the rescheduling. Confirm with user before rescheduling an booking.",
        "method": "POST",
        "url": "https://api.cal.com/v2/bookings/{booking_id}/reschedule",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "cal-api-version",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo1').item.json.cal_api_version_booking }}"
            }
          ]
        },
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "start",
              "valueProvider": "fieldValue",
              "value": "{start}"
            },
            {
              "name": "reschedulingReason",
              "valueProvider": "fieldValue",
              "value": "{reschedulingReason}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "booking_id",
              "description": "the booking id of the appointment",
              "type": "string"
            },
            {
              "name": "start",
              "description": "start datetime of the appointment, for example: \"2024-05-30T12:00:00.000Z\"",
              "type": "string"
            },
            {
              "name": "reschedulingReason",
              "description": "rescheduling reason",
              "type": "string"
            }
          ]
        }
      },
      "id": "89a46777-5352-47a7-bd31-356dae60cf8d",
      "name": "Reschedule Appt",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [
        2220,
        0
      ],
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to cancel a user's existing appointment using a booking id.\n\n# To cancel an existing appointment\n* First find the existing appointment so that you may obtain the existing appointment's booking ID.\n* Display this booking ID to the user.\n* Use this booking ID to cancel an existing appointment.\n* If an existing appointment ID is not found or given, then notify the user that it is not possible to complete their request at this time and they should contact via email.\n* when user wants to cancel an appointment, ask for a reason for the cancellation and suggest rescheduling as an alternative. Confirm with user before cancelling an appointment.",
        "method": "POST",
        "url": "https://api.cal.com/v2/bookings/{booking_id}/cancel",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "parametersHeaders": {
          "values": [
            {
              "name": "cal-api-version",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo1').item.json.cal_api_version_booking }}"
            }
          ]
        },
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "cancellationReason",
              "valueProvider": "modelOptional"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "booking_id",
              "description": "the booking id of the appointment",
              "type": "string"
            }
          ]
        }
      },
      "id": "36cab6b3-c87a-46ea-9620-9b7fffaa04b7",
      "name": "Cancel Appt",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [
        2380,
        -160
      ],
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to get the appointment availability.",
        "url": "https://api.cal.com/v2/slots/available",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "eventTypeId",
              "valueProvider": "fieldValue",
              "value": "={{ $json.cal_event_id }}"
            },
            {
              "name": "startTime",
              "valueProvider": "fieldValue",
              "value": "={{ $now.toISO() }}"
            },
            {
              "name": "endTime",
              "valueProvider": "fieldValue",
              "value": "={{ $now.plus(4, 'days') }}"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "data"
      },
      "id": "025554e7-1b2b-4379-a380-6d7451abfb15",
      "name": "Get Availability",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [
        2060,
        0
      ],
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to get an existing appointment.\n\n## To find an existing appointment\n* Ask the user for their email address and date of the existing booking\n* Use the user's email and date to search for the existing booking.\n* If the user's email and date do not match the results or no results are returned, then the existing booking is not found.\n* If the existing booking is not found, notify the user and suggest a new booking should be made.",
        "url": "https://api.cal.com/v2/bookings/{appointment_id}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "cal-api-version",
              "valueProvider": "fieldValue",
              "value": "={{ $('baseInfo1').item.json.cal_api_version_booking }}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "appointment_id",
              "description": "the id of the appointment",
              "type": "string"
            }
          ]
        }
      },
      "id": "1eccb4a1-3fb4-4f1b-8708-ef621355d846",
      "name": "Get Existing Appt",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [
        2220,
        -160
      ],
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to search for an existing appointment with the user's email address.",
        "url": "https://api.cal.com/v2/bookings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "attendeeEmail"
            }
          ]
        }
      },
      "id": "c25e4b00-f6ff-4305-bad8-e672beb2b82d",
      "name": "Find Existing Appt",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [
        2380,
        0
      ],
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Chat').item.json.chatInput }}",
        "options": {
          "systemMessage": "=You are an appointment scheduling helper for consultant named William.\n\n## About William\nWilliam is a São Paulo-based consultant specialising in Laravel, n8n and AI. His website is wmst.com.br.\n\nThe date and time now is {{ $now.toISO() }}. All dates should be given in the ISO format.\nEach appointment should have a start and end date and time relative to today's date in the future.\nAll appointments are strictly 60mins long.\nAlways show appointment UID.\n\n## About the user\nThe user's session id is {{ $('Chat').item.json.sessionId }}, email is williamkillerca@gmail.com and cellphone is +5512982184879.\n\n## Output\n\nAlways answer in *pt-br*."
        }
      },
      "id": "aa638579-b587-424d-8195-3fbda86a41a1",
      "name": "Appointment Scheduling Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1400,
        -160
      ],
      "notes": "You are an appointment scheduling helper for consultant named William.\n\n## About William\nWilliam is a São Paulo-based consultant specialising in Laravel, n8n and AI. His website is wmst.com.br.\n\n## About the appointments\nAlways start your conversation by politely asking if the user wants to book a new appointment or enquire about an existing one.\nThe date and time now is {{ $now.toISO() }}. All dates should be given in the ISO format.\nEach appointment should have a start and end date and time relative to today's date in the future.\nAll appointments are strictly 30mins long.\n\n## To book an appointment\n* Before booking an appointment, ask if the user has an existing appointment.\n* Ensure you have the user's email address, full name and proposed date, preferred start time before booking an appointment.\n* Always check the calendar availability of the user's proposed date and time. If there is no availability, suggest the next available appointment slot.\n* If the appointment booking is successful, notify the user that an email confirmation will be sent to their provided email address.\n* If the appointment booking is unsuccessful, notify the user that you are unable to complete their request at the moment and to try again later.\n\n## To find an existing appointment\n* Ask the user for their email address and date of the existing booking\n* Use the user's email and date to search for the existing booking.\n* If the user's email and date do not match the results or no results are returned, then the existing booking is not found.\n* If the existing booking is not found, notify the user and suggest a new booking should be made.\n\n# To reschedule or cancel an existing appointment\n* First find the existing appointment so that you may obtain the existing appointment's booking ID.\n* Display this booking ID to the user.\n* Use this booking ID to reschedule or cancel an existing appointment.\n* If an existing appointment ID is not found or given, then notify the user that it is not possible to complete their request at this time and they should contact via email.\n* when user wants to cancel an appointment, ask for a reason for the cancellation and suggest rescheduling as an alternative. Confirm with user before cancelling an appointment.\n\n## About the user\nThe user's session id is {{ $json.sessionId }}"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "de856eaf-9065-41e0-ace1-6f9501b1a6d4",
              "name": "cal_api",
              "value": "https://api.cal.com",
              "type": "string"
            },
            {
              "id": "49f1f9ae-601d-40cc-b129-fa950b822ede",
              "name": "username",
              "value": "williamalmeida",
              "type": "string"
            },
            {
              "id": "99df0bed-0ef3-4a38-ae55-0db00096415c",
              "name": "cal_event_id",
              "value": "1195762",
              "type": "string"
            },
            {
              "id": "0a72c23b-7e8c-4618-b827-602200390069",
              "name": "cal_api_version_booking",
              "value": "2024-08-13",
              "type": "string"
            },
            {
              "id": "7e6a29c2-9869-409d-9980-698909fdee57",
              "name": "cal_api_version_event",
              "value": "2024-06-14",
              "type": "string"
            },
            {
              "id": "9e124983-4ae7-4c0c-88b1-d1a68136a45f",
              "name": "utc",
              "value": "3",
              "type": "string"
            },
            {
              "id": "20964151-a5f0-40b4-8730-937b9ffd8a75",
              "name": "action",
              "value": "={{ $json.action }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1240,
        -540
      ],
      "id": "e8cf9d72-2b72-48bf-9a71-48c21b8c80bf",
      "name": "baseInfo"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "aedcecc4-ef35-477a-b5c1-2e601eb718b9",
              "leftValue": "={{ $json.data.slots }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1920,
        -940
      ],
      "id": "c7d6c4a6-96f5-4b27-b36e-7b2f3dcd2dd2",
      "name": "found slots?"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').item.json.cal_api }}/v2/bookings/{{ $json.data.uid }}/reschedule",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=cal-api-version",
              "value": "={{ $('baseInfo').item.json.cal_api_version_booking }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "start",
              "value": "={{ $('EWT').item.json.query.start }}"
            },
            {
              "name": "reschedulingReason",
              "value": "={{ $('EWT').item.json.query.reschedulingReason ?? '' }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2400,
        -520
      ],
      "id": "7bb71a39-0ac4-4ec9-8661-ac8961ef6f4a",
      "name": "Reschedule a booking",
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.cal_api }}/v2/bookings/{{ $('EWT').item.json.query.booking_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=cal-api-version",
              "value": "={{ $json.cal_api_version_booking }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1740,
        -520
      ],
      "id": "264b7c45-90f1-4e4e-a312-95833992957f",
      "name": "Get a booking",
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.cal_api }}/v2/bookings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "eventTypeId",
              "value": "={{ $json.cal_event_id }}"
            },
            {
              "name": "status",
              "value": "={{ ['upcoming','recurring','past','unconfirmed','cancelled'].join(',') }}"
            },
            {
              "name": "attendeeEmail",
              "value": "={{ $('EWT').item.json.query.attendeeEmail ?? '' }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=cal-api-version",
              "value": "={{ $json.cal_api_version_booking }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1740,
        -680
      ],
      "id": "a0cb36b6-abff-4138-84ab-da07a0c437bc",
      "name": "Get all bookings",
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      },
      "notes": "status: {{ ['upcoming','recurring','past','cancelled','unconfirmed'].join(',') }}"
    },
    {
      "parameters": {
        "url": "={{ $('baseInfo').item.json.cal_api }}/v2/slots/available",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "eventTypeId",
              "value": "={{ $json.cal_event_id }}"
            },
            {
              "name": "startTime",
              "value": "={{ $('EWT').item.json.query.startTime }}"
            },
            {
              "name": "endTime",
              "value": "={{ $('EWT').item.json.query.endTime }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1740,
        -940
      ],
      "id": "ce7d7ed0-86b3-4629-b326-bd85ea30409f",
      "name": "Cal Availability",
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "de856eaf-9065-41e0-ace1-6f9501b1a6d4",
              "name": "cal_api",
              "value": "https://api.cal.com",
              "type": "string"
            },
            {
              "id": "49f1f9ae-601d-40cc-b129-fa950b822ede",
              "name": "username",
              "value": "williamalmeida",
              "type": "string"
            },
            {
              "id": "99df0bed-0ef3-4a38-ae55-0db00096415c",
              "name": "cal_event_id",
              "value": "1195762",
              "type": "string"
            },
            {
              "id": "0a72c23b-7e8c-4618-b827-602200390069",
              "name": "cal_api_version_booking",
              "value": "2024-08-13",
              "type": "string"
            },
            {
              "id": "7e6a29c2-9869-409d-9980-698909fdee57",
              "name": "cal_api_version_event",
              "value": "2024-06-14",
              "type": "string"
            },
            {
              "id": "9e124983-4ae7-4c0c-88b1-d1a68136a45f",
              "name": "utc",
              "value": "3",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1220,
        -160
      ],
      "id": "2d84a3f5-8a27-4297-8fe3-e6c3627e83f4",
      "name": "baseInfo1"
    },
    {
      "parameters": {},
      "id": "1889dc5b-510c-4e9e-91eb-c3c6def8a207",
      "name": "Chat",
      "type": "@n8n/n8n-nodes-langchain.manualChatTrigger",
      "typeVersion": 1.1,
      "position": [
        1040,
        -160
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        1060,
        -540
      ],
      "id": "2805ec75-e546-4940-99b9-4e673e56fe6f",
      "name": "EWT"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').item.json.cal_api }}/v2/bookings/{{ $json.data.uid }}/cancel",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=cal-api-version",
              "value": "={{ $('baseInfo').item.json.cal_api_version_booking }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "cancellationReason",
              "value": "={{ $('EWT').item.json.query.cancellationReason }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2620,
        -680
      ],
      "id": "f5659648-d2ef-4f96-8067-8939ed90022d",
      "name": "Cancel a booking",
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      }
    },
    {
      "parameters": {
        "name": "get_availability_tool",
        "description": "Call this tool to get the appointment availability.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "czYf0DoNjwOMFK8Q"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "availability"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"startTime\": \"date and time of the start of the booking\",\n\t\"endTime\": \"end date and time, if specified, limited to a maximum of 4 days after 'startTime'. If 'endTime' is not given, the default value is 24 hours after 'startTime'.\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1560,
        100
      ],
      "id": "8e308e00-33d6-47cc-a189-17c72d181b14",
      "name": "Get Availability Tool"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1c0e1856-c7f0-4e9b-b4ac-1d704417b91c",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1740,
        -160
      ],
      "id": "424c9bc5-dc9e-4270-be54-1050e8d946a0",
      "name": "Response"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Chat').item.json.sessionId }}",
        "sessionTTL": 60
      },
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        1220,
        100
      ],
      "id": "2f8b69cb-4bf9-4ddf-9b11-1ff0ddbb71b8",
      "name": "Redis Chat Memory",
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "name": "get_existing_appt_tool",
        "description": "=Call this tool to get an existing booking.\n\n## To detail an existing booking\n* Ask the user for their booking_id of the existing booking\n* Use the user's booking_id to search for the existing booking.\n* If the user's booking_id do not match the results or no results are returned, then the existing booking is not found.\n* If the existing booking is not found, notify the user and suggest a new booking should be made.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "czYf0DoNjwOMFK8Q"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "find booking"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"booking_id\": \"the id of the booking\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1740,
        100
      ],
      "id": "c8ca4e43-f0fa-42ca-be49-a5786a209d26",
      "name": "Get Existing Appt Tool"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "availability",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "availability"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "140c8bbd-d80b-49be-8c68-6062ddc72bf0",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "list bookings",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "list bookings"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aee40e66-debf-4d99-b02e-4bb1b97e92eb",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "cancel booking",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "cancel booking"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "062dd5e0-6ee4-4821-98cb-19d42af6462b",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "find booking",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "find booking"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8bee3e99-040a-40e1-90f2-6971d2c6ad82",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "reschedule booking",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reschedule booking"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "80aff94c-0b8b-41bc-8593-5531774ff819",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "schedule booking",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "schedule booking"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1420,
        -600
      ],
      "id": "616be42f-b847-4447-ad89-1c91eb6c91fe",
      "name": "Switch Action"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "aee40e66-debf-4d99-b02e-4bb1b97e92eb",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "cancel booking",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "cancel booking"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bb06766f-56b8-4de5-a92b-050ea094b118",
                    "leftValue": "={{ $('baseInfo').item.json.action }}",
                    "rightValue": "reschedule booking",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reschedule booking"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2120,
        -520
      ],
      "id": "1367fac2-ce9a-4639-ac6d-ccfe914f5cc8",
      "name": "Switch Action 2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0dddcb7b-df63-4b9a-89ad-d426cdf9e16f",
              "name": "response",
              "value": "={{ {\n    id: $json.data.id,\n    uid: $json.data.uid,\n    title: $json.data.title,\n    description: $json.data.description,\n    status: $json.data.status,\n    start: $json.data.start.toDateTime().format('yyyy-MM-dd H:mm'),\n    end: $json.data.end.toDateTime().format('yyyy-MM-dd H:mm'),\n    duration: $json.data.duration,\n    eventType: $json.data.eventType,\n    location: $json.data.location,\n} }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2400,
        -360
      ],
      "id": "732feb32-3e69-4d83-b45b-3f6937f83e5b",
      "name": "Response A Booking"
    },
    {
      "parameters": {
        "name": "find_existing_appt_tool",
        "description": "=Call this tool to search for an existing booking with the user's email address.\n\n## To find an existing appointment\n* Ask the user for their email address and date of the existing booking\n* Use the user's email and date to search for the existing booking.\n* If the user's email and date do not match the results or no results are returned, then the existing booking is not found.\n* If the existing booking is not found, notify the user and suggest a new booking should be made.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "czYf0DoNjwOMFK8Q"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "list bookings"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"attendeeEmail\": \"the e-mail of the attendee\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1740,
        260
      ],
      "id": "b36c23e2-af15-403a-bc28-fc1310b95c6c",
      "name": "Find Existing Appt Tool"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a4c695a-9201-4b9a-9d46-d92991ead4bc",
              "name": "response",
              "value": "={{ $json.data.map(item => i = {\n    id: item.id,\n    uid: item.uid,\n    title: item.title,\n    description: item.description,\n    status: item.status,\n    start: item.start.toDateTime().format('yyyy-MM-dd H:mm'),\n    end: item.end.toDateTime().format('yyyy-MM-dd H:mm'),\n    duration: item.duration,\n    eventType: item.eventType,\n    location: item.location,\n}) }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        -680
      ],
      "id": "99025593-105f-43ff-86e3-b3bd1b21dc52",
      "name": "Response All Bookings"
    },
    {
      "parameters": {
        "name": "cancel_appt_tool",
        "description": "=Call this tool to cancel a user's existing booking using a booking id.\n\n# To cancel an existing booking\n* First find the existing booking so that you may obtain the existing booking's booking ID.\n* Display this booking ID to the user.\n* Use this booking ID to cancel an existing booking.\n* If an existing booking ID is not found or given, then notify the user that it is not possible to complete their request at this time and they should contact via email.\n* when user wants to cancel an booking, ask for a reason for the cancellation and suggest rescheduling as an alternative. Confirm with user before cancelling an booking.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "czYf0DoNjwOMFK8Q"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "cancel booking"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"cancellationReason\": \"reason for cancellation\",\n    \"booking_id\": \"the booking id of the appointment\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1560,
        260
      ],
      "id": "1c0840e1-9467-442d-80ef-0f1a4ca0cf77",
      "name": "Cancel Appt Tool"
    },
    {
      "parameters": {
        "name": "schedule_appt_tool",
        "description": "=Call this tool to schedule an appointment.\n\n## To book an booking\n* Before booking an booking, ask if the user has an existing booking.\n* Ensure you have the user's email address, full name and proposed date, preferred start time before booking an booking.\n* Always check the calendar availability of the user's proposed date and time. If there is no availability, suggest the next available booking slot.\n* If the booking booking is successful, notify the user that an email confirmation will be sent to their provided email address.\n* If the booking booking is unsuccessful, notify the user that you are unable to complete their request at the moment and to try again later.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "czYf0DoNjwOMFK8Q"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "schedule booking"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n  \"start\": \"date and time of the start of the booking\",\n  \"title\": \"name of the user and a short summary of appointment\",\n  \"description\": \"bullet list of session Id, full name, email and summary of appointment\",\n  \"metadata\": \"Use template: { \\\"session_id\\\": \\\"\\\", \\\"booked_by\\\": \\\"n8n workflow\\\" }\",\n  \"attendee\": {\n    \"name\": \"\",\n    \"email\": \"\"\n  },\n  \"bookingFieldsResponses\": {\n    \"notes\": \"\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1380,
        100
      ],
      "id": "8e3dcf5f-e24d-48a5-9bc4-a5f6e1f61d99",
      "name": "Schedule Appt Tool"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').item.json.cal_api }}/v2/bookings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "calApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "=cal-api-version",
              "value": "={{ $json.cal_api_version_booking }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "start",
              "value": "={{ $('EWT').item.json.query.start.toDateTime().toUTC() }}"
            },
            {
              "name": "eventTypeId",
              "value": "={{ $json.cal_event_id.toNumber() }}"
            },
            {
              "name": "bookingFieldsResponses.notes",
              "value": "={{ $('EWT').item.json.query.bookingFieldsResponses.notes ?? '' }}"
            },
            {
              "name": "attendee",
              "value": "={{ {\n  name: $('EWT').item.json.query.attendee.name,\n  email: $('EWT').item.json.query.attendee.email,\n  timeZone: 'America/Sao_Paulo',\n  language: 'pt-BR'\n} }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1740,
        -340
      ],
      "id": "46e0f2b5-14cc-48ac-8e22-4ab23a14b29c",
      "name": "Schedule a booking",
      "credentials": {
        "calApi": {
          "id": "xICGic9UQ3lxjrpb",
          "name": "william"
        },
        "httpHeaderAuth": {
          "id": "Xk4lHr8zzqWTdh4Z",
          "name": "Cal.com Token"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "eee23fa6-0985-46ab-8477-ddca2d7b304b",
              "name": "response",
              "value": "={{ \n  $json.response.reduce((acc, item) => {\n    item.times.forEach(time => {\n      const t = time.toDateTime();\n      const date = t.format('y-M-d');\n      const hour = t.format('H:mm');\n\n      const existingDate = acc.find(group => group.date === date);\n      if (existingDate) {\n        existingDate.times.push(hour);\n      } else {\n        acc.push({ date: date, times: [hour] });\n      }\n    });\n    return acc;\n  }, [])\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2300,
        -1040
      ],
      "id": "90a63cf6-4433-43ab-8a94-0d1d2d3958a8",
      "name": "Format Slots"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f17ee24-d262-46f1-8149-a7dea7de96df",
              "name": "response",
              "value": "={{ \n  $json.data.slots.keys().map(date => {\n    return {\n      times: $json.data.slots[date].map(slot => {\n        const s = slot.time.toDateTime().minus($('baseInfo').item.json.utc, 'hours');\n        return s.toUTC();\n      })\n    };\n  })\n}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2120,
        -1040
      ],
      "id": "c3cf0dce-3a90-41d2-8c1c-7172c5f87afb",
      "name": "Adjust DateTime"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fb30d710-9962-46c5-b3cb-f0993cfd6785",
              "name": "response",
              "value": "slots not found",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2120,
        -840
      ],
      "id": "3fad5546-b69a-4160-912a-48ffda85316e",
      "name": "Response Availability Error"
    },
    {
      "parameters": {
        "name": "reschedule_appt_tool",
        "description": "=Call this tool to reschedule a user's appointment using a booking id.\n\n# To reschedule an existing booking\n* First find the existing booking so that you may obtain the existing booking's booking ID.\n* Display this booking ID to the user.\n* Use this booking ID to reschedule an existing appointment.\n* If an existing booking ID is not found or given, then notify the user that it is not possible to complete their request at this time and they should contact via email.\n* when user wants to reschedule an booking, ask for a reason for the rescheduling. Confirm with user before rescheduling an booking.",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "czYf0DoNjwOMFK8Q"
        },
        "fields": {
          "values": [
            {
              "name": "action",
              "stringValue": "reschedule booking"
            }
          ]
        },
        "specifyInputSchema": true,
        "jsonSchemaExample": "{\n\t\"booking_id\": \"the id of the booking\",\n\t\"start\": \"date and time of the start of the booking\",\n\t\"reschedulingReason\": \"rescheduling reason\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        1380,
        260
      ],
      "id": "9e98be2e-691b-4978-ba4b-0866aa2cf51d",
      "name": "Reschedule Appt Tool"
    },
    {
      "parameters": {
        "model": "llama-3.2-90b-text-preview",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        1060,
        100
      ],
      "id": "728a02ef-a00d-47d5-87cc-f1f096900571",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0dddcb7b-df63-4b9a-89ad-d426cdf9e16f",
              "name": "response",
              "value": "={{ $json.data.uid ? {\n    id: $json.data.id,\n    uid: $json.data.uid,\n    title: $json.data.title,\n    description: $json.data.description,\n    status: $json.data.status,\n    start: $json.data.start.toDateTime().format('yyyy-MM-dd H:mm'),\n    end: $json.data.end.toDateTime().format('yyyy-MM-dd H:mm'),\n    duration: $json.data.duration,\n    eventType: $json.data.eventType,\n    location: $json.data.location,\n} : 'error on booking' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1920,
        -340
      ],
      "id": "bbdf96bd-cad2-455f-8f59-4342e6af350b",
      "name": "Response Booking Success"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fb30d710-9962-46c5-b3cb-f0993cfd6785",
              "name": "response",
              "value": "={{ $json.data.rescheduledFromUid ? 'booking was rescheduled' : '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2580,
        -520
      ],
      "id": "929ac787-05ce-46c9-b217-ceb9f835c81a",
      "name": "Response Reschedule Booking"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fb30d710-9962-46c5-b3cb-f0993cfd6785",
              "name": "response",
              "value": "={{ $json.data.status ? 'booking was cancelled' : 'error on cancel booking' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2800,
        -680
      ],
      "id": "a66e3f55-2307-4ac9-af62-9acb01f9ecf7",
      "name": "Response Cancel Booking"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bed3d75f-289b-401a-a2c1-534dcd8fae94",
              "leftValue": "={{ $json.data.status }}",
              "rightValue": "cancelled",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2400,
        -760
      ],
      "id": "059156b5-bf0b-4eb3-9ebc-1d44c5b64b21",
      "name": "booking cancelled?"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fb30d710-9962-46c5-b3cb-f0993cfd6785",
              "name": "response",
              "value": "booking was cancelled",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2620,
        -860
      ],
      "id": "733a1176-1f78-4d9c-8c40-e3edc320958f",
      "name": "Response Bokking Cancelled"
    }
  ],
  "pinData": {
    "EWT": [
      {
        "json": {
          "query": {
            "event_id": "1195763",
            "prompt": "altere a duração de cada evento para 60 min."
          },
          "action": "update event",
          "access": "adm"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": {
    "node:Cal.com Trigger": {
      "webhookId": "992ce188-0fce-4a68-866f-f76b682bdcb5"
    }
  },
  "tags": [
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    },
    {
      "createdAt": "2024-10-30T23:31:05.255Z",
      "updatedAt": "2024-10-30T23:31:05.255Z",
      "id": "IDsda42rHm8bi7eR",
      "name": "Tool"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-11-12T18:34:39.052Z",
  "versionId": "6b24d259-b524-48cb-a7dc-2afd73dd488e"
}