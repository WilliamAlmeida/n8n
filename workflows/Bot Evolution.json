{
  "active": true,
  "connections": {
    "Format Message": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Message": {
      "main": [
        [
          {
            "node": "messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Image": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Audio": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Base64": {
      "main": [
        [
          {
            "node": "Media Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Audio": {
      "main": [
        [
          {
            "node": "Groq Analyze Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Image": {
      "main": [
        [
          {
            "node": "Groq Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text 2": {
      "main": [
        [
          {
            "node": "Structure Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatInfo": {
      "main": [
        [
          {
            "node": "Message Type",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Audio": {
      "main": [
        [
          {
            "node": "Format Transcription Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Image": {
      "main": [
        [
          {
            "node": "Groq Normalize Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Normalize Image": {
      "main": [
        [
          {
            "node": "Format Transcription Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media Type": {
      "main": [
        [
          {
            "node": "Convert To Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "baseInfo": {
      "main": [
        [
          {
            "node": "chatInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Base64",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messages": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "messageInfo": {
      "main": [
        [
          {
            "node": "config prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "reset memo": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "config prompt": {
      "main": [
        [
          {
            "node": "reset memo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "post status whatsapp": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reset memory": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Beautify URL": {
      "main": [
        [
          {
            "node": "Fix Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Categorizing Message": {
      "main": [
        [
          {
            "node": "Split Out Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          },
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Beautify URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-09T04:40:51.166Z",
  "id": "kGKkz9UO8hFPK9fc",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Bot Evolution",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f5addd6-12c4-4bbd-bce7-6448e90cb9d0",
              "name": "evo_api",
              "value": "={{ $('Webhook').first().json.body.inputs.serverUrl }}",
              "type": "string"
            },
            {
              "id": "d8fa0cad-0b2f-4e61-8d05-5d29829d0156",
              "name": "instance",
              "value": "={{ $('Webhook').first().json.body.inputs.instanceName }}",
              "type": "string"
            },
            {
              "id": "e390ea49-44e4-4aa2-8f1f-9044fd4b27f8",
              "name": "remoteJid",
              "value": "={{ $('Webhook').first().json.body.inputs.remoteJid }}",
              "type": "string"
            },
            {
              "id": "375453f5-c979-48d0-9a77-f2e837c80da5",
              "name": "pushName",
              "value": "={{ $('Webhook').first().json.body.inputs.pushName }}",
              "type": "string"
            },
            {
              "id": "c1179eef-b150-4d05-89c1-3b85660ec6bd",
              "name": "fromMe",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "2ca406cb-0c5a-4e69-a005-ba35e81128da",
              "name": "messageType",
              "value": "={{ $json.body.files?.length ? 'imageMessage' : 'extendedTextMessage' }}",
              "type": "string"
            },
            {
              "id": "f9189c75-e206-4c9d-a538-fadff9121f07",
              "name": "unique_id",
              "value": "={{ $('Webhook').first().json.body.inputs.instanceName }}_{{ $('Webhook').first().json.body.inputs.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "c6cd82b0-7666-4391-911e-87e0f132ba7b",
              "name": "evo_api_key",
              "value": "={{ $json.body.inputs.apiKey }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "e2070e32-5ef4-451f-af97-d016bc820f10",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1411,
        240
      ],
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "content": "## Captura Mensagem\n### Nota: Se for áudios/imagens transcreve para formato de texto\n*Obs.: No final monta estrutura JSON que será usada no restante do fluxo*",
        "height": 699.3376778124559,
        "width": 1629.5604480320626,
        "color": 5
      },
      "id": "9016b6a3-b521-4199-9bc4-21b51b5d405c",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1760,
        300
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body;\nlet response = '';\n\nconst conversation = data.query;\nconst quotedMessage = data.contextInfo?.quotedMessage?.extendedTextMessage?.text;\nconst editedMessage = data.message?.editedMessage?.message?.protocolMessage?.editedMessage?.extendedTextMessage?.text;\n\nif (quotedMessage) {\n  response = `Menção: ${quotedMessage}, Mensagem: ${conversation}`;\n} else if (editedMessage) {\n  response = `${editedMessage}*`;\n} else {\n  response = conversation;\n}\n\nreturn { output: response };"
      },
      "id": "f5da58ea-7399-48d9-b363-e96e527cd96e",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2858,
        420
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body;\n\n// data.messageTimestamp\n\nlet milis = $now.toMillis();\n\nreturn {\n  id: null,\n  origin: $('baseInfo').first().json.messageType,\n  output: $json.output,\n  timestamp_local: milis,\n  datetime_local: DateTime.fromSeconds(milis).toFormat('yyyy-MM-dd H:m:s')\n};"
      },
      "id": "82d82ec9-1c7f-43ef-9b1f-784191a316cd",
      "name": "Structure Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3260,
        640
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nconst caption = data.message?.imageMessage?.caption;\nconst content = $input.item.json.content;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = caption\n    ? `${content} Legenda: ${caption}`\n    : `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para imagem com legenda';\n}\n\nreturn { output: response };"
      },
      "id": "d726e6b2-2414-4c15-aaca-a36fdd74dafa",
      "name": "Format Transcription Image",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2860,
        800
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const content = $input.item.json.text;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para aúdio';\n}\n\nreturn { output: response };"
      },
      "id": "c23dc23b-3567-443b-a12d-21dd7f8e9a1a",
      "name": "Format Transcription Audio",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2860,
        640
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.evo_api }}/chat/getBase64FromMediaMessage/{{ $('baseInfo').first().json.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('baseInfo').first().json.evo_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": {\"key\": {\"id\": \"{{ $('Webhook').item.json.body.data.key.id }}\"}},\n  \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "fd937f13-d883-44e5-b83a-d91dbdf4ef7f",
      "name": "Get Base64",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1840,
        740
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "transcricao.ogg",
          "mimeType": "audio/ogg"
        }
      },
      "id": "c3b4c623-b6b0-4daf-828f-d6972b2117af",
      "name": "Convert To Audio",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2200,
        640
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "imagem.jpeg",
          "mimeType": "image/jpeg"
        }
      },
      "id": "ea4bd83f-184b-44d3-8c53-84ebd280a5df",
      "name": "Convert To Image",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2200,
        800
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1135cdac-e55f-4ed9-aad4-066a645b3585",
      "name": "Fix Text 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3100,
        640
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $('baseInfo').first().json.removeField('messageType').removeField('fromMe').toJsonString() }}",
        "options": {}
      },
      "id": "5403509f-8e45-46c0-8797-4663e5db3089",
      "name": "chatInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1580,
        240
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "model",
              "value": "whisper-large-v3"
            },
            {
              "name": "temperature",
              "value": "0.5"
            },
            {
              "name": "response_format",
              "value": "json"
            },
            {
              "name": "language",
              "value": "pt"
            }
          ]
        },
        "options": {}
      },
      "id": "1588848f-5717-40f8-83c1-37efb5a5d34e",
      "name": "Groq Analyze Audio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2520,
        640
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Descreva todo o conteúdo da imagem, sem Acentos e sem hífens\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"data:image/jpeg;base64,{{ $('Convert To Image').item.binary.data.data }}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"\"\n    }\n  ],\n  \"model\": \"llama-3.2-11b-vision-preview\",\n  \"temperature\": 1,\n  \"max_tokens\": 1024,\n  \"top_p\": 1,\n  \"stream\": false,\n  \"stop\": null\n}\n",
        "options": {}
      },
      "id": "fb861e2c-a72c-49e9-9ea0-d9cb85aef432",
      "name": "Groq Analyze Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2420,
        800
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8ab20a1-b06d-4840-b71f-4c53eb2b005c",
              "name": "content",
              "value": "={{ $json.choices[0].message.content ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1b1b3ca2-2fa0-4fa1-9e87-4f307056c6b1",
      "name": "Groq Normalize Image",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2640,
        800
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bba31f6b-7dc3-4dac-a090-c38d70065d40",
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "do nothing"
        }
      },
      "id": "e2dcd685-fa65-41a9-85b6-d7183e4552cb",
      "name": "Media Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1980,
        740
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "id": "4f1bd2e5-e441-4d19-95ab-a025b9a14648",
      "name": "Analyze Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        3091,
        340
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini-2024-07-18",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI-2024-07-18"
        },
        "text": "Descreva todo o conteúdo da imagem, sem Acentos e sem hífens",
        "inputType": "base64",
        "options": {}
      },
      "id": "3f4549cf-9302-4082-9cd4-3af4c5b2c974",
      "name": "Analyze Image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        3251,
        340
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "conversation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "86e7e773-8586-458f-a1fb-2890f2030230",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7f108034-a1be-4e90-b42e-e4f8a719e311",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "editedMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg edited"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "256e7cf8-be54-4c41-ba80-2d9eb0a07563",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "da03e413-3422-419c-af1a-71ff87c307e2",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "ff0641d8-85c1-4d04-ae56-57bae49e432b",
      "name": "Message Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1860,
        460
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "bot-evolution",
        "options": {}
      },
      "id": "e9fdfa98-f4ae-419c-a26b-77550474c99d",
      "name": "Webhook img",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1240,
        660
      ],
      "webhookId": "f67c8094-022b-4aef-bb16-c7e430158fd9",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "bot-evolution",
        "options": {}
      },
      "id": "02b09d48-1e1a-40f7-87ef-69d546caf5df",
      "name": "Webhook audio",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1240,
        440
      ],
      "webhookId": "f67c8094-022b-4aef-bb16-c7e430158fd9",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8227619e-aacd-4288-bc21-052d97b77d87",
              "name": "conversation",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5153bcd1-e9ee-40c6-8a04-48c74b612f98",
      "name": "messages",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3440,
        640
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"message\": \"{{ $json.output }}\"\n} ",
        "options": {}
      },
      "id": "11b3fc07-09e4-4877-9f39-03c609177892",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        5340,
        380
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "94080bbb-f4d6-41cb-8fd6-6ee881a1306c",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        4082,
        538
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gera a Resposta\nObs.: Seleciona a Base de Dados a ser usada de acordo com a Empresa de maneira Dinâmica e a usa para responder a solicitação",
        "height": 584.136756451777,
        "width": 768.3093052403206
      },
      "id": "dd62d711-11db-40d2-b269-4132bd4f956f",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3920,
        280
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}_ibox",
        "sessionTTL": 300
      },
      "id": "a8d675ea-121d-471b-bcd8-06fe05d8e56d",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        4180,
        540
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body ?? $json }}",
        "options": {}
      },
      "id": "0a8fb6f0-8dbe-4113-8321-d13ba4b27978",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3760,
        640
      ]
    },
    {
      "parameters": {
        "model": "llama-3.2-90b-text-preview",
        "options": {
          "temperature": 0
        }
      },
      "id": "dd365391-a68b-4e7c-a8b1-0547dc894dc5",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        4582,
        618
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_ibox"
      },
      "id": "72c445a6-7a8f-40ec-b2f3-e07eccbf8be4",
      "name": "reset memo",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        3980,
        400
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "7a428660-f673-4692-af26-d8b252f51466",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        4462,
        738
      ],
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "08eccb40-00d8-4101-a52e-f6cbaf728cd1",
              "name": "system",
              "value": "=**Você é um agente especializado em suporte e vendas.**\n\n**Nome do Agente:** William\n\n**Objetivo principal:** Tirar duvida sobre serviços/sistemas fornecidos pela empresa e  convencer o usuário de adquirir um plano, caso ele não tenha ainda.\n\nA data e hora atuais são **{{ $now.toISO() }}**. Todas as datas devem ser fornecidas no formato ISO nas requisições, não nas respostas para o usuário.\n\n# Responsabilidades\n1. Fornecer informações claras, educadas, informais e humoradas de acordo com a base de informações.\n2. Utilizar no **máximo 2 emojis** por resposta para manter a interação leve e amigável.\n3. Fornecer os **links direto, sem formatação**, quando solicitado.\n4. Manter o tom de conversa descontraído, com mensagens objetivas e curtas.\n5. **Dividir respostas longas** em partes para facilitar a compreensão.\n6. **NUNCA INVENTE INFORMAÇÃO** que não esteja na base de dados TOOL **ibox_info**.\n7. Pode adicionar o nome do usuário na resposta, quando achar necessário.\n8. **Sugira planos disponíveis** no sistema com base na necessidade do usuário, sempre consultando a base de dados **ibox_info**.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8be868f5-7a41-4968-a950-5bf0acff123f",
      "name": "config prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3980,
        640
      ]
    },
    {
      "parameters": {
        "name": "ibox_info",
        "description": "use essa ferramenta para retornar informações para serem usadas na geração das respostas, mas somente se tiver haver com a empresa ibox",
        "topK": 3
      },
      "id": "b37609db-d772-465a-8992-025f1e2555b4",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        4460,
        500
      ]
    },
    {
      "parameters": {
        "name": "post_status_whatsapp",
        "description": "use essa ferramenta para postar uma mensagem no status do usuário, mas somente após a confirmação dele, lembre-se de pergunta a cor de fundo e fonte se usuário não tiver informado.\n\n# O texto a ser enviado na precisa ter entre entre 100 e 300 caracteres, você pode sugerir um alternativa, se ele desejar e aceitar.\n\n# Recomende no máximo 5 linhas com 44 caracteres por linha, mas aceite mais se o usuário deseja.\n\n# Formatação de Texto no Status\n* + texto + * = deixa o texto em negrito;\n_ + texto + _ = deixa o texto em itálico;\n~+ texto + ~ = deixa o texto sublinhado;",
        "workflowId": {
          "__rl": true,
          "value": "LS8CfvECZu2puiXb",
          "mode": "list",
          "cachedResultName": "AI 4 iBox"
        },
        "fields": {
          "values": [
            {
              "name": "extra",
              "type": "objectValue",
              "objectValue": "={\n    \"tool\": \"post_status_whatsapp\",\n    \"evo_params\": {\n        \"url\": \"{{ $('messageInfo').first().json.evo_api }}\",\n        \"api_key\": \"{{ $('messageInfo').first().json.evo_api_key }}\",\n        \"instance\": \"{{ $('messageInfo').first().json.instance }}\"\n    },\n    \"query\":\n    {\n        \"type\": \"text\",\n        \"caption\": \"\",\n        \"allContacts\": false,\n        \"statusJidList\":\n        [\n            \"{{ $('messageInfo').first().json.remoteJid }}\"\n        ]\n    }\n}"
            },
            {
              "name": "extra.evo_params.url",
              "stringValue": "={{ $('messageInfo').first().json.evo_api }}"
            }
          ]
        },
        "specifyInputSchema": true,
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"content\": {\n      \"type\": \"string\",\n      \"description\": \"texto a ser enviado\"\n    },\n    \"backgroundColor\": {\n      \"type\": \"string\",\n      \"description\": \"cor de fundo a ser usado, sempre enviar como hexadeicmal: #000000\"\n    },\n    \"font\": {\n      \"type\": \"number\",\n      \"description\": \"Escolha entre as fontes mais adequadas ao texto informado, somente se o usuário não especificar uma fonte das opções: 1 = SERIF, 2 = NORICAN_REGULAR, 3 = BRYNDAN_WRITE, 4 = BEBASNEUE_REGULAR ou 5 = OSWALD_HEAVY.\"\n    }\n  },\n  \"required\": [\n    \"content\",\n    \"backgroundColor\",\n    \"font\"\n  ]\n}"
      },
      "id": "eea9c392-094f-4f66-82df-5dcf96a44ea0",
      "name": "post status whatsapp",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        4222,
        718
      ]
    },
    {
      "parameters": {
        "name": "reset_memory",
        "description": "use essa ferramenta para limpar a memória da conversa",
        "workflowId": {
          "__rl": true,
          "value": "LS8CfvECZu2puiXb",
          "mode": "list",
          "cachedResultName": "AI 4 iBox"
        },
        "fields": {
          "values": [
            {
              "name": "extra.tool",
              "stringValue": "reset_memory"
            },
            {
              "name": "unique_id",
              "stringValue": "=memo_{{ $('messageInfo').first().json.unique_id }}_ibox"
            }
          ]
        }
      },
      "id": "6dbb4dcc-9bcf-439d-bef8-2918c93ee68e",
      "name": "reset memory",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        4342,
        758
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "e48769e7-5358-406e-ae6d-e7c4572d09a6",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3600,
        260
      ]
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "ibox_delivery",
          "mode": "list",
          "cachedResultName": "ibox_delivery"
        },
        "options": {}
      },
      "id": "49ad216b-e33b-4cc7-8141-da6cd41ec389",
      "name": "Qdant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        4340,
        620
      ],
      "credentials": {
        "qdrantApi": {
          "id": "ukGdBAa9ib5xqZKC",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $('messageInfo').item.json.conversation }}",
        "schemaType": "manual",
        "inputSchema": "{\n\t\"type\": \"object\",\n    \"properties\": {\n      \"info_identified\": {\n        \"type\": \"array\",\n        \"items\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"value\": {\n              \"type\": \"string\",\n              \"description\": \"Information provided by the user, such as name, email, phone number, or other relevant details\"\n            },\n            \"key\": {\n              \"type\": \"string\",\n              \"description\": \"any index of information collected\"\n            }\n          },\n          \"required\": [\n            \"value\",\n            \"key\"\n          ]\n        }\n      },\n      \"user_intent\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"description\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"description\"\n        ]\n      }\n    }\n}",
        "options": {}
      },
      "id": "b3e7663f-7d8c-4edc-b007-52397556091f",
      "name": "Information Extractor",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        5520,
        380
      ]
    },
    {
      "parameters": {
        "model": "llama-3.2-11b-text-preview",
        "options": {
          "maxTokensToSample": 200,
          "temperature": 0
        }
      },
      "id": "8f0d4541-8f97-4571-b7db-fcff5d184369",
      "name": "Groq Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        5520,
        580
      ],
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "a47881b3-7557-4bbf-a9d7-8d9bc971406c",
      "name": "Sentiment Analysis",
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1,
      "position": [
        6460,
        380
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "18585b09-05b2-4ae3-a4fc-039a9eab487c",
      "name": "Text Classifier",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        5680,
        760
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "# Faz o tratamento da Resposta",
        "height": 282.92195447896734,
        "width": 561.4289458648389,
        "color": 5
      },
      "id": "3ab33dd0-105d-487e-917f-d3328e036342",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4720,
        280
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Função 1: Remove caption de links que não são imagens ou vídeos\nfunction removeCaptionFromLinks(text) {\n  // Expressão regular para identificar links que não são imagens ou vídeos\n  const regexLinks = /\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+)\\)/gi;\n  \n  return text.replace(regexLinks, (match, caption, url) => {\n    // Se o link não for de imagem ou vídeo, remove o caption e mantém só a URL\n    if (!url.match(/\\.(jpeg|jpg|png|gif|bmp|webp|avif|mp4|mov|avi|wmv)$/i)) {\n      return url;\n    }\n    return match; // Mantém o link inalterado se for uma imagem ou vídeo\n  });\n}\n\nconst message = $input.item.json.output;\n\n// Primeira função: remove captions de links não-imagens/vídeos\ncleanedMessage = removeCaptionFromLinks(message);\n\nreturn { output: cleanedMessage };"
      },
      "id": "982cbb6c-46b8-4f2a-9a79-eaaa3fc33521",
      "name": "Beautify URL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4860,
        380
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const message = $input.item.json.output;\n\nconst regex = /(?:\\!\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif)))/gi;\n\nconst parts = [];\nlet lastIndex = 0;\nlet match;\n\nwhile ((match = regex.exec(message)) !== null) {\n  // Adiciona o texto entre os matches\n  if (match.index > lastIndex) {\n    let content = message.slice(lastIndex, match.index).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n    // Remove o '-' desnecessário no final do texto, se presente\n    if (content.endsWith('-')) {\n      content = content.slice(0, -1).trim();\n    }\n    if (content) {\n      content = content.replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n      parts.push({ type: 'text', content });\n    }\n  }\n\n  // Adiciona as imagens ou links encontrados\n  if (match[1]) {\n    parts.push({ type: 'image', caption: match[1], url: match[2] });\n  } else if (match[3]) {\n    parts.push({ type: 'image', caption: match[3], url: match[4] });\n  } else if (match[5] || match[6]) {\n    parts.push({ type: 'image', url: match[5] || match[6] });\n  }\n\n  // Atualiza o último índice processado\n  lastIndex = regex.lastIndex;\n}\n\n// Adiciona o texto final, se houver\nif (lastIndex < message.length) {\n  let finalContent = message.slice(lastIndex).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n  if (finalContent.endsWith('-')) {\n    finalContent = finalContent.slice(0, -1).trim();\n  }\n  if (finalContent) {\n    parts.push({ type: 'text', content: finalContent });\n  }\n}\n\n// Verifica se a parte é um vídeo e adiciona\nparts.forEach(part => {\n  if (part.type === 'url' && part.url.match(/\\.(mp4|mov|avi|wmv)$/)) {\n    part.type = 'video';\n  }\n});\n\nreturn { output: parts };\n"
      },
      "id": "ca1a8883-af2d-4691-b53b-dbe9d1c0c712",
      "name": "Categorizing Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5100,
        600
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "708ac8ef-d996-41ee-b844-c5c2e148b1f2",
      "name": "Split Out Messages",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        5260,
        600
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*').replace(/(?<!\\\\)\"/g, '\\\\\"').replace(/^\\n+/g, '') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "50129688-0df5-4315-9f15-b15c96ecd7e7",
      "name": "Fix Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5060,
        380
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "606ce8e5-61b9-4f02-8058-dd8f8caa683f",
              "name": "values",
              "value": "={{ $json.output.info_identified }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "23bfcd97-9cc3-4e18-a5dd-933915215b56",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6040,
        260
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').first().json.conversation }}",
        "options": {
          "systemMessage": "={{ $('config prompt').first().json.system }}"
        }
      },
      "id": "a5d128c9-3b03-450b-98e2-22f48f59bc04",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        4120,
        400
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f67c8094-022b-4aef-bb16-c7e430158fd9",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "e0a0f323-1ded-4cdf-91da-20666ff76af1",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1240,
        240
      ],
      "webhookId": "f67c8094-022b-4aef-bb16-c7e430158fd9"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_ibox_user",
        "value": "={{ $('Edit Fields').first().json.values }}",
        "keyType": "string",
        "expire": true,
        "ttl": 20
      },
      "id": "7ab32fbb-8b3f-4e71-8de6-0fc539f95611",
      "name": "Redis",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        6680,
        140
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "values",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_ibox_user",
        "keyType": "string",
        "options": {}
      },
      "id": "28fc3eba-b048-410f-8d48-0bcab576b53e",
      "name": "Redis1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5880,
        440
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}_ibox_user"
      },
      "id": "631c839b-7621-47f0-8761-6fbeffff33df",
      "name": "Redis2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        5740,
        580
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7acaaac2-306f-40b6-8eb7-f4f3fd84de0d",
              "name": "values",
              "value": "={{ $json.values() }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "id": "524a735e-9fac-4286-b779-7da4f36e9a22",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        6040,
        440
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "id": "5a198543-8638-4b44-b4ca-8d931010ad8c",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        6220,
        280
      ]
    }
  ],
  "pinData": {
    "Webhook img": [
      {
        "json": {
          "headers": {
            "connection": "keep-alive",
            "host": "n8n.wmst.com.br",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "10.0.0.2",
            "x-real-ip": "10.0.0.2",
            "content-length": "495",
            "accept": "application/json, text/plain, */*",
            "content-type": "application/json",
            "authorization": "Bearer teste",
            "user-agent": "axios/1.7.7",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "inputs": {
              "sessionId": "cm21e99jw02qg7rlyg6zoudlb",
              "remoteJid": "5512982184879@s.whatsapp.net",
              "pushName": "W.M. Soluções Tecnologicas",
              "instanceName": "ibox_cli_23",
              "serverUrl": "https://apiwp.wmst.com.br",
              "apiKey": "PxzMJa1fEWPgCdgpGjz7kftLwaV857RI"
            },
            "query": "teste",
            "user": "5512982184879@s.whatsapp.net",
            "files": [
              {
                "type": "image",
                "url": "https://s3.wmst.com.br/evolution/evolution-api/2e872b5c-6dd8-48fc-8cbf-f5a7f3626ca1/5512982184879%40s.whatsapp.net/imageMessage/3EB000D935EED47EFD4751.jpeg"
              }
            ]
          },
          "webhookUrl": "https://webhook.n8n.wmst.com.br/webhook-test/bot-evolution",
          "executionMode": "test"
        }
      }
    ],
    "Webhook audio": [
      {
        "json": {
          "headers": {
            "connection": "keep-alive",
            "host": "n8n.wmst.com.br",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "10.0.0.2",
            "x-real-ip": "10.0.0.2",
            "content-length": "735",
            "accept": "application/json, text/plain, */*",
            "content-type": "application/json",
            "authorization": "Bearer teste",
            "user-agent": "axios/1.7.7",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "inputs": {
              "sessionId": "cm21e99jw02qg7rlyg6zoudlb",
              "remoteJid": "5512982184879@s.whatsapp.net",
              "pushName": "W.M. Soluções Tecnologicas",
              "instanceName": "ibox_cli_23",
              "serverUrl": "https://apiwp.wmst.com.br",
              "apiKey": "PxzMJa1fEWPgCdgpGjz7kftLwaV857RI"
            },
            "query": "audioMessage|https://s3.wmst.com.br/evolution/evolution-api/2e872b5c-6dd8-48fc-8cbf-f5a7f3626ca1/5512982184879%40s.whatsapp.net/audioMessage/3EB01D59D9D9BB6B6CB7E9.oga?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=jPRmOTE4HpOKGlrQR9oa%2F20241009%2Feu-west-3%2Fs3%2Faws4_request&X-Amz-Date=20241009T045339Z&X-Amz-Expires=604800&X-Amz-SignedHeaders=host&X-Amz-Signature=5eee4b3dc33b95592e95003548e334ba72ab133f559799428f7fdd85b38371a1",
            "user": "5512982184879@s.whatsapp.net"
          },
          "webhookUrl": "https://webhook.n8n.wmst.com.br/webhook-test/bot-evolution",
          "executionMode": "test"
        }
      }
    ],
    "AI Agent": [
      {
        "json": {
          "output": "Oi, **William**! Que coincidência, meu nome também é William! 😄\nComo posso te ajudar hoje?"
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "webhook.n8n.wmst.com.br",
            "x-forwarded-scheme": "https",
            "x-forwarded-proto": "https",
            "x-forwarded-for": "10.0.0.2",
            "x-real-ip": "10.0.0.2",
            "connection": "close",
            "content-length": "302",
            "accept": "application/json, text/plain, */*",
            "content-type": "application/json",
            "user-agent": "axios/1.7.7",
            "accept-encoding": "gzip, compress, deflate, br"
          },
          "params": {},
          "query": {},
          "body": {
            "inputs": {
              "sessionId": "cm2b6668u00mxsy2h73jc72tk",
              "remoteJid": "5512982184879@s.whatsapp.net",
              "pushName": "W.M. Soluções Tecnologicas",
              "instanceName": "ibox_cli_23",
              "serverUrl": "https://apiwp.wmst.com.br",
              "apiKey": "PxzMJa1fEWPgCdgpGjz7kftLwaV857RI"
            },
            "query": "bot, oi, me chamo William, tenho uma lanchonete, sou de lorena, gostaria de saber se vocês tem sistema de delivery",
            "user": "5512982184879@s.whatsapp.net"
          },
          "webhookUrl": "https://webhook.n8n.wmst.com.br/webhook/f67c8094-022b-4aef-bb16-c7e430158fd9",
          "executionMode": "production"
        }
      }
    ],
    "Information Extractor": [
      {
        "json": {
          "output": {
            "info_identified": [
              {
                "value": "William",
                "key": "nome"
              },
              {
                "value": "Lorena",
                "key": "cidade"
              },
              {
                "value": "sistema de delivery",
                "key": "interesse"
              }
            ],
            "user_intent": {
              "description": "pesquisar sobre sistema de delivery"
            }
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-10-16T03:24:00.329Z",
  "versionId": "1720236a-fb8a-4f48-be01-ec868d26aba1"
}