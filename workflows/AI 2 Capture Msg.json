{
  "active": true,
  "connections": {
    "baseInfo": {
      "main": [
        [
          {
            "node": "from me?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset msgs": {
      "main": [
        [
          {
            "node": "msg to queue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Image": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Audio": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Base64": {
      "main": [
        [
          {
            "node": "Media Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Audio": {
      "main": [
        [
          {
            "node": "Groq Analyze Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Image": {
      "main": [
        [
          {
            "node": "Groq Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text 2": {
      "main": [
        [
          {
            "node": "Structure Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Message": {
      "main": [
        [
          {
            "node": "reset msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has chat?": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "init chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete chat": {
      "main": [
        [
          {
            "node": "get chat 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatInfo": {
      "main": [
        [
          {
            "node": "Message Type",
            "type": "main",
            "index": 0
          },
          {
            "node": "get debounce status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "init chat": {
      "main": [
        [
          {
            "node": "get chat 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "msg to queue": {
      "main": [
        [
          {
            "node": "update debounce time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get chat 1": {
      "main": [
        [
          {
            "node": "has chat?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get chat 2": {
      "main": [
        [
          {
            "node": "merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "from me?": {
      "main": [
        [
          {
            "node": "set block AI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get block AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get block AI": {
      "main": [
        [
          {
            "node": "AI blocked?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI blocked?": {
      "main": [
        [],
        [
          {
            "node": "get ignored numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Base64",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Audio": {
      "main": [
        [
          {
            "node": "Format Transcription Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Image": {
      "main": [
        [
          {
            "node": "Groq Normalize Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Normalize Image": {
      "main": [
        [
          {
            "node": "Format Transcription Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get ignored numbers": {
      "main": [
        [
          {
            "node": "has ignored numbers? 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ignore numbers": {
      "main": [
        [
          {
            "node": "allow numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set ignored numbers": {
      "main": [
        [
          {
            "node": "ignore numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "allow numbers": {
      "main": [
        [
          {
            "node": "delete chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has ignored numbers? 2": {
      "main": [
        [
          {
            "node": "set ignored numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch ignored numbers": {
      "main": [
        [
          {
            "node": "has ignored numbers? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media Type": {
      "main": [
        [
          {
            "node": "Convert To Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "debounce enabled?": {
      "main": [
        [
          {
            "node": "set debounce enabled",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set debounce enabled": {
      "main": [
        [
          {
            "node": "wk debounce",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has ignored numbers? 1": {
      "main": [
        [
          {
            "node": "ignore numbers",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch ignored numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "merge": {
      "main": [
        [
          {
            "node": "chatInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get debounce status": {
      "main": [
        [
          {
            "node": "debounce enabled?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-26T18:07:32.826Z",
  "id": "F2nw1xU7dOvgvtCa",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 2 Capture Msg",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f5addd6-12c4-4bbd-bce7-6448e90cb9d0",
              "name": "evo_api",
              "value": "={{ $('Webhook').first().json.body.server_url ?? 'http://evo.wsl.local' }}",
              "type": "string"
            },
            {
              "id": "d8fa0cad-0b2f-4e61-8d05-5d29829d0156",
              "name": "instance",
              "value": "={{ $('Webhook').first().json.body.instance }}",
              "type": "string"
            },
            {
              "id": "e390ea49-44e4-4aa2-8f1f-9044fd4b27f8",
              "name": "remoteJid",
              "value": "={{ $('Webhook').first().json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "375453f5-c979-48d0-9a77-f2e837c80da5",
              "name": "pushName",
              "value": "={{ $('Webhook').first().json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "c1179eef-b150-4d05-89c1-3b85660ec6bd",
              "name": "fromMe",
              "value": "={{ $('Webhook').first().json.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "2ca406cb-0c5a-4e69-a005-ba35e81128da",
              "name": "messageType",
              "value": "={{ $('Webhook').first().json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "f9189c75-e206-4c9d-a538-fadff9121f07",
              "name": "unique_id",
              "value": "={{ $('Webhook').first().json.body.instance }}_{{ $('Webhook').first().json.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "f305da1c-b096-4af0-ab8b-1af6798dcac8",
              "name": "debounce_time",
              "value": 5,
              "type": "number"
            },
            {
              "id": "c6cd82b0-7666-4391-911e-87e0f132ba7b",
              "name": "evo_api_key",
              "value": "={{ $json.body.apikey ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5be12719-5c0c-40ad-951f-bf18429eab61",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -15349.325581395351,
        1300
      ],
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=msgs_{{ $('chatInfo').first().json.unique_id }}"
      },
      "id": "f88a7cbb-1ca4-4cad-b683-9140ea369414",
      "name": "reset msgs",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -10980,
        1360
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Captura Mensagem\n### Nota: Se for áudios/imagens transcreve para formato de texto\n*Obs.: No final monta estrutura JSON que será usada no restante do fluxo*",
        "height": 699.3376778124559,
        "width": 1629.5604480320626,
        "color": 5
      },
      "id": "e993541b-af34-4cd1-9985-c9034f240886",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -12740,
        1020
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nlet response = '';\n\nconst conversation = data.message.conversation;\nconst quotedMessage = data.contextInfo?.quotedMessage?.extendedTextMessage?.text;\nconst editedMessage = data.message.editedMessage?.message?.protocolMessage?.editedMessage?.extendedTextMessage?.text;\n\nif (quotedMessage) {\n  response = `Menção: ${quotedMessage}, Mensagem: ${conversation}`;\n} else if (editedMessage) {\n  response = `${editedMessage}*`;\n} else {\n  response = conversation;\n}\n\nreturn { output: response };"
      },
      "id": "92f6f123-f915-4ff0-a1fc-a9095a1bd734",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -11642,
        1140
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\n\n// data.messageTimestamp\n\nlet milis = $now.toMillis();\n\nreturn {\n  id: data.key.id,\n  origin: data.messageType,\n  output: $json.output,\n  timestamp: data.messageTimestamp,\n  datetime: DateTime.fromSeconds(data.messageTimestamp).toFormat('yyyy-MM-dd H:m:s'),\n  timestamp_local: milis,\n  datetime_local: DateTime.fromSeconds(milis).toFormat('yyyy-MM-dd H:m:s')\n};"
      },
      "id": "c5a1fd3d-3c3e-43a2-94d3-478a4c9ed45f",
      "name": "Structure Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -11240,
        1360
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nconst caption = data.message?.imageMessage?.caption;\nconst content = $input.item.json.content;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = caption\n    ? `${content} Legenda: ${caption}`\n    : `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para imagem com legenda';\n}\n\nreturn { output: response };"
      },
      "id": "66225144-4ab5-44be-a49f-2aa38b98ee2d",
      "name": "Format Transcription Image",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -11640,
        1520
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const content = $input.item.json.text;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para aúdio';\n}\n\nreturn { output: response };"
      },
      "id": "c9869f31-eccf-4a79-b800-605d5343a5c1",
      "name": "Format Transcription Audio",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -11640,
        1360
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.evo_api }}/chat/getBase64FromMediaMessage/{{ $('baseInfo').first().json.instance }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $('baseInfo').first().json.evo_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": {\"key\": {\"id\": \"{{ $('Webhook').item.json.body.data.key.id }}\"}},\n  \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "b96dcc99-4a66-4eda-a037-2e7982f20b31",
      "name": "Get Base64",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -12660,
        1460
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "transcricao.ogg",
          "mimeType": "audio/ogg"
        }
      },
      "id": "492fb272-05f5-4dc4-9f21-89be4b30d387",
      "name": "Convert To Audio",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -12300,
        1360
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "imagem.jpeg",
          "mimeType": "image/jpeg"
        }
      },
      "id": "d065c51a-6b86-494a-9a45-a63c3b9d7c91",
      "name": "Convert To Image",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -12300,
        1520
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "47d2e70c-6684-4fc9-84a6-7d24947b3538",
      "name": "Fix Text 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -11400,
        1360
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "content": "## Adiciona Mensagem na Fila\n*Adiciona mensagem no final da fila para ser processada após o Debounce Time expirar*",
        "height": 290.7734320620505,
        "width": 555.5307700228434,
        "color": 3
      },
      "id": "f3243e4a-b107-420a-b904-4da64deef1e0",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -11049,
        1240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0a106bfb-7d1a-4eaa-9d4e-2d933ed51839",
              "leftValue": "={{ $('get chat 1').first().json.chat }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bcb75d80-4431-4749-a97b-7240d5db26d8",
      "name": "has chat?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -13300.325581395351,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}"
      },
      "id": "b9ef358d-2690-469d-a34d-62ad6c23f0e8",
      "name": "delete chat",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13620.325581395351,
        1200
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.chat.parseJson().removeField('fromMe').removeField('debounce_time') }}",
        "options": {}
      },
      "id": "546a37e7-93a5-4008-9928-c14f7618d8f5",
      "name": "chatInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -12929.325581395351,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}",
        "value": "={{ $('baseInfo').first().json.removeField('messageType').toJsonString() }}"
      },
      "id": "a29aaeb9-2595-48ae-9039-6232ab650268",
      "name": "init chat",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13300,
        1400
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=msgs_{{ $('chatInfo').first().json.unique_id }}",
        "messageData": "={{ $('Structure Message').first().json.toJsonString() }}",
        "tail": true
      },
      "id": "3ac7e205-3f6e-4441-b3e6-dad611e431ac",
      "name": "msg to queue",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -10820,
        1360
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "chat",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "dd47ad43-bcda-4009-9916-141893f00d2b",
      "name": "get chat 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13460.325581395351,
        1200
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "chat",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "9333bb12-dea4-4323-94ae-2fb380d7c1cb",
      "name": "get chat 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -13160,
        1400
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "431dcbe2-fb2e-4864-803d-d968ddcb255f",
              "leftValue": "={{ $json.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b1d0e8bf-327b-4320-b07b-2d0ac7a28556",
      "name": "from me?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -15160.325581395351,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=block_{{ $json.unique_id }}",
        "value": "1",
        "expire": true,
        "ttl": 30
      },
      "id": "da58cd7f-e0ae-4562-b120-fb057df665e7",
      "name": "set block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14957.325581395351,
        1211
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "=block_{{ $json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "4f84fa38-ba24-4232-a121-a04704299c61",
      "name": "get block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14957.325581395351,
        1371
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af15b823-b848-4adf-be57-5ce022c321a8",
              "leftValue": "={{ $json.block }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2eaeb409-20d6-4548-a3e3-260fb72e7d86",
      "name": "AI blocked?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -14760.325581395351,
        1280
      ]
    },
    {
      "parameters": {
        "content": "## Gerencia o Bloqueio da AI\n*Se enviado pelo dono do whatsapp, ele bloqueia por N segundos*",
        "height": 407.0742534707905,
        "width": 586.0266008245178
      },
      "id": "9ab5a7ef-c3f5-47b0-8988-e490ddf2b246",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -15189.325581395351,
        1120
      ]
    },
    {
      "parameters": {
        "content": "## Gerencia o Chat/Sessão\n*Verifica se tem sessão, se não tiver cria com os dados do usuário*",
        "height": 440.5243062483743,
        "width": 856.5452909686502
      },
      "id": "4c7b18a9-afc6-4534-b336-388e924d2889",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -13649.325581395351,
        1120
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "conversation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "86e7e773-8586-458f-a1fb-2890f2030230",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7f108034-a1be-4e90-b42e-e4f8a719e311",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "editedMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg edited"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "256e7cf8-be54-4c41-ba80-2d9eb0a07563",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "da03e413-3422-419c-af1a-71ff87c307e2",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "9ec9a68c-1fcf-41b0-9bbd-0f61ae5e30d0",
      "name": "Message Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -12640,
        1180
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "model",
              "value": "whisper-large-v3"
            },
            {
              "name": "temperature",
              "value": "0.5"
            },
            {
              "name": "response_format",
              "value": "json"
            },
            {
              "name": "language",
              "value": "pt"
            }
          ]
        },
        "options": {}
      },
      "id": "580d55fb-485f-48da-9fd6-b2c78e0ccf5e",
      "name": "Groq Analyze Audio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -11980,
        1360
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Descreva todo o conteúdo da imagem, sem Acentos e sem hífens\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"data:image/jpeg;base64,{{ $('Convert To Image').item.binary.data.data }}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"\"\n    }\n  ],\n  \"model\": \"llama-3.2-11b-vision-preview\",\n  \"temperature\": 1,\n  \"max_tokens\": 1024,\n  \"top_p\": 1,\n  \"stream\": false,\n  \"stop\": null\n}\n",
        "options": {}
      },
      "id": "d35bc0fa-8e36-4398-95ff-bd20cd3b0a80",
      "name": "Groq Analyze Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -12080,
        1520
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8ab20a1-b06d-4840-b71f-4c53eb2b005c",
              "name": "content",
              "value": "={{ $json.choices[0].message.content ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "f4ace6ae-7918-48bf-bd03-d9d8732fa9b0",
      "name": "Groq Normalize Image",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -11860,
        1520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "479ad9fd-bb31-42db-a957-658e9e1d556f",
              "leftValue": "={{ $json.ignored_id.split(',').indexOf($('baseInfo').item.json.remoteJid.split('@')[0]) }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2f694535-ddc8-4fe8-81a5-e5974f7e0e12",
      "name": "allow numbers",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -13840.325581395351,
        1211
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "ignore_numbers",
        "key": "=ignore_numbers_{{ $('baseInfo').first().json.instance }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "5bc4cf4c-ddf9-49f8-b5a9-518ab8949c7b",
      "name": "get ignored numbers",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14500.325581395351,
        1231
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd480120-b53b-4c64-9cbf-d5bfd813e50c",
              "name": "ignored_id",
              "value": "={{ $('get ignored numbers').first().json.ignore_numbers?.ignoreJids ?? $('set ignored numbers').first().json.ignoreJids ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "dc43e76f-659b-4b5c-807b-708e427fe1e7",
      "name": "ignore numbers",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -14000.325581395351,
        1211
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=ignore_numbers_{{ $('baseInfo').first().json.instance }}",
        "value": "={{ $json }}",
        "keyType": "hash",
        "expire": true,
        "ttl": 600
      },
      "id": "7281fe89-6e0f-4ea4-9448-d8904f7c1a4d",
      "name": "set ignored numbers",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -14000.325581395351,
        1431
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gerencia o Bloqueio de Números Ignorados\n*Se enviado pelo por um whatsapp na lista, ele não repassa a mensagem*",
        "height": 503.26329788234716,
        "width": 852.5550756813022
      },
      "id": "fc8fb021-73dc-4ab6-98df-70ddbf3b5e9e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -14549.325581395351,
        1120
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "44ec5f74-49fb-47e7-8b75-f344bad095a6",
      "name": "has ignored numbers? 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -14240.325581395351,
        1451
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "empresas",
        "filters": {
          "conditions": [
            {
              "keyName": "instance_name",
              "keyValue": "={{ $('baseInfo').first().json.instance }}"
            }
          ]
        }
      },
      "id": "43ea7b48-f122-4e68-a682-357918b22ec3",
      "name": "fetch ignored numbers",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -14460.325581395351,
        1451
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWYYqpMcDDFZTW3g",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bba31f6b-7dc3-4dac-a090-c38d70065d40",
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "do nothing"
        }
      },
      "id": "1221c114-2a9f-4ae6-bbbb-f3a6e4974701",
      "name": "Media Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -12520,
        1460
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "68ddab78-6782-443f-9682-326e7712f0d8",
              "leftValue": "={{ $json.active }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "403b4806-9f55-4c31-87be-f12286aee75a",
      "name": "debounce enabled?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -12560,
        1740
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "workflow_debounce",
        "value": "1",
        "keyType": "string"
      },
      "id": "805f293f-74f9-4c88-8b00-db632e9a489e",
      "name": "set debounce enabled",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -12340,
        1740
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=debounce_{{ $('chatInfo').first().json.unique_id }}",
        "value": "={{ $now.plus( $('baseInfo').first().json.debounce_time , 'seconds').toMillis() }}",
        "keyType": "string"
      },
      "id": "248fca17-36cb-42d4-8901-3ab4cc1d991b",
      "name": "update debounce time",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -10660,
        1360
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.ignore_numbers.ignoreJids }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d3de0a66-82b1-400e-904c-3cf07fcbe74c",
      "name": "has ignored numbers? 1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -14300.325581395351,
        1231
      ]
    },
    {
      "parameters": {
        "operation": "activate",
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "KCzwyXp5E0KjdlRc"
        },
        "requestOptions": {}
      },
      "id": "4e48dff7-731f-41e2-ad6e-4c29092de62f",
      "name": "wk debounce",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -12160,
        1740
      ],
      "credentials": {
        "n8nApi": {
          "id": "kuCc4NOcDaUS3bF4",
          "name": "william"
        }
      }
    },
    {
      "parameters": {},
      "id": "0167735d-9aed-46ea-a6db-26e4e9ced690",
      "name": "merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -13080.325581395351,
        1200
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "active",
        "key": "workflow_debounce",
        "keyType": "string",
        "options": {}
      },
      "id": "b63e1210-3222-4b0f-aa1e-55ac85e5d7fc",
      "name": "get debounce status",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -12740,
        1740
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "id": "296a6c14-e2d8-4c97-aaa4-d42c5bfd9c7a",
      "name": "Analyze Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        -11409,
        1060
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini-2024-07-18",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI-2024-07-18"
        },
        "text": "Descreva todo o conteúdo da imagem, sem Acentos e sem hífens",
        "inputType": "base64",
        "options": {}
      },
      "id": "093556d3-6afd-4e64-ad92-85b0ac1f5008",
      "name": "Analyze Image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        -11249,
        1060
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f67c8094-022b-4aef-bb16-c7e430158fd9",
        "options": {}
      },
      "id": "8d951bba-44fa-45a9-8177-626158b30a42",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -15520,
        1300
      ],
      "webhookId": "f67c8094-022b-4aef-bb16-c7e430158fd9"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-10-09T04:36:33.723Z",
  "versionId": "bc125a5a-02c5-4eba-96fe-05f2855d463c"
}