{
  "active": true,
  "connections": {
    "baseInfo": {
      "main": [
        [
          {
            "node": "from me?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reset msgs": {
      "main": [
        [
          {
            "node": "msg to queue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Message": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Image": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Transcription Audio": {
      "main": [
        [
          {
            "node": "Fix Text 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Base64": {
      "main": [
        [
          {
            "node": "Media Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Audio": {
      "main": [
        [
          {
            "node": "Groq Analyze Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert To Image": {
      "main": [
        [
          {
            "node": "Groq Analyze Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text 2": {
      "main": [
        [
          {
            "node": "Structure Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Message": {
      "main": [
        [
          {
            "node": "reset msgs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has chat?": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "init chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete chat": {
      "main": [
        [
          {
            "node": "get chat 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "chatInfo": {
      "main": [
        [
          {
            "node": "Message Type",
            "type": "main",
            "index": 0
          },
          {
            "node": "debounce active?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "init chat": {
      "main": [
        [
          {
            "node": "get chat 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "msg to queue": {
      "main": [
        [
          {
            "node": "set debounce",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get chat 1": {
      "main": [
        [
          {
            "node": "has chat?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get chat 2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "from me?": {
      "main": [
        [
          {
            "node": "set block AI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "get block AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get block AI": {
      "main": [
        [
          {
            "node": "AI blocked?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI blocked?": {
      "main": [
        [],
        [
          {
            "node": "get ignored numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set debounce": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message Type": {
      "main": [
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Base64",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "debounce active?": {
      "main": [
        [
          {
            "node": "Debounce is active?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Debounce is active?": {
      "main": [
        [
          {
            "node": "set wk debounce",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Audio": {
      "main": [
        [
          {
            "node": "Format Transcription Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "chatInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Analyze Image": {
      "main": [
        [
          {
            "node": "Groq Normalize Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Normalize Image": {
      "main": [
        [
          {
            "node": "Format Transcription Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get ignored numbers": {
      "main": [
        [
          {
            "node": "has ignored numbers?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has ignored numbers?": {
      "main": [
        [
          {
            "node": "ignore numbers",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch ignored numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ignore numbers": {
      "main": [
        [
          {
            "node": "allow numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set ignored numbers": {
      "main": [
        [
          {
            "node": "ignore numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "allow numbers": {
      "main": [
        [
          {
            "node": "delete chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has ignored numbers? 2": {
      "main": [
        [
          {
            "node": "set ignored numbers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch ignored numbers": {
      "main": [
        [
          {
            "node": "has ignored numbers? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Media Type": {
      "main": [
        [
          {
            "node": "Convert To Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Convert To Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "now_start": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "now_end": {
      "main": [
        [
          {
            "node": "nows_diff",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "nows_diff": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "set wk debounce": {
      "main": [
        [
          {
            "node": "active debounce",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "baseInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-09-26T18:07:32.826Z",
  "id": "F2nw1xU7dOvgvtCa",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "AI 2 Capture Msg",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5f5addd6-12c4-4bbd-bce7-6448e90cb9d0",
              "name": "evo_api",
              "value": "https://apiwp.wmst.com.br",
              "type": "string"
            },
            {
              "id": "d8fa0cad-0b2f-4e61-8d05-5d29829d0156",
              "name": "instance",
              "value": "={{ $('Webhook').first().json.body.instance }}",
              "type": "string"
            },
            {
              "id": "e390ea49-44e4-4aa2-8f1f-9044fd4b27f8",
              "name": "remoteJid",
              "value": "={{ $('Webhook').first().json.body.data.key.remoteJid }}",
              "type": "string"
            },
            {
              "id": "375453f5-c979-48d0-9a77-f2e837c80da5",
              "name": "pushName",
              "value": "={{ $('Webhook').first().json.body.data.pushName }}",
              "type": "string"
            },
            {
              "id": "c1179eef-b150-4d05-89c1-3b85660ec6bd",
              "name": "fromMe",
              "value": "={{ $('Webhook').first().json.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "2ca406cb-0c5a-4e69-a005-ba35e81128da",
              "name": "messageType",
              "value": "={{ $('Webhook').first().json.body.data.messageType }}",
              "type": "string"
            },
            {
              "id": "f9189c75-e206-4c9d-a538-fadff9121f07",
              "name": "unique_id",
              "value": "={{ $('Webhook').first().json.body.instance }}_{{ $('Webhook').first().json.body.data.key.remoteJid.split('@')[0] }}",
              "type": "string"
            },
            {
              "id": "f305da1c-b096-4af0-ab8b-1af6798dcac8",
              "name": "debounce_time",
              "value": 5,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "id": "488d70e1-9a6a-446b-bda5-67bd220cd207",
      "name": "baseInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -10109.325581395351,
        1760
      ],
      "alwaysOutputData": false,
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=msgs_{{ $('chatInfo').first().json.unique_id }}"
      },
      "id": "9d7686bc-7e8c-4627-82f2-2cf0bed949a4",
      "name": "reset msgs",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5740,
        1800
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Captura Mensagem\n### Nota: Se for áudios/imagens transcreve para formato de texto\n*Obs.: No final monta estrutura JSON que será usada no restante do fluxo*",
        "height": 699.3376778124559,
        "width": 1629.5604480320626,
        "color": 5
      },
      "id": "66c911da-8303-4f39-b219-ed31dc36e11b",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -7500,
        1460
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nlet response = '';\n\nconst conversation = data.message.conversation;\nconst quotedMessage = data.contextInfo?.quotedMessage?.extendedTextMessage?.text;\nconst editedMessage = data.message.editedMessage?.message?.protocolMessage?.editedMessage?.extendedTextMessage?.text;\n\nif (quotedMessage) {\n  response = `Menção: ${quotedMessage}, Mensagem: ${conversation}`;\n} else if (editedMessage) {\n  response = `${editedMessage}*`;\n} else {\n  response = conversation;\n}\n\nreturn { output: response };"
      },
      "id": "d6b9a2b0-db7d-4d71-b5de-5ca1959b5a4f",
      "name": "Format Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6402,
        1580
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\n\n// data.messageTimestamp\n\nlet milis = $now.toMillis();\n\nreturn {\n  id: data.key.id,\n  origin: data.messageType,\n  output: $json.output,\n  timestamp: data.messageTimestamp,\n  datetime: DateTime.fromSeconds(data.messageTimestamp).toFormat('yyyy-MM-dd H:m:s'),\n  timestamp_local: milis,\n  datetime_local: DateTime.fromSeconds(milis).toFormat('yyyy-MM-dd H:m:s')\n};"
      },
      "id": "95e9347d-b808-4c90-967d-58e064567d4b",
      "name": "Structure Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6000,
        1800
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const data = $('Webhook').first().json.body.data;\nconst caption = data.message?.imageMessage?.caption;\nconst content = $input.item.json.content;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = caption\n    ? `${content} Legenda: ${caption}`\n    : `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para imagem com legenda';\n}\n\nreturn { output: response };"
      },
      "id": "2b71cb75-9e3c-456b-ba57-5eebc3c8a6d2",
      "name": "Format Transcription Image",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6400,
        1960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const content = $input.item.json.text;\nlet response = '';\n\n// Verifica se o conteúdo existe\nif (content) {\n  response = `Transcrição: ${content}`;\n} else {\n  response = 'Erro: json.content ausente para aúdio';\n}\n\nreturn { output: response };"
      },
      "id": "ac2506a7-5ae9-4fca-a6f7-226a654316fc",
      "name": "Format Transcription Audio",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6400,
        1800
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('baseInfo').first().json.evo_api }}/chat/getBase64FromMediaMessage/{{ $('baseInfo').item.json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": {\"key\": {\"id\": \"{{ $('Webhook').item.json.body.data.key.id }}\"}},\n  \"convertToMp4\": false\n}",
        "options": {}
      },
      "id": "5ab27e6a-ef49-4663-b19c-00e547c90ab8",
      "name": "Get Base64",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7420,
        1900
      ],
      "alwaysOutputData": false,
      "credentials": {
        "httpHeaderAuth": {
          "id": "T5OqvislWbgDr9Ek",
          "name": "Evolution Api Key"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "transcricao.ogg",
          "mimeType": "audio/ogg"
        }
      },
      "id": "62840619-96b6-465a-b6a8-fc0bbe507dc8",
      "name": "Convert To Audio",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -7060,
        1800
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "base64",
        "options": {
          "fileName": "imagem.jpeg",
          "mimeType": "image/jpeg"
        }
      },
      "id": "50a92fc1-af27-4f2b-ac9a-b78cc80d55c3",
      "name": "Convert To Image",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -7060,
        1960
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "a653ebe6-2cbf-41d5-a821-280b54847311",
      "name": "Fix Text 2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6160,
        1800
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "content": "## Adiciona Mensagem na Fila\n*Adiciona mensagem no final da fila para ser processada após o Debounce Time expirar*",
        "height": 290.7734320620505,
        "width": 719.3454738796464,
        "color": 3
      },
      "id": "7e7408e6-3ef4-405d-b8af-ddfac41aea37",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5809.32558139535,
        1680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0a106bfb-7d1a-4eaa-9d4e-2d933ed51839",
              "leftValue": "={{ $('get chat 1').first().json.chat }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "93527fdb-b6cf-4db6-a8d5-5c75fe1eb28d",
      "name": "has chat?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -8060.32558139535,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}"
      },
      "id": "84a340af-b8e7-4f48-a156-fc9f424613e2",
      "name": "delete chat",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8380.325581395351,
        1660
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.chat.parseJson().removeField('fromMe').removeField('debounce_time') }}",
        "options": {}
      },
      "id": "df50881e-f6f8-48a1-82bc-317141f0ebaf",
      "name": "chatInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -7689.32558139535,
        1660
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}",
        "value": "={{ $('baseInfo').first().json.removeField('messageType').toJsonString() }}"
      },
      "id": "7dcb5bfc-4710-4460-ba5d-821fe867ad7b",
      "name": "init chat",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8080,
        1860
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "=msgs_{{ $('chatInfo').first().json.unique_id }}",
        "messageData": "={{ $('Structure Message').first().json.toJsonString() }}",
        "tail": true
      },
      "id": "3bad0a31-6bd7-4b3d-8b40-d19a49439b2a",
      "name": "msg to queue",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5571,
        1800
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "chat",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "2fbc85fe-5cb3-4fd4-9f20-bf62def91931",
      "name": "get chat 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8220.325581395351,
        1660
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "chat",
        "key": "=chat_{{ $('baseInfo').first().json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "2326486f-f517-4527-8a91-85f8886f0c2b",
      "name": "get chat 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -7940.32558139535,
        1860
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {},
      "id": "1957eab2-edfa-451a-883a-72cc0988a1b5",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -5251,
        1800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "431dcbe2-fb2e-4864-803d-d968ddcb255f",
              "leftValue": "={{ $json.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a3d70f85-dc4e-4eda-9dbc-1f2058b96023",
      "name": "from me?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9920.325581395351,
        1760
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=block_{{ $json.unique_id }}",
        "value": "1",
        "expire": true,
        "ttl": 30
      },
      "id": "61eb2290-f9a5-4978-a24d-c488604a4070",
      "name": "set block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -9717.325581395351,
        1671
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "=block_{{ $json.unique_id }}",
        "keyType": "string",
        "options": {}
      },
      "id": "e8654a42-f559-409b-854c-782fa6cb92c5",
      "name": "get block AI",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -9717.325581395351,
        1831
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "af15b823-b848-4adf-be57-5ce022c321a8",
              "leftValue": "={{ $json.block }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2d72492e-9124-4eb9-8368-62d3d71d258b",
      "name": "AI blocked?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9520.325581395351,
        1740
      ]
    },
    {
      "parameters": {
        "content": "## Gerencia o Bloqueio da AI\n*Se enviado pelo dono do whatsapp, ele bloqueia por N segundos*",
        "height": 407.0742534707905,
        "width": 586.0266008245178
      },
      "id": "bc759cdd-1aad-4453-b032-1070bfd13ea4",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -9949.325581395351,
        1580
      ]
    },
    {
      "parameters": {
        "content": "## Gerencia o Chat/Sessão\n*Verifica se tem sessão, se não tiver cria com os dados do usuário*",
        "height": 440.5243062483743,
        "width": 856.5452909686502
      },
      "id": "38305ef2-041b-4426-ad91-b35d0fb4af33",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -8409.325581395351,
        1580
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=debounce_{{ $('chatInfo').first().json.unique_id }}",
        "value": "={{ $now.plus( $('baseInfo').first().json.debounce_time , 'seconds').toMillis() }}",
        "keyType": "string"
      },
      "id": "0639e6ae-8a2f-4e0a-a127-53bb29e116ce",
      "name": "set debounce",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5400,
        1800
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "conversation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "86e7e773-8586-458f-a1fb-2890f2030230",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "7f108034-a1be-4e90-b42e-e4f8a719e311",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "editedMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msg edited"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "256e7cf8-be54-4c41-ba80-2d9eb0a07563",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "da03e413-3422-419c-af1a-71ff87c307e2",
                    "leftValue": "={{ $('baseInfo').first().json.messageType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "782145e7-3743-4bea-bbed-ad816e8148dc",
      "name": "Message Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -7400,
        1620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "68ddab78-6782-443f-9682-326e7712f0d8",
              "leftValue": "={{ $json.active }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d4a1d7a9-76d7-4a19-bf22-a900ccbec3f1",
      "name": "Debounce is active?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -7340,
        2240
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "active",
        "key": "workflow_debounce",
        "keyType": "string",
        "options": {}
      },
      "id": "dc551730-05f3-4454-8d9c-f232c0316acd",
      "name": "debounce active?",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -7500,
        2240
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "operation": "activate",
        "workflowId": {
          "__rl": true,
          "value": "KCzwyXp5E0KjdlRc",
          "mode": "list",
          "cachedResultName": "AI 3 Debounce Msgs (#KCzwyXp5E0KjdlRc)"
        },
        "requestOptions": {}
      },
      "id": "002032de-3392-43c1-97d2-e4442ce8d23c",
      "name": "active debounce",
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        -6960,
        2200
      ],
      "credentials": {
        "n8nApi": {
          "id": "kuCc4NOcDaUS3bF4",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "workflow_debounce",
        "value": "1",
        "keyType": "string"
      },
      "id": "b7a160bc-7390-44ac-8323-403cf7821fe1",
      "name": "set wk debounce",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -7120,
        2200
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "model",
              "value": "whisper-large-v3"
            },
            {
              "name": "temperature",
              "value": "0.5"
            },
            {
              "name": "response_format",
              "value": "json"
            },
            {
              "name": "language",
              "value": "pt"
            }
          ]
        },
        "options": {}
      },
      "id": "ba79be4a-67ce-4eb3-9429-368ff7a5ed3f",
      "name": "Groq Analyze Audio",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6740,
        1800
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"Descreva todo o conteúdo da imagem, sem Acentos e sem hífens\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"data:image/jpeg;base64,{{ $('Convert To Image').item.binary.data.data }}\"\n          }\n        }\n      ]\n    },\n    {\n      \"role\": \"assistant\",\n      \"content\": \"\"\n    }\n  ],\n  \"model\": \"llama-3.2-11b-vision-preview\",\n  \"temperature\": 1,\n  \"max_tokens\": 1024,\n  \"top_p\": 1,\n  \"stream\": false,\n  \"stop\": null\n}\n",
        "options": {}
      },
      "id": "be36ec3f-089b-45eb-a453-6e69ef7bfb89",
      "name": "Groq Analyze Image",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -6840,
        1960
      ],
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "groqApi": {
          "id": "Qc9IFal2C1clPmRn",
          "name": "william"
        }
      }
    },
    {
      "parameters": {},
      "id": "092b8c8a-0753-4587-afc5-ead0b9c6a11b",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -7840.32558139535,
        1660
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8ab20a1-b06d-4840-b71f-4c53eb2b005c",
              "name": "content",
              "value": "={{ $json.choices[0].message.content ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "641b87c5-817e-4306-b6d5-2550020ccf55",
      "name": "Groq Normalize Image",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6620,
        1960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "479ad9fd-bb31-42db-a957-658e9e1d556f",
              "leftValue": "={{ $json.ignored_id.split(',').indexOf($('baseInfo').item.json.remoteJid.split('@')[0]) }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "33cc66ad-aee3-4dd5-865c-b7fdb5df4769",
      "name": "allow numbers",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -8600.325581395351,
        1671
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "ignore_numbers",
        "key": "=ignore_numbers_{{ $('baseInfo').first().json.instance }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "e895cadb-f620-4f52-8882-177da515bc60",
      "name": "get ignored numbers",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -9260.325581395351,
        1691
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.ignore_numbers.ignoreJids }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6b155476-99f1-4600-b774-9e55be875330",
      "name": "has ignored numbers?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9060.325581395351,
        1691
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd480120-b53b-4c64-9cbf-d5bfd813e50c",
              "name": "ignored_id",
              "value": "={{ $('get ignored numbers').first().json.ignore_numbers?.ignoreJids ?? $('set ignored numbers').first().json.ignoreJids ?? '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "028c093c-8fe0-43b8-a1fa-e6301ec22bb7",
      "name": "ignore numbers",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -8760.325581395351,
        1671
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=ignore_numbers_{{ $('baseInfo').first().json.instance }}",
        "value": "={{ $json }}",
        "keyType": "hash",
        "expire": true,
        "ttl": 600
      },
      "id": "78a994ad-0b00-404e-acb5-258344fcba60",
      "name": "set ignored numbers",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -8760.325581395351,
        1891
      ],
      "credentials": {
        "redis": {
          "id": "ePjUcKkuSrLqo1Tt",
          "name": "vps"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gerencia o Bloqueio de Números Ignorados\n*Se enviado pelo por um whatsapp na lista, ele não repassa a mensagem*",
        "height": 503.26329788234716,
        "width": 852.5550756813022
      },
      "id": "14980de3-c168-42a3-a79b-66960334ab34",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -9309.325581395351,
        1580
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ce07478d-5404-4b4b-b831-29f4e5037e5b",
      "name": "has ignored numbers? 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -9000.325581395351,
        1911
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "empresas",
        "filters": {
          "conditions": [
            {
              "keyName": "instance_name",
              "keyValue": "={{ $('baseInfo').first().json.instance }}"
            }
          ]
        }
      },
      "id": "34a4279a-e7cb-447b-9722-86831806bc71",
      "name": "fetch ignored numbers",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -9220.325581395351,
        1911
      ],
      "credentials": {
        "supabaseApi": {
          "id": "WWYYqpMcDDFZTW3g",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bba31f6b-7dc3-4dac-a090-c38d70065d40",
                    "leftValue": "={{ $json.mediaType }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "do nothing"
        }
      },
      "id": "754f8c30-4fbd-4aa3-93e7-1bee7546f716",
      "name": "Media Type",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7280,
        1900
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d4ebb3-bb32-4fc0-a6be-6635fda4b809",
              "name": "now",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "8026ebf3-3645-41cc-82ac-c119aa13ec40",
              "name": "seconds1",
              "value": "={{ $now.toSeconds() }}",
              "type": "string"
            },
            {
              "id": "5c1102ab-5471-4c1b-8a36-fea2deda6c39",
              "name": "seconds2",
              "value": "={{ $now.toSeconds().round() }}",
              "type": "string"
            },
            {
              "id": "de88acd0-4459-4bde-b57a-fd1f3c8dd0a2",
              "name": "seconds3",
              "value": "={{ $now.toMillis() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5ec46875-9936-4162-8a92-8fd1e21f3395",
      "name": "now_end",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5580,
        1280
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d4ebb3-bb32-4fc0-a6be-6635fda4b809",
              "name": "now",
              "value": "={{ $now }}",
              "type": "string"
            },
            {
              "id": "8026ebf3-3645-41cc-82ac-c119aa13ec40",
              "name": "seconds1",
              "value": "={{ $now.toSeconds() }}",
              "type": "string"
            },
            {
              "id": "5c1102ab-5471-4c1b-8a36-fea2deda6c39",
              "name": "seconds2",
              "value": "={{ $now.toSeconds().round() }}",
              "type": "string"
            },
            {
              "id": "de88acd0-4459-4bde-b57a-fd1f3c8dd0a2",
              "name": "seconds3",
              "value": "={{ $now.toMillis() }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "346a6279-1779-406c-9045-15ce6c3d6620",
      "name": "now_start",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -10100,
        1440
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8026ebf3-3645-41cc-82ac-c119aa13ec40",
              "name": "seconds1",
              "value": "={{ $json.seconds1 - $('now_start').item.json.seconds1 }}",
              "type": "string"
            },
            {
              "id": "5c1102ab-5471-4c1b-8a36-fea2deda6c39",
              "name": "seconds2",
              "value": "={{ $json.seconds2 - $('now_start').item.json.seconds2 }}",
              "type": "string"
            },
            {
              "id": "de88acd0-4459-4bde-b57a-fd1f3c8dd0a2",
              "name": "seconds3",
              "value": "={{ $json.seconds3 - $('now_start').item.json.seconds3 }}",
              "type": "string"
            },
            {
              "id": "b000494f-8e7c-4b21-9b32-9b79506dc3f8",
              "name": "diff",
              "value": "={{ ($json.seconds3 - $('now_start').item.json.seconds3)/1000 }}",
              "type": "string"
            },
            {
              "id": "1476423d-be33-45d0-8b1a-8163863853f8",
              "name": "expire_at",
              "value": "={{ $json.seconds3.toDateTime('ms').plus( $('baseInfo').first().json.debounce_time , 'seconds').toSeconds() }}",
              "type": "string"
            },
            {
              "id": "bfaad864-a656-46c7-97c9-89c51e5675e8",
              "name": "expire_at2",
              "value": "={{ $json.seconds3.toDateTime('ms').plus( $('baseInfo').first().json.debounce_time , 'seconds').toMillis() }}",
              "type": "string"
            },
            {
              "id": "4e1a1734-15c2-4912-a989-7bfdd2a698e7",
              "name": "expire_at3",
              "value": "={{ $json.seconds3.toDateTime('ms').plus( $('baseInfo').first().json.debounce_time , 'seconds') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "22772664-508e-4915-8088-2913690ea630",
      "name": "nows_diff",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5400,
        1400
      ],
      "disabled": true
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "id": "5d084383-e2f2-4cfc-8884-dae483ba091e",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        -5220,
        1180
      ],
      "disabled": true
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini-2024-07-18",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI-2024-07-18"
        },
        "text": "Descreva todo o conteúdo da imagem, sem Acentos e sem hífens",
        "inputType": "base64",
        "options": {}
      },
      "id": "52707c7b-441d-44ca-ba13-1c6fc5dca2ed",
      "name": "Analyze Image",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.4,
      "position": [
        -6009.32558139535,
        1500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {
          "language": "pt"
        }
      },
      "id": "5975e4f2-4c0e-4e4f-8eb8-5a8609f91bef",
      "name": "Analyze Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [
        -6169.32558139535,
        1500
      ],
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 5000,
      "credentials": {
        "openAiApi": {
          "id": "dRR3EqW0FEAbSHgt",
          "name": "william"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "f67c8094-022b-4aef-bb16-c7e430158fd9",
        "options": {}
      },
      "id": "975667de-642b-4bbd-83be-3999190f2b88",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -10309.325581395351,
        1760
      ],
      "webhookId": "f67c8094-022b-4aef-bb16-c7e430158fd9"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-09-27T14:34:01.317Z",
      "updatedAt": "2024-09-27T14:34:01.317Z",
      "id": "ZoTSEGR97fzorfDz",
      "name": "AI"
    },
    {
      "createdAt": "2024-09-27T17:42:17.034Z",
      "updatedAt": "2024-09-27T17:42:17.034Z",
      "id": "TsfCA8eZuTObjOfy",
      "name": "Backup"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-10-07T21:45:32.831Z",
  "versionId": "1fa39e53-fd30-4d75-8f8c-3da8adcf0350"
}