{
  "active": false,
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Media": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Media",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Beautify URL": {
      "main": [
        [
          {
            "node": "Fix Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Categorizing Message": {
      "main": [
        [
          {
            "node": "Split Out Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix Text": {
      "main": [
        [
          {
            "node": "Categorizing Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Status": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Address": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Store Delivery Fee": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "get vector store": {
      "main": [
        [
          {
            "node": "has vector store?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has vector store?": {
      "main": [
        [
          {
            "node": "vector store",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "fetch vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch vector store": {
      "main": [
        [
          {
            "node": "has vector store? 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has vector store? 2": {
      "main": [
        [
          {
            "node": "set vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set vector store": {
      "main": [
        [
          {
            "node": "vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete vector store": {
      "main": [
        [
          {
            "node": "get vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "vector store": {
      "main": [
        [
          {
            "node": "delete user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Status Pedido": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "reset memo": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Link Login": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Account User": {
      "main": [
        [
          {
            "node": "set user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set user account": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get user account": {
      "main": [
        [
          {
            "node": "has user account?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "has user account?": {
      "main": [
        [
          {
            "node": "userAccount",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Account User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "delete user account": {
      "main": [
        [
          {
            "node": "get user account",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "config prompt": {
      "main": [
        [
          {
            "node": "reset memo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory 2": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "messageInfo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "chatInput": {
      "main": [
        [
          {
            "node": "chatConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Messages": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messageInfo": {
      "main": [
        [
          {
            "node": "delete vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "userAccount": {
      "main": [
        [
          {
            "node": "config prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Beautify URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qdant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Tool",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-03T14:25:42.238Z",
  "id": "hogj78kubmV3wzVI",
  "meta": null,
  "name": "AI 4 Process Message",
  "nodes": [
    {
      "parameters": {
        "model": "gpt-4o-mini-2024-07-18",
        "options": {
          "temperature": 0.4
        }
      },
      "id": "df60baa8-d75a-470d-8357-f8d20f8e01a8",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        260,
        920
      ],
      "credentials": {
        "openAiApi": {
          "id": "apFg4kZ0LYjZ2viY",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "content": "## Gera a Resposta\nObs.: Seleciona a Base de Dados a ser usada de acordo com a Empresa de maneira Dinâmica e a usa para responder a solicitação",
        "height": 584.136756451777,
        "width": 768.3093052403206
      },
      "id": "81978439-4702-4dd4-b53e-f0fefdd2dfb6",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        60,
        640
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "73f103db-d66f-4b16-88ad-c26c1c6b74f2",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        380,
        920
      ],
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('messageInfo').first().json.evo_api }}/message/sendText/{{ $('messageInfo').first().json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}\",\n  \"text\": \"{{ $json.output.content.replace(/^\\n+/g, '') }}\",\n  \"delay\": 2000,\n  \"linkPreview\": true\n} ",
        "options": {}
      },
      "id": "af37a81d-c210-4995-ae49-c479deb1e641",
      "name": "Send Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2100,
        1020
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "zqMmAuGQEqlSQI88",
          "name": "evolution local"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d0136ae2-ddd9-4ea4-8bc8-8549c13fee86",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1740,
        740
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('messageInfo').first().json.evo_api }}/message/sendMedia/{{ $('messageInfo').first().json.instance }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ $('messageInfo').first().json.remoteJid.split('@')[0] }}\",\n  \"mediatype\": \"{{ $json.output.type }}\",\n  \"mimetype\": \"image/png\",\n  \"caption\": \"{{ $json.output.caption.replace(/^\\n+/g, '') ?? '' }}\",\n  \"media\": \"{{ $json.output.url }}\",\n  \"fileName\": \"{{ $json.output.url.split('/').last().replace($json.output.url.split('.').last(), 'png') }}\",\n  \"delay\": 2000\n} ",
        "options": {}
      },
      "id": "0e1159fc-6051-4fb7-b159-2445b415299f",
      "name": "Send Media",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2100,
        760
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "zqMmAuGQEqlSQI88",
          "name": "evolution local"
        }
      }
    },
    {
      "parameters": {
        "content": "# Enviar o Resultado para o Whatsapp",
        "height": 610.094292552082,
        "width": 661.5465394209826,
        "color": 4
      },
      "id": "dda9c45e-890b-4c94-852d-a615c525d09c",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1640,
        640
      ]
    },
    {
      "parameters": {
        "content": "# Faz o tratamento da Resposta",
        "height": 286.6572100709807,
        "width": 702.7265374935415,
        "color": 5
      },
      "id": "cae264f9-ba29-47c7-951f-98697413c337",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        871,
        640
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "text",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "bd6c6ac4-8ebd-4d14-9935-1fd270106c48",
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "image",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "8a8907db-2f29-4fc3-a50d-264a2c5d015e",
                    "leftValue": "={{ $json.output.type }}",
                    "rightValue": "=video",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Video"
            }
          ]
        },
        "options": {}
      },
      "id": "2cffdf8e-feab-49da-bd12-addfaaecbae8",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1880,
        960
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Função 1: Remove caption de links que não são imagens ou vídeos\nfunction removeCaptionFromLinks(text) {\n  // Expressão regular para identificar links que não são imagens ou vídeos\n  const regexLinks = /\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+)\\)/gi;\n  \n  return text.replace(regexLinks, (match, caption, url) => {\n    // Se o link não for de imagem ou vídeo, remove o caption e mantém só a URL\n    if (!url.match(/\\.(jpeg|jpg|png|gif|bmp|webp|avif|mp4|mov|avi|wmv)$/i)) {\n      return url;\n    }\n    return match; // Mantém o link inalterado se for uma imagem ou vídeo\n  });\n}\n\nconst message = $input.item.json.output;\n\n// Primeira função: remove captions de links não-imagens/vídeos\ncleanedMessage = removeCaptionFromLinks(message);\n\nreturn { output: cleanedMessage };"
      },
      "id": "47608f75-5c9f-475b-b225-6e5367fac129",
      "name": "Beautify URL",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        940,
        740
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const message = $input.item.json.output;\n\nconst regex = /(?:\\!\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\[([^\\]]*)\\]\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|(?:\\((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif))\\))|((https?:\\/\\/[^\\s]+?\\.(?:jpeg|jpg|png|gif|bmp|webp|avif)))/gi;\n\nconst parts = [];\nlet lastIndex = 0;\nlet match;\n\nwhile ((match = regex.exec(message)) !== null) {\n  // Adiciona o texto entre os matches\n  if (match.index > lastIndex) {\n    let content = message.slice(lastIndex, match.index).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n    // Remove o '-' desnecessário no final do texto, se presente\n    if (content.endsWith('-')) {\n      content = content.slice(0, -1).trim();\n    }\n    if (content) {\n      content = content.replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n      parts.push({ type: 'text', content });\n    }\n  }\n\n  // Adiciona as imagens ou links encontrados\n  if (match[1]) {\n    parts.push({ type: 'image', caption: match[1], url: match[2] });\n  } else if (match[3]) {\n    parts.push({ type: 'image', caption: match[3], url: match[4] });\n  } else if (match[5] || match[6]) {\n    parts.push({ type: 'image', url: match[5] || match[6] });\n  }\n\n  // Atualiza o último índice processado\n  lastIndex = regex.lastIndex;\n}\n\n// Adiciona o texto final, se houver\nif (lastIndex < message.length) {\n  let finalContent = message.slice(lastIndex).replace(/^(\\\\n)+|(\\\\n)+$/g, '').trim();\n  if (finalContent.endsWith('-')) {\n    finalContent = finalContent.slice(0, -1).trim();\n  }\n  if (finalContent) {\n    parts.push({ type: 'text', content: finalContent });\n  }\n}\n\n// Verifica se a parte é um vídeo e adiciona\nparts.forEach(part => {\n  if (part.type === 'url' && part.url.match(/\\.(mp4|mov|avi|wmv)$/)) {\n    part.type = 'video';\n  }\n});\n\nreturn { output: parts };\n"
      },
      "id": "7586e697-9f8c-4f26-b0f8-4e71d6430c54",
      "name": "Categorizing Message",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1260,
        740
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "include": "allOtherFields",
        "options": {}
      },
      "id": "676dcaaa-13d1-405c-8f25-095bda941c1a",
      "name": "Split Out Messages",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1420,
        740
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "75d6e859-8379-4a34-8daf-b34c6a450a09",
              "name": "output",
              "value": "={{ $json.output.replaceAll('\\n', '\\\\n').replaceAll('**', '*').replace(/(?<!\\\\)\"/g, '\\\\\"') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d8a88ae0-fdfd-4268-8197-2a5f9fd2c601",
      "name": "Fix Text",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1100,
        740
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar status da loja, se ela esta aberta ou fechada, funcionando no momento ou não",
        "url": "=https://ibox.delivery/api/whatsapp/store",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "instance_name",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.instance }}"
            },
            {
              "name": "block",
              "valueProvider": "fieldValue",
              "value": "status"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "status"
      },
      "id": "07c5d150-9d3f-478e-a8da-f166b95d71e9",
      "name": "Get Store Status",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        920,
        1060
      ]
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar endereço da loja",
        "url": "=https://ibox.delivery/api/whatsapp/store",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "instance_name",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.instance }}"
            },
            {
              "name": "block",
              "valueProvider": "fieldValue",
              "value": "address"
            }
          ]
        },
        "optimizeResponse": true
      },
      "id": "7c63cea1-e89d-4fc8-97f7-660f556103cf",
      "name": "Get Store Address",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1040,
        1060
      ],
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar taxas de entrega cobrada pela loja, consultar tempo médio das entregas, valor mínimo, se entrega em outras localidades que não estejam registradas",
        "url": "=https://ibox.delivery/api/whatsapp/store",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "instance_name",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.instance }}"
            },
            {
              "name": "block",
              "valueProvider": "fieldValue",
              "value": "delivery_fees"
            }
          ]
        },
        "optimizeResponse": true,
        "dataField": "delivery_fees"
      },
      "id": "81249d98-b645-4fa4-96da-fce2b555d1fc",
      "name": "Get Store Delivery Fee",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1140,
        1060
      ]
    },
    {
      "parameters": {},
      "id": "7d85d83f-4906-4ed5-808d-c9c7351221a0",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1660,
        700
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.body ?? $json }}",
        "options": {}
      },
      "id": "a1c8bd90-6ccc-497d-8766-4c38148e6b94",
      "name": "messageInfo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1500,
        700
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "425a712d-f598-4e72-a99e-65efb704c401",
        "options": {}
      },
      "id": "b33e9e38-7049-497f-9691-c48088b3f082",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1738,
        898
      ],
      "webhookId": "425a712d-f598-4e72-a99e-65efb704c401",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "empresas",
        "filters": {
          "conditions": [
            {
              "keyName": "instance_name",
              "keyValue": "={{ $('messageInfo').first().json.instance }}"
            }
          ]
        }
      },
      "id": "5281ea0b-7f89-43b8-92e3-32818e995744",
      "name": "fetch vector store",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1120,
        920
      ],
      "credentials": {
        "supabaseApi": {
          "id": "B0o4LzzvJ6puFW0g",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "=vector_store",
        "key": "=vector_store_{{ $('messageInfo').first().json.instance }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "59d54248-6ef8-4e55-88f6-0c35af870f50",
      "name": "get vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1298,
        918
      ],
      "alwaysOutputData": false,
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_store.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "045e77ff-9a40-474b-a2f0-f381de10e1d2",
      "name": "has vector store?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1120,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.vector_name }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "af9a8ac4-6ebd-4f73-b491-1a0cf5a77b05",
      "name": "has vector store? 2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -938,
        798
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=vector_store_{{ $('messageInfo').first().json.instance }}",
        "value": "={{ $json }}",
        "keyType": "hash",
        "expire": true,
        "ttl": 600
      },
      "id": "b0e8ae6a-f061-4f27-87e9-141473376865",
      "name": "set vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -778,
        918
      ],
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.vector_store ?? $json }}",
        "options": {}
      },
      "id": "572b4a11-9933-4fd5-821f-79a726c2edcc",
      "name": "vector store",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -760,
        700
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=vector_store_{{ $json.instance }}"
      },
      "id": "539f61a4-59ab-4c4c-8bb3-8ef114850d76",
      "name": "delete vector store",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1300,
        700
      ],
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "model": "llama-3.2-3b-preview",
        "options": {
          "temperature": 0
        }
      },
      "id": "2d179afa-d669-449a-acda-699bb0152272",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        640,
        1100
      ],
      "credentials": {
        "groqApi": {
          "id": "yOzNKNU8zoJ0SLOd",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para retornar status do pedido do usuário na loja, somente se o código do pedido {code} foi informado ou se o usuário informou que não tinha e quer ver o ultimo pedido, então irá pesquisar o ultimo pedido realizado.\n\n# pergunte se usuário deseja ver somente o status ou o pedido completo.",
        "url": "=https://ibox.delivery/api/whatsapp/order/status",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "store",
              "valueProvider": "fieldValue",
              "value": "hamburgueria"
            },
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0] }}"
            },
            {
              "name": "code",
              "valueProvider": "fieldValue",
              "value": "{code}"
            },
            {
              "name": "get_items",
              "valueProvider": "fieldValue",
              "value": "{get_items}"
            }
          ]
        },
        "placeholderDefinitions": {
          "values": [
            {
              "name": "code",
              "description": "o código do pedido tem no máximo 6 dígitos numérico, se não for informado envie como vazio (null)",
              "type": "string"
            },
            {
              "name": "get_items",
              "description": "preencha como 1 só se for solicitado o pedido completo, caso contrário coloque vazio (null)",
              "type": "string"
            }
          ]
        }
      },
      "id": "b71f8a8e-2b4c-4eb9-88f0-2a5b8b90c83c",
      "name": "Get Status Pedido",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1380,
        1060
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=memo_{{ $('messageInfo').first().json.unique_id }}"
      },
      "id": "8f778c06-1163-4a8c-a9b2-bcaa16ba952c",
      "name": "reset memo",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        120,
        740
      ],
      "alwaysOutputData": true,
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "use essa ferramenta para gerar o link para o usuário realizar um pedido/compra sempre que for solicitado",
        "method": "POST",
        "url": "=https://ibox.delivery/api/whatsapp/store/link",
        "sendQuery": true,
        "parametersQuery": {
          "values": [
            {
              "name": "store",
              "valueProvider": "fieldValue",
              "value": "hamburgueria"
            },
            {
              "name": "number",
              "valueProvider": "fieldValue",
              "value": "={{ $('messageInfo').first().json.remoteJid.split('@')[0] }}"
            }
          ]
        },
        "optimizeResponse": true,
        "fieldsToInclude": "selected",
        "fields": "url"
      },
      "id": "f49695bd-36da-4712-99ca-ef2306aeeedf",
      "name": "Get Link Login",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1260,
        1060
      ]
    },
    {
      "parameters": {
        "content": "## Tools iBox Delivery",
        "height": 240.3217863972307,
        "width": 649.8050918862461,
        "color": 2
      },
      "id": "2fa2077b-d4a9-45a8-a7f1-50a3c412e553",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        880,
        980
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=user_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "value": "={{ $json.user ?? {} }}",
        "keyType": "hash",
        "expire": true,
        "ttl": "={{ $json.user ? 120 : 60 }}"
      },
      "id": "0b551652-ae4c-45b6-bc1e-5822d7623f0e",
      "name": "set user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -158,
        899
      ],
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://ibox.delivery/api/whatsapp/user?number={{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "options": {}
      },
      "id": "5af65574-3689-4175-bd2f-08eba5bc8576",
      "name": "Get Account User",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -318,
        899
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "user_account",
        "key": "=use_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}",
        "keyType": "hash",
        "options": {}
      },
      "id": "04c2b2ec-3000-4314-ba85-96b6b94d0601",
      "name": "get user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -518,
        919
      ],
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cc151548-39ab-4280-8766-cb8f68fc41d8",
              "leftValue": "={{ $json.user_account.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "64ae8860-304e-4f9a-8a7f-0a64b5a799c8",
      "name": "has user account?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -318,
        699
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=use_account_{{ $('messageInfo').item.json.remoteJid.split('@')[0] }}"
      },
      "id": "6c396874-1a47-4ff5-a291-992c57fb8f67",
      "name": "delete user account",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -518,
        699
      ],
      "credentials": {
        "redis": {
          "id": "OBaygrKwLFGSUCWa",
          "name": "redis local"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Tenta retornar os dados do Usuário",
        "height": 435.2975787523367,
        "width": 598.5677101799579,
        "color": 5
      },
      "id": "e87c4bf5-97a4-400c-8de4-f07bb135543f",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -580,
        640
      ]
    },
    {
      "parameters": {
        "content": "## Retorna os dados da Loja com base na Instância",
        "height": 483.3176121655175,
        "width": 731.8422362672346,
        "color": 4
      },
      "id": "629e2775-018b-4242-b5f6-c32f2bab1be2",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1358,
        639
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "d2b58739-c311-4cb5-8b89-0a3e8b4f7041",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        280,
        1100
      ],
      "credentials": {
        "openAiApi": {
          "id": "apFg4kZ0LYjZ2viY",
          "name": "william"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "08eccb40-00d8-4101-a52e-f6cbaf728cd1",
              "name": "system",
              "value": "=## Função\nResponder a perguntas do usuário\n\n## Objetivo\nProcessar as mensagens dos clientes e fornecer respostas com base nas regras e informações da base de dados TOOL \"store_info\".\n\n## Sobre o atendiemnto\nSempre inicie sua conversa perguntando educadamente se o usuário deseja realizar um pedido ou precisa de ajuda com algo relacionado.\nA data e hora atuais são {{ $now.toISO() }}. Todas as datas devem ser fornecidas no formato ISO nas requisições, não nas respostas para o usuário.\n\n## Responsabilidades\n1. Analisar a intenção da pergunta do cliente (fazer pedido, horários, endereço, formas de pagamento, status da loja, etc.).\n2. Fornecer informações claras, educadas, informais e humoradas de acordo com a base de informações.\n3. Utilizar no máximo 2 emojis por resposta para manter a interação leve e amigável.\n4. Sugerir produtos e taxas de entrega conforme as regras:\n   - Mencionar no máximo 3 produtos.\n   - Mencionar até 3 taxas de entrega por vez.\n5. Fornecer o link direto do menu, sem formatação, quando solicitado a intenção de compra.\n6. Manter o tom de conversa descontraído, com mensagens objetivas e curtas.\n7. Sempre que você encontrar um texto dentro de chaves `{}`, busque o valor correspondente na base de dados TOOL \"store_info\". Não retorne o texto literal, mas sim o valor real associado.\n8. Enviar imagens apenas de produtos específicos quando solicitado, sempre usando a base de dados TOOL \"store_info\".\n9. Dividir respostas longas em partes para facilitar a compreensão.\n10. NUNCA INVENTE INFORMAÇÃO que não esteja na base de dados TOOL \"store_info\".\n11. Pode adicionar o nome do usuário na resposta, quando achar necessário.\n12. Sugira produtos disponíveis na loja usando a base de dados 'store_info'.\n\n# Para cancelamento de pedido\n1. Primeiro, localize o pedido do usuário a ser cancelado.\n2. Se não tiver como cancelado, informe que o cancelamento é feito somente por ligação com o código do pedido.\n\n## Sobre o usuário\nO nome do usuário é {{ $('userAccount').first().json.nome ?? $('messageInfo').first().json.pushName }}, seu e-mail é {{ $('userAccount').first().json.email ?? '' }}, o endereço é {{ $('userAccount').first().json.endereco ?? '' }} e o ID da sessão do usuário é {{ $('messageInfo').first().json.unique_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b0d13f72-406a-4b31-8613-647706c137e6",
      "name": "config prompt",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        980
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={{ $json.user_account ?? $json.user ?? {} }}",
        "options": {}
      },
      "id": "566bf48c-9a08-49e2-ac22-0b41c196715b",
      "name": "userAccount",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -118,
        679
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "61e9431c-72af-4be9-b934-ee1613e4344d",
      "name": "Chat Memory Manager",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -600,
        1500
      ],
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=memo_{{ $('messageInfo').first().json.unique_id }}",
        "sessionTTL": 300,
        "contextWindowLength": 10
      },
      "id": "cb8f33fe-f07a-40d6-8829-caf9026a11b5",
      "name": "Redis Chat Memory 2",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.3,
      "position": [
        -280,
        1540
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "store_info",
        "description": "use essa ferramenta para retornar produtos/serviços fornecidos pela loja, formas de pagamento aceitas, endereço da loja e demais informações não entregue pelas outras tools",
        "topK": 10
      },
      "id": "1ebdc545-2692-4dc7-a422-208dd98eddc1",
      "name": "Vector Store Tool",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        600,
        840
      ]
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n    \"evo_api\": \"https://apiwp.wmst.com.br\",\n    \"instance\": \"ibox_cli_23\",\n    \"remoteJid\": \"5512982184879@s.whatsapp.net\",\n    \"pushName\": \"W.M. Soluções Tecnologicas\",\n    \"fromMe\": false,\n    \"unique_id\": \"ibox_cli_23_5512982184879\",\n    \"debounce_time\": 5,\n    \"conversation\": \"{{ $json.chatInput }}\"\n  }",
        "options": {}
      },
      "id": "6da15906-f66f-463f-b5aa-f9bc6c7bc454",
      "name": "chatConfig",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1538,
        518
      ],
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "id": "69509517-28e8-4ac6-afd0-ad6d419b8c5e",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        660,
        480
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=1",
        "contextWindowLength": 10
      },
      "id": "fe4fea20-ee70-4794-b4b5-edd6ce9cbbae",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.2,
      "position": [
        460,
        460
      ],
      "disabled": true
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "id": "9133861e-9862-49b2-94b3-564a4a3e7e1e",
      "name": "chatInput",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1738,
        518
      ],
      "webhookId": "3d85486d-8f87-4abd-8579-bef506d74bef",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('messageInfo').first().json.conversation }}",
        "options": {
          "systemMessage": "={{ $('config prompt').first().json.system }}"
        }
      },
      "id": "ee921695-9051-4976-b192-19bfd7844fda",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        260,
        740
      ]
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "={{ $('vector store').first().json.vector_name }}",
          "mode": "id"
        },
        "options": {}
      },
      "id": "4294321c-d63d-40a8-8394-11d1ba3cddaf",
      "name": "Qdant Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        400,
        1060
      ],
      "credentials": {
        "qdrantApi": {
          "id": "bBhkyjVVPesLbbM6",
          "name": "qdrant local"
        }
      }
    }
  ],
  "pinData": {
    "Execute Workflow Trigger": [
      {
        "json": {
          "evo_api": "https://apiwp.wmst.com.br",
          "instance": "ibox_cli_23",
          "remoteJid": "5512982184879@s.whatsapp.net",
          "pushName": "William",
          "fromMe": false,
          "unique_id": "ibox_cli_23_5512982184879",
          "debounce_time": 5,
          "conversation": "1 - Quero pedir"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-10-03T14:02:12.218Z",
      "updatedAt": "2024-10-03T14:02:12.218Z",
      "id": "Qx5hdtOeGw5RMkau",
      "name": "Backup"
    },
    {
      "createdAt": "2024-10-03T14:02:12.218Z",
      "updatedAt": "2024-10-03T14:02:12.218Z",
      "id": "ePaEfPWjwBhgkRd0",
      "name": "AI"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-10-05T05:56:49.529Z",
  "versionId": "b42b8587-0bec-42b6-81d5-b0cb27d91aeb"
}